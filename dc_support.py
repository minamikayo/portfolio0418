import tkinter as tk
import tkinter.font
import docx
import jaconv


def mouse_y_scroll(event):
    if event.delta > 0:
        canvas.yview_scroll(-1, 'units')
    elif event.delta < 0:
        canvas.yview_scroll(1, 'units')
        

# ボタンを有効にする関数
def btn_normal(btns):# 引き数にリストを渡す
    for btn in btns:
        btn["state"] = "normal"
    
# ボタンを無効にする関数
def btn_disable(btns):# 引き数にリストを渡す
    for btn in btns:
        btn["state"] = "disable"
    
# ラジオボタンを選択されていない状態にする関数
def v_btn_non(v):
    v.set(10)

# チェックボタンを選択されていない状態にする
def chk_off(boolvars):# 引き数にリストを渡す
    for boolvar in boolvars:
        boolvar.set(False)

# テキストボックスを有効にする関数
def txt_normal(txt):
    txt["state"] = "normal"
    
# テキストボックスを無効にする関数    
def txt_disable(txt):
    txt["state"] = "disable"

# テキストボックスをクリアにする関数
def txt_clear(txt):
    txt.delete(0,tk.END)



# エラーメッセージを取り消す関数
def error_clear(error):
    error.configure(text="")


# ウィジェット配置(医療行為)
def place_medic(lbl,a,b,rds,chks):
    
    lbl.place(x=a,y=b)

    num = -1
    for rd in rds:
        num = num + 1# 何回目の処理なのかをこれで把握する
        rd.place(x=a+num*180,y=b+50)

    num = -1    
    for chk in chks[0:4]:
        num = num + 1
        chk.place(x=a+num*210,y=b+100)

    num = -1
    for chk in chks[4:8]:
        num = num + 1
        chk.place(x=a+num*210,y=b+150)

    num = -1
    for chk in chks[8:12]:
        num = num + 1
        chk.place(x=a+num*210,y=b+200)
        

def place_medic_1(lbl,lbl_error,a,b,rds,chks):
    
    lbl.place(x=a,y=b)

    lbl_error.place(x=a+200,y=b)

    num = -1
    for rd in rds:
        num = num + 1# 何回目の処理なのかをこれで把握する
        rd.place(x=a+num*180,y=b+50)

    num = -1    
    for chk in chks[0:4]:
        num = num + 1
        chk.place(x=a+num*210,y=b+100)

    num = -1
    for chk in chks[4:8]:
        num = num + 1
        chk.place(x=a+num*210,y=b+150)

    num = -1
    for chk in chks[8:12]:
        num = num + 1
        chk.place(x=a+num*210,y=b+200)

# ウィジェット配置(ADL)
def place_adl(lbl,a,b,rd1s,rd2s,chks):
    
    lbl.place(x=a,y=b)

    num = -1
    for rd1 in rd1s:
        num = num + 1# 何回目の処理なのかをこれで把握する
        rd1.place(x=a+num*180,y=b+50)
        
    num = -1    
    for chk in chks[0:4]:
        num = num + 1
        chk.place(x=a+num*240,y=b+100)

    num = -1
    for chk in chks[4:8]:
        num = num + 1
        chk.place(x=a+num*240,y=b+150)
    """
    num = -1
    for chk in chks[8:12]:
        num = num + 1
        chk.place(x=a+num*200,y=b+200)
    """
    num = -1
    for rd2 in rd2s:
        num = num + 1
        rd2.place(x=a+num*180,y=b+200)


# ウィジェット配置(ADL)
def place_adl_1(lbl,lbl_error,a,b,rd1s,rd2s,chks):
    
    lbl.place(x=a,y=b)

    lbl_error.place(x=a+200,y=b)

    num = -1
    for rd1 in rd1s:
        num = num + 1# 何回目の処理なのかをこれで把握する
        rd1.place(x=a+num*180,y=b+50)
        
    num = -1    
    for chk in chks[0:4]:
        num = num + 1
        chk.place(x=a+num*240,y=b+100)

    num = -1
    for chk in chks[4:8]:
        num = num + 1
        chk.place(x=a+num*240,y=b+150)
    """
    num = -1
    for chk in chks[8:12]:
        num = num + 1
        chk.place(x=a+num*200,y=b+200)
    """
    num = -1
    for rd2 in rd2s:
        num = num + 1
        rd2.place(x=a+num*180,y=b+200)



# データ型(ひな形)
{"【タスクリスト】":[],
 "【事前練習】":[],
 "【衛生材料】":[],
 "【介護用品】":[],
 "【家屋改修検討部位】":[],
 "【訪問看護介入依頼(連絡)項目】":[],
 "【ヘルパー介入依頼項目】":[],
 "【その他】":[],
 "【退院中にすること】":[],
 "【患者様に介助が必要なこと】":[],
 "【ケア等の事前練習】":[],
 "【必要な介護用品】":[],
 "【バリアフリー確認部位】":[],
 "【注意事項】":[],
 "【その他退院までにすること】":[],
 "【在宅での医療行為】":[],
 "【医療用麻薬】":[],
 "【ADL(体動)】":[],
 "【ADL(平行移動)】":[],
 "【ADL(階段昇降)】":[],
 "【ADL(移乗)】":[],
 "【ADL(食事準備等)】":[],
 "【ADL(摂食)】":[],
 "【ADL(排泄)】":[],
 "【ADL(入浴)】":[],
 "【ADL(口腔ケア)】":[],
 "【ADL(更衣)】":[],
 "【ADL(内服)】":[]}

# プログラム(本体)
def taiinshien():

    # 辞書型の値のリストが1つずつある場合はこの関数が使える
    def dc_list(dc):# 引き数に辞書型を渡す
        todo.extend(dc["【タスクリスト】"])
        training.extend(dc["【事前練習】"])
        medic.extend(dc["【衛生材料】"])
        care.extend(dc["【介護用品】"])
        reform.extend(dc["【家屋改修検討部位】"])
        nrs.extend(dc["【訪問看護介入依頼(連絡)項目】"])
        helper.extend(dc["【ヘルパー介入依頼項目】"])
        sonota.extend(dc["【その他】"])

        to_fam_todo.extend(dc["【退院中にすること】"])
        to_fam_care.extend(dc["【患者様に介助が必要なこと】"])
        to_fam_training.extend(dc["【ケア等の事前練習】"])
        to_fam_goods.extend(dc["【必要な介護用品】"])
        to_fam_barrier.extend(dc["【バリアフリー確認部位】"])
        to_fam_caution.extend(dc["【注意事項】"])
        to_fam_sonota.extend(dc["【その他退院までにすること】"])

        info_iryou.extend(dc["【在宅での医療行為】"])
        info_mayaku.extend(dc["【医療用麻薬】"])
        info_taidou.extend(dc["【ADL(体動)】"])
        info_heikou.extend(dc["【ADL(平行移動)】"])
        info_kaidan.extend(dc["【ADL(階段昇降)】"])
        info_ijou.extend(dc["【ADL(移乗)】"])
        info_junbi.extend(dc["【ADL(食事準備等)】"])
        info_sessyoku.extend(dc["【ADL(摂食)】"])
        info_haisetsu.extend(dc["【ADL(排泄)】"])
        info_nyuyoku.extend(dc["【ADL(入浴)】"])
        info_koukuu.extend(dc["【ADL(口腔ケア)】"])
        info_koui.extend(dc["【ADL(更衣)】"])
        info_naihuku.extend(dc["【ADL(内服)】"])


    # リストの要素を一つの文字列に変換
    def Str(lists):
        for list in lists:
            Strlist = "".join(list)
            return Strlist
            print(Strlist)

    
        
        

    
    # 空のリスト
    # 退院支援リスト
    # 【タスクリスト】
    todo = ["□スクリーニングシート記入\n","□面談・家族会(退院希望日より7日以内)\n","□多職種カンファレンス\n","□退院前カンファレンス\n","□MSW処方箋提出\n","□MSWに情報提供\n","□リハビリに情報提供\n","□緊急時の対応について確認\n","□退院サマリー記載\n"]
    # 【事前練習】
    training = []
    # 【衛生材料】
    medic = []
    # 【介護用品】
    care = []
    # 【家屋改修検討部位】
    reform = []
    # 【訪問看護介入依頼(連絡)項目】
    nrs = []
    # 【ヘルパー介入依頼項目】
    helper = []
    #【その他】
    sonota = []
    
    # 家族へ
    # 【退院中にすること】
    to_fam_todo = []
    # 【患者様に介助が必要なこと】
    to_fam_care = []
    # 【ケア等の事前練習】
    to_fam_training = []
    # 【必要な介護用品】
    to_fam_goods = []
    # 【バリアフリー確認部位】
    to_fam_barrier = []
    # 【注意事項】
    to_fam_caution = []
    # 【その他退院までにすること】
    to_fam_sonota = []

    # 患者情報
    # 【性別】
    info_gender = []
    # 【在宅医療等介入予定】
    info_yotei = []
    # 【既存の在宅医療等】
    info_zaitaku = []
    # 【障害保険・経済状況】
    info_m_hoken = []
    # 【介護保険】
    info_c_hoken = []
    # 【同居家族】
    info_fam = []
    # 【主な介護者】
    info_kaigo = []
    # 【在宅での医療行為】
    info_iryou = []
    # 【医療用麻薬】
    info_mayaku = []
    # 【ADL(体動)】
    info_taidou = ["≪体動≫　"]
    # 【ADL(平行移動)】
    info_heikou = ["≪平行移動≫　"]
    # 【ADL(階段昇降)】
    info_kaidan = ["≪階段昇降≫　"]
    # 【ADL(移乗)】
    info_ijou = ["≪移乗≫　"]
    # 【ADL(食事準備等)】
    info_junbi = ["≪食事準備等≫　"]
    # 【ADL(摂食)】
    info_sessyoku = ["≪摂食≫　"]
    # 【ADL(排泄)】
    info_haisetsu = ["≪排泄≫　"]
    # 【ADL(入浴)】
    info_nyuyoku = ["≪入浴≫　"]
    # 【ADL(口腔ケア)】
    info_koukuu = ["≪口腔ケア≫　"]
    # 【ADL(更衣)】
    info_koui = ["≪更衣≫　"]
    # 【ADL(内服)】
    info_naihuku = ["≪内服≫　"]
    # 【家屋環境】
    info_kaoku = []
    # 【患者が一人で過ごす時間】
    info_hitori = []
    # 【退院手段】
    info_syudan = []


    # 辞書型


    # 訪問診療(予定あり・既存あり)
    s__kison = {"【タスクリスト】":[],
                "【事前練習】":[],
                "【衛生材料】":[],
                "【介護用品】":[],
                "【家屋改修検討部位】":[],
                "【訪問看護介入依頼(連絡)項目】":[],
                "【ヘルパー介入依頼項目】":[],
                "【その他】":[],
                "【退院中にすること】":["□訪問診療\n"],
                "【患者様に介助が必要なこと】":[],
                "【ケア等の事前練習】":[],
                "【必要な介護用品】":[],
                "【バリアフリー確認部位】":[],
                "【注意事項】":[],
                "【その他退院までにすること】":[],
                "【在宅での医療行為】":[],
                "【医療用麻薬】":[],
                "【ADL(体動)】":[],
                "【ADL(平行移動)】":[],
                "【ADL(階段昇降)】":[],
                "【ADL(移乗)】":[],
                "【ADL(食事準備等)】":[],
                "【ADL(摂食)】":[],
                "【ADL(排泄)】":[],
                "【ADL(入浴)】":[],
                "【ADL(口腔ケア)】":[],
                "【ADL(更衣)】":[],
                "【ADL(内服)】":[]}

    # 訪問診療(予定あり・既存なし)
    s__kison_n = {"【タスクリスト】":["□訪問診療事業所を探す\n"],
                  "【事前練習】":[],
                  "【衛生材料】":[],
                  "【介護用品】":[],
                  "【家屋改修検討部位】":[],
                  "【訪問看護介入依頼(連絡)項目】":[],
                  "【ヘルパー介入依頼項目】":[],
                  "【その他】":[],
                  "【退院中にすること】":["□訪問診療\n"],
                  "【患者様に介助が必要なこと】":[],
                  "【ケア等の事前練習】":[],
                  "【必要な介護用品】":[],
                  "【バリアフリー確認部位】":[],
                  "【注意事項】":[],
                  "【その他退院までにすること】":[],
                  "【在宅での医療行為】":[],
                  "【医療用麻薬】":[],
                  "【ADL(体動)】":[],
                  "【ADL(平行移動)】":[],
                  "【ADL(階段昇降)】":[],
                  "【ADL(移乗)】":[],
                  "【ADL(食事準備等)】":[],
                  "【ADL(摂食)】":[],
                  "【ADL(排泄)】":[],
                  "【ADL(入浴)】":[],
                  "【ADL(口腔ケア)】":[],
                  "【ADL(更衣)】":[],
                  "【ADL(内服)】":[]}
    # 訪問診療(予定なし・未定)
    s__yotei_n = {"【タスクリスト】":["□必要時訪問診療介入を検討\n"],
                  "【事前練習】":[],
                  "【衛生材料】":[],
                  "【介護用品】":[],
                  "【家屋改修検討部位】":[],
                  "【訪問看護介入依頼(連絡)項目】":[],
                  "【ヘルパー介入依頼項目】":[],
                  "【その他】":[],
                  "【退院中にすること】":["□必要に応じて訪問診療介入を検討します。\n"],
                  "【患者様に介助が必要なこと】":[],
                  "【ケア等の事前練習】":[],
                  "【必要な介護用品】":[],
                  "【バリアフリー確認部位】":[],
                  "【注意事項】":[],
                  "【その他退院までにすること】":[],
                  "【在宅での医療行為】":[],
                  "【医療用麻薬】":[],
                  "【ADL(体動)】":[],
                  "【ADL(平行移動)】":[],
                  "【ADL(階段昇降)】":[],
                  "【ADL(移乗)】":[],
                  "【ADL(食事準備等)】":[],
                  "【ADL(摂食)】":[],
                  "【ADL(排泄)】":[],
                  "【ADL(入浴)】":[],
                  "【ADL(口腔ケア)】":[],
                  "【ADL(更衣)】":[],
                  "【ADL(内服)】":[]}
    # 訪問看護(予定あり・既存あり)
    n_kison = {"【タスクリスト】":["□訪問看護指示書を担当医に依頼\n"],
                "【事前練習】":[],
                "【衛生材料】":[],
                "【介護用品】":[],
                "【家屋改修検討部位】":[],
                "【訪問看護介入依頼(連絡)項目】":[],
                "【ヘルパー介入依頼項目】":[],
                "【その他】":[],
                "【退院中にすること】":["□訪問看護\n"],
                "【患者様に介助が必要なこと】":[],
                "【ケア等の事前練習】":[],
                "【必要な介護用品】":[],
                "【バリアフリー確認部位】":[],
                "【注意事項】":[],
                "【その他退院までにすること】":[],
                "【在宅での医療行為】":[],
                "【医療用麻薬】":[],
                "【ADL(体動)】":[],
                "【ADL(平行移動)】":[],
                "【ADL(階段昇降)】":[],
                "【ADL(移乗)】":[],
                "【ADL(食事準備等)】":[],
                "【ADL(摂食)】":[],
                "【ADL(排泄)】":[],
                "【ADL(入浴)】":[],
                "【ADL(口腔ケア)】":[],
                "【ADL(更衣)】":[],
                "【ADL(内服)】":[]}
    # 訪問看護(予定あり・既存なし)
    n_kison_n = {"【タスクリスト】":["□訪問看護指示書を担当医に依頼\n","□訪問看護事業所を探す\n"],
                  "【事前練習】":[],
                  "【衛生材料】":[],
                  "【介護用品】":[],
                  "【家屋改修検討部位】":[],
                  "【訪問看護介入依頼(連絡)項目】":[],
                  "【ヘルパー介入依頼項目】":[],
                  "【その他】":[],
                  "【退院中にすること】":["□訪問看護\n"],
                  "【患者様に介助が必要なこと】":[],
                  "【ケア等の事前練習】":[],
                  "【必要な介護用品】":[],
                  "【バリアフリー確認部位】":[],
                  "【注意事項】":[],
                  "【その他退院までにすること】":[],
                  "【在宅での医療行為】":[],
                  "【医療用麻薬】":[],
                  "【ADL(体動)】":[],
                  "【ADL(平行移動)】":[],
                  "【ADL(階段昇降)】":[],
                  "【ADL(移乗)】":[],
                  "【ADL(食事準備等)】":[],
                  "【ADL(摂食)】":[],
                  "【ADL(排泄)】":[],
                  "【ADL(入浴)】":[],
                  "【ADL(口腔ケア)】":[],
                  "【ADL(更衣)】":[],
                  "【ADL(内服)】":[]}
    # 訪問看護(予定なし・未定)
    n_yotei_n = {"【タスクリスト】":["□必要時訪問看護介入を検討\n"],
                  "【事前練習】":[],
                  "【衛生材料】":[],
                  "【介護用品】":[],
                  "【家屋改修検討部位】":[],
                  "【訪問看護介入依頼(連絡)項目】":[],
                  "【ヘルパー介入依頼項目】":[],
                  "【その他】":[],
                  "【退院中にすること】":["□必要に応じて訪問看護介入を検討します。\n"],
                  "【患者様に介助が必要なこと】":[],
                  "【ケア等の事前練習】":[],
                  "【必要な介護用品】":[],
                  "【バリアフリー確認部位】":[],
                  "【注意事項】":[],
                  "【その他退院までにすること】":[],
                  "【在宅での医療行為】":[],
                  "【医療用麻薬】":[],
                  "【ADL(体動)】":[],
                  "【ADL(平行移動)】":[],
                  "【ADL(階段昇降)】":[],
                  "【ADL(移乗)】":[],
                  "【ADL(食事準備等)】":[],
                  "【ADL(摂食)】":[],
                  "【ADL(排泄)】":[],
                  "【ADL(入浴)】":[],
                  "【ADL(口腔ケア)】":[],
                  "【ADL(更衣)】":[],
                  "【ADL(内服)】":[]}
    # 訪問介護(予定あり・既存あり)
    care_kison = {"【タスクリスト】":[],
                  "【事前練習】":[],
                  "【衛生材料】":[],
                  "【介護用品】":[],
                  "【家屋改修検討部位】":[],
                  "【訪問看護介入依頼(連絡)項目】":[],
                  "【ヘルパー介入依頼項目】":[],
                  "【その他】":[],
                  "【退院中にすること】":["□訪問介護(ヘルパー)\n"],
                  "【患者様に介助が必要なこと】":[],
                  "【ケア等の事前練習】":[],
                  "【必要な介護用品】":[],
                  "【バリアフリー確認部位】":[],
                  "【注意事項】":[],
                  "【その他退院までにすること】":[],
                  "【在宅での医療行為】":[],
                  "【医療用麻薬】":[],
                  "【ADL(体動)】":[],
                  "【ADL(平行移動)】":[],
                  "【ADL(階段昇降)】":[],
                  "【ADL(移乗)】":[],
                  "【ADL(食事準備等)】":[],
                  "【ADL(摂食)】":[],
                  "【ADL(排泄)】":[],
                  "【ADL(入浴)】":[],
                  "【ADL(口腔ケア)】":[],
                  "【ADL(更衣)】":[],
                  "【ADL(内服)】":[]}
    # 訪問介護(予定あり・既存なし)
    care_kison_n = {"【タスクリスト】":["□訪問介護事業所を探す\n"],
                    "【事前練習】":[],
                    "【衛生材料】":[],
                    "【介護用品】":[],
                    "【家屋改修検討部位】":[],
                    "【訪問看護介入依頼(連絡)項目】":[],
                    "【ヘルパー介入依頼項目】":[],
                    "【その他】":[],
                    "【退院中にすること】":["□訪問介護(ヘルパー)\n"],
                    "【患者様に介助が必要なこと】":[],
                    "【ケア等の事前練習】":[],
                    "【必要な介護用品】":[],
                    "【バリアフリー確認部位】":[],
                    "【注意事項】":[],
                    "【その他退院までにすること】":[],
                    "【在宅での医療行為】":[],
                    "【医療用麻薬】":[],
                    "【ADL(体動)】":[],
                    "【ADL(平行移動)】":[],
                    "【ADL(階段昇降)】":[],
                    "【ADL(移乗)】":[],
                    "【ADL(食事準備等)】":[],
                    "【ADL(摂食)】":[],
                    "【ADL(排泄)】":[],
                    "【ADL(入浴)】":[],
                    "【ADL(口腔ケア)】":[],
                    "【ADL(更衣)】":[],
                    "【ADL(内服)】":[]}
    # 訪問介護(予定なし・未定)
    care_yotei_n = {"【タスクリスト】":["□必要時訪問介護介入を検討\n"],
                    "【事前練習】":[],
                    "【衛生材料】":[],
                    "【介護用品】":[],
                    "【家屋改修検討部位】":[],
                    "【訪問看護介入依頼(連絡)項目】":[],
                    "【ヘルパー介入依頼項目】":[],
                    "【その他】":[],
                    "【退院中にすること】":["□必要に応じて訪問介護(ヘルパー)介入を検討します。\n"],
                    "【患者様に介助が必要なこと】":[],
                    "【ケア等の事前練習】":[],
                    "【必要な介護用品】":[],
                    "【バリアフリー確認部位】":[],
                    "【注意事項】":[],
                    "【その他退院までにすること】":[],
                    "【在宅での医療行為】":[],
                    "【医療用麻薬】":[],
                    "【ADL(体動)】":[],
                    "【ADL(平行移動)】":[],
                    "【ADL(階段昇降)】":[],
                    "【ADL(移乗)】":[],
                    "【ADL(食事準備等)】":[],
                    "【ADL(摂食)】":[],
                    "【ADL(排泄)】":[],
                    "【ADL(入浴)】":[],
                    "【ADL(口腔ケア)】":[],
                    "【ADL(更衣)】":[],
                    "【ADL(内服)】":[]}

    # 在宅酸素療法
    o2 = {"【タスクリスト】":["□HOT指示書を医師に依頼\n"],
          "【事前練習】":[],
          "【衛生材料】":[],
          "【介護用品】":[],
          "【家屋改修検討部位】":[],
          "【訪問看護介入依頼(連絡)項目】":["□在宅酸素療法\n"],
          "【ヘルパー介入依頼項目】":[],
          "【その他】":[],
          "【退院中にすること】":["□在宅酸素療法\n"],
          "【患者様に介助が必要なこと】":[],
          "【ケア等の事前練習】":[],
          "【必要な介護用品】":[],
          "【バリアフリー確認部位】":[],
          "【注意事項】":["□酸素使用中は火気厳禁(引火するため)\n"],
          "【その他退院までにすること】":[],
          "【在宅での医療行為】":["在宅酸素療法　　"],
          "【医療用麻薬】":[],
          "【ADL(体動)】":[],
          "【ADL(平行移動)】":[],
          "【ADL(階段昇降)】":[],
          "【ADL(移乗)】":[],
          "【ADL(食事準備等)】":[],
          "【ADL(摂食)】":[],
          "【ADL(排泄)】":[],
          "【ADL(入浴)】":[],
          "【ADL(口腔ケア)】":[],
          "【ADL(更衣)】":[],
          "【ADL(内服)】":[]}


    # 医療行為
    # CSCI
    csci = {"【タスクリスト】":[],
            "【事前練習】":["□CSCI(　月　日)\n"],
            "【衛生材料】":["◆CSCI\n","□ロック付きシリンジ10cc(   本)\n","□イントロカンセーフティ(   本)\n","□シュアプラグ(   個)\n","□延長チューブ50cm(   本)\n","□延長チューブ100cm(   本)\n","□スキナゲートスパット\n","□オプサイト\n","□メディポア\n","□アルコール綿花\n"],
            "【介護用品】":[],
            "【家屋改修検討部位】":[],
            "【訪問看護介入依頼(連絡)項目】":["□CSCI\n"],
            "【ヘルパー介入依頼項目】":[],
            "【その他】":[],
            "【退院中にすること】":["□持続皮下注射\n"],
            "【患者様に介助が必要なこと】":[],
            "【ケア等の事前練習】":["□持続皮下注射(　月　日)\n"],
            "【必要な介護用品】":[],
            "【バリアフリー確認部位】":[],
            "【注意事項】":[],
            "【その他退院までにすること】":[],
            "【在宅での医療行為】":["CSCI　　"],
            "【医療用麻薬】":[],
            "【ADL(体動)】":[],
            "【ADL(平行移動)】":[],
            "【ADL(階段昇降)】":[],
            "【ADL(移乗)】":[],
            "【ADL(食事準備等)】":[],
            "【ADL(摂食)】":[],
            "【ADL(排泄)】":[],
            "【ADL(入浴)】":[],
            "【ADL(口腔ケア)】":[],
            "【ADL(更衣)】":[],
            "【ADL(内服)】":[]}
    
    # 点滴(末梢)
    div = {"【タスクリスト】":[],
           "【事前練習】":[],
           "【衛生材料】":["◆点滴(末梢)\n","□スーパーキャス(   本)\n","□延長チューブ(   本)\n","□輸液セット20滴≒1ml(   本)\n","□輸液セット60滴≒1ml(   本)\n","□アルコール綿花\n","□オプサイト\n","□メディポア\n"],
           "【介護用品】":[],
           "【家屋改修検討部位】":[],
           "【訪問看護介入依頼(連絡)項目】":["□点滴(末梢)\n"],
           "【ヘルパー介入依頼項目】":[],
           "【その他】":[],
           "【退院中にすること】":["□点滴\n"],
           "【患者様に介助が必要なこと】":[],
           "【ケア等の事前練習】":[],
           "【必要な介護用品】":[],
           "【バリアフリー確認部位】":[],
           "【注意事項】":[],
           "【その他退院までにすること】":[],
           "【在宅での医療行為】":["点滴(末梢)　　"],
           "【医療用麻薬】":[],
           "【ADL(体動)】":[],
           "【ADL(平行移動)】":[],
           "【ADL(階段昇降)】":[],
           "【ADL(移乗)】":[],
           "【ADL(食事準備等)】":[],
           "【ADL(摂食)】":[],
           "【ADL(排泄)】":[],
           "【ADL(入浴)】":[],
           "【ADL(口腔ケア)】":[],
           "【ADL(更衣)】":[],
           "【ADL(内服)】":[]}

    # 点滴(CVポート)
    cvp = {"【タスクリスト】":[],
           "【事前練習】":[],
           "【衛生材料】":["◆点滴(CVポート)\n","CVポート針(   本)\n","□延長チューブ(   本)\n","□輸液セット20滴≒1ml(   本)\n","□輸液セット60滴≒1ml(   本)\n","□アルコール綿花\n","□ヘキシジンン綿棒(　本)\n","□Yガーゼ(　枚)\n","□単ガーゼ(　枚)\n""□オプサイト\n","□メディポア\n"],
           "【介護用品】":[],
           "【家屋改修検討部位】":[],
           "【訪問看護介入依頼(連絡)項目】":["□点滴(CVポート)\n"],
           "【ヘルパー介入依頼項目】":[],
           "【その他】":[],
           "【退院中にすること】":["□点滴\n"],
           "【患者様に介助が必要なこと】":[],
           "【ケア等の事前練習】":[],
           "【必要な介護用品】":[],
           "【バリアフリー確認部位】":[],
           "【注意事項】":[],
           "【その他退院までにすること】":[],
           "【在宅での医療行為】":["点滴(CVポート)　　"],
           "【医療用麻薬】":[],
           "【ADL(体動)】":[],
           "【ADL(平行移動)】":[],
           "【ADL(階段昇降)】":[],
           "【ADL(移乗)】":[],
           "【ADL(食事準備等)】":[],
           "【ADL(摂食)】":[],
           "【ADL(排泄)】":[],
           "【ADL(入浴)】":[],
           "【ADL(口腔ケア)】":[],
           "【ADL(更衣)】":[],
           "【ADL(内服)】":[]}

           
    # 丸山ワクチン
    maruyama = {"【タスクリスト】":[],
                "【事前練習】":[],
                "【衛生材料】":["◆丸山ワクチン\n","□1ccシリンジ(   本)\n","□26G針(   本)\n","□アルコール綿花\n","□注射バン\n","□丸山ワクチンA(   A)\n","□丸山ワクチンB(   A)\n"],
                "【介護用品】":[],
                "【家屋改修検討部位】":[],
                "【訪問看護介入依頼(連絡)項目】":["□丸山ワクチン\n"],
                "【ヘルパー介入依頼項目】":[],
                "【その他】":[],
                "【退院中にすること】":["□丸山ワクチン( 曜日：　　　　　)\n"],
                "【患者様に介助が必要なこと】":[],
                "【ケア等の事前練習】":[],
                "【必要な介護用品】":[],
                "【バリアフリー確認部位】":[],
                "【注意事項】":[],
                "【その他退院までにすること】":[],
                "【在宅での医療行為】":["丸山ワクチン　　"],
                "【医療用麻薬】":[],
                "【ADL(体動)】":[],
                "【ADL(平行移動)】":[],
                "【ADL(階段昇降)】":[],
                "【ADL(移乗)】":[],
                "【ADL(食事準備等)】":[],
                "【ADL(摂食)】":[],
                "【ADL(排泄)】":[],
                "【ADL(入浴)】":[],
                "【ADL(口腔ケア)】":[],
                "【ADL(更衣)】":[],
                "【ADL(内服)】":[]}

    # 気管吸引
    kyuin = {"【タスクリスト】":[],
              "【事前練習】":["□気管吸引(　月　日)\n"],
              "【衛生材料】":["◆気管吸引\n","□サフィード吸引カテーテル(   本)\n","□アルコール綿花\n","□水入れ用プラスチックカップ(   個)\n"],
              "【介護用品】":["□吸引器\n"],
              "【家屋改修検討部位】":[],
              "【訪問看護介入依頼(連絡)項目】":[],
              "【ヘルパー介入依頼項目】":[],
              "【その他】":[],
              "【退院中にすること】":["□痰の吸引\n"],
              "【患者様に介助が必要なこと】":[],
              "【ケア等の事前練習】":["□痰の吸引(　月　日)\n"],
              "【必要な介護用品】":["□吸引器\n"],
              "【バリアフリー確認部位】":[],
              "【注意事項】":[],
              "【その他退院までにすること】":[],
              "【在宅での医療行為】":["気管吸引　　"],
              "【医療用麻薬】":[],
              "【ADL(体動)】":[],
              "【ADL(平行移動)】":[],
              "【ADL(階段昇降)】":[],
              "【ADL(移乗)】":[],
              "【ADL(食事準備等)】":[],
              "【ADL(摂食)】":[],
              "【ADL(排泄)】":[],
              "【ADL(入浴)】":[],
              "【ADL(口腔ケア)】":[],
              "【ADL(更衣)】":[],
              "【ADL(内服)】":[]}

    # 吸入
    kyunyu = {"【タスクリスト】":[],
              "【事前練習】":["□吸入(　月　日)\n"],
              "【衛生材料】":[],
              "【介護用品】":["□吸入器\n"],
              "【家屋改修検討部位】":[],
              "【訪問看護介入依頼(連絡)項目】":["□吸入( 薬剤：              )\n"],
              "【ヘルパー介入依頼項目】":[],
              "【その他】":[],
              "【退院中にすること】":["□吸入\n"],
              "【患者様に介助が必要なこと】":[],
              "【ケア等の事前練習】":["□吸入(　月　日)\n"],
              "【必要な介護用品】":["□吸入器\n"],
              "【バリアフリー確認部位】":[],
              "【注意事項】":[],
              "【その他退院までにすること】":[],
              "【在宅での医療行為】":["吸引　　"],
              "【医療用麻薬】":[],
              "【ADL(体動)】":[],
              "【ADL(平行移動)】":[],
              "【ADL(階段昇降)】":[],
              "【ADL(移乗)】":[],
              "【ADL(食事準備等)】":[],
              "【ADL(摂食)】":[],
              "【ADL(排泄)】":[],
              "【ADL(入浴)】":[],
              "【ADL(口腔ケア)】":[],
              "【ADL(更衣)】":[],
              "【ADL(内服)】":[]}

    # インスリン注射
    insulin = {"【タスクリスト】":[],
               "【事前練習】":["□インスリン注射(　月　日)\n"],
               "【衛生材料】":["◆インスリン注射\n","□インスリン製剤\n","□ペン型注入器用針(   本)\n","□アルコール綿花\n","□注射バン\n"],
               "【介護用品】":[],
               "【家屋改修検討部位】":[],
               "【訪問看護介入依頼(連絡)項目】":["□インスリン注射\n"],
               "【ヘルパー介入依頼項目】":[],
               "【その他】":[],
               "【退院中にすること】":["□インスリン注射注射( 時間：　　　　　　　)\n"],
               "【患者様に介助が必要なこと】":[],
               "【ケア等の事前練習】":["□インスリン注射(　月　日)\n"],
               "【必要な介護用品】":[],
               "【バリアフリー確認部位】":[],
               "【注意事項】":[],
               "【その他退院までにすること】":[],
               "【在宅での医療行為】":["インスリン注射　　"],
               "【医療用麻薬】":[],
               "【ADL(体動)】":[],
               "【ADL(平行移動)】":[],
               "【ADL(階段昇降)】":[],
               "【ADL(移乗)】":[],
               "【ADL(食事準備等)】":[],
               "【ADL(摂食)】":[],
               "【ADL(排泄)】":[],
               "【ADL(入浴)】":[],
               "【ADL(口腔ケア)】":[],
               "【ADL(更衣)】":[],
               "【ADL(内服)】":[]}

    # 血糖測定
    bsck = {"【タスクリスト】":[],
            "【事前練習】":["□血糖測定(　月　日)\n"],
            "【衛生材料】":["◆血糖測定\n","□血糖測定器本体\n","□血糖測定電極(   本)\n","□ランセット(   本)\n","□アルコール綿花\n"],
            "【介護用品】":[],
            "【家屋改修検討部位】":[],
            "【訪問看護介入依頼(連絡)項目】":["□血糖測定\n"],
            "【ヘルパー介入依頼項目】":[],
            "【その他】":[],
            "【退院中にすること】":["□血糖測定( 時間：　　　　　　　)\n"],
            "【患者様に介助が必要なこと】":[],
            "【ケア等の事前練習】":["□血糖測定(　月　日)\n"],
            "【必要な介護用品】":[],
            "【バリアフリー確認部位】":[],
            "【注意事項】":[],
            "【その他退院までにすること】":[],
            "【在宅での医療行為】":["血糖測定　　"],
            "【医療用麻薬】":[],
            "【ADL(体動)】":[],
            "【ADL(平行移動)】":[],
            "【ADL(階段昇降)】":[],
            "【ADL(移乗)】":[],
            "【ADL(食事準備等)】":[],
            "【ADL(摂食)】":[],
            "【ADL(排泄)】":[],
            "【ADL(入浴)】":[],
            "【ADL(口腔ケア)】":[],
            "【ADL(更衣)】":[],
            "【ADL(内服)】":[]}

    # 創傷処置
    sousyou = {"【タスクリスト】":[],
               "【事前練習】":["□創傷処置(　月　日)\n"],
               "【衛生材料】":["◆創傷処置\n","□ガーゼ(   枚)\n","□ヘキシジンン綿棒(   本)\n","□固定テープ\n","□皮膚保護剤(   枚)\n","□軟膏類\n","□処置シート(   枚)\n"],
               "【介護用品】":[],
               "【家屋改修検討部位】":[],
               "【訪問看護介入依頼(連絡)項目】":["□創傷処置\n"],
               "【ヘルパー介入依頼項目】":[],
               "【その他】":[],
               "【退院中にすること】":["□傷の処置\n"],
               "【患者様に介助が必要なこと】":[],
               "【ケア等の事前練習】":["□傷の処置(　月　日)\n"],
               "【必要な介護用品】":[],
               "【バリアフリー確認部位】":[],
               "【注意事項】":[],
               "【その他退院までにすること】":[],
               "【在宅での医療行為】":["創傷処置　　"],
               "【医療用麻薬】":[],
               "【ADL(体動)】":[],
               "【ADL(平行移動)】":[],
               "【ADL(階段昇降)】":[],
               "【ADL(移乗)】":[],
               "【ADL(食事準備等)】":[],
               "【ADL(摂食)】":[],
               "【ADL(排泄)】":[],
               "【ADL(入浴)】":[],
               "【ADL(口腔ケア)】":[],
               "【ADL(更衣)】":[],
               "【ADL(内服)】":[]}

    # 腹腔穿刺
    hukusui = {"【タスクリスト】":[],
               "【事前練習】":[],
               "【衛生材料】":["◆腹腔穿刺\n","□なし(訪問診療医師が持参)\n"],
               "【介護用品】":[],
               "【家屋改修検討部位】":[],
               "【訪問看護介入依頼(連絡)項目】":["□腹腔穿刺\n"],
               "【ヘルパー介入依頼項目】":[],
               "【その他】":[],
               "【退院中にすること】":["□腹腔穿刺(腹水を抜く処置)\n"],
               "【患者様に介助が必要なこと】":[],
               "【ケア等の事前練習】":[],
               "【必要な介護用品】":[],
               "【バリアフリー確認部位】":[],
               "【注意事項】":[],
               "【その他退院までにすること】":[],
               "【在宅での医療行為】":["腹腔穿刺　　"],
               "【医療用麻薬】":[],
               "【ADL(体動)】":[],
               "【ADL(平行移動)】":[],
               "【ADL(階段昇降)】":[],
               "【ADL(移乗)】":[],
               "【ADL(食事準備等)】":[],
               "【ADL(摂食)】":[],
               "【ADL(排泄)】":[],
               "【ADL(入浴)】":[],
               "【ADL(口腔ケア)】":[],
               "【ADL(更衣)】":[],
               "【ADL(内服)】":[]}

    # 胸腔穿刺
    kyousui = {"【タスクリスト】":[],
               "【事前練習】":[],
               "【衛生材料】":["◆胸腔穿刺\n","□なし(訪問診療医師が持参)\n"],
               "【介護用品】":[],
               "【家屋改修検討部位】":[],
               "【訪問看護介入依頼(連絡)項目】":["□胸腔穿刺\n"],
               "【ヘルパー介入依頼項目】":[],
               "【その他】":[],
               "【退院中にすること】":["□胸腔穿刺(胸水を抜く処置)\n"],
               "【患者様に介助が必要なこと】":[],
               "【ケア等の事前練習】":[],
               "【必要な介護用品】":[],
               "【バリアフリー確認部位】":[],
               "【注意事項】":[],
               "【その他退院までにすること】":[],
               "【在宅での医療行為】":["胸腔穿刺　　"],
               "【医療用麻薬】":[],
               "【ADL(体動)】":[],
               "【ADL(平行移動)】":[],
               "【ADL(階段昇降)】":[],
               "【ADL(移乗)】":[],
               "【ADL(食事準備等)】":[],
               "【ADL(摂食)】":[],
               "【ADL(排泄)】":[],
               "【ADL(入浴)】":[],
               "【ADL(口腔ケア)】":[],
               "【ADL(更衣)】":[],
               "【ADL(内服)】":[]}

    # その他
    sonota_medic = {"【タスクリスト】":[],
                    "【事前練習】":[],
                    "【衛生材料】":["◆{}\n"],
                    "【介護用品】":[],
                    "【家屋改修検討部位】":[],
                    "【訪問看護介入依頼(連絡)項目】":["□{}\n"],
                    "【ヘルパー介入依頼項目】":[],
                    "【その他】":[],
                    "【退院中にすること】":["□{}\n"],
                    "【患者様に介助が必要なこと】":[],
                    "【ケア等の事前練習】":[],
                    "【必要な介護用品】":[],
                    "【バリアフリー確認部位】":[],
                    "【注意事項】":[],
                    "【その他退院までにすること】":[],
                    "【在宅での医療行為】":["□{}\n"],
                    "【医療用麻薬】":[],
                    "【ADL(体動)】":[],
                    "【ADL(平行移動)】":[],
                    "【ADL(階段昇降)】":[],
                    "【ADL(移乗)】":[],
                    "【ADL(食事準備等)】":[],
                    "【ADL(摂食)】":[],
                    "【ADL(排泄)】":[],
                    "【ADL(入浴)】":[],
                    "【ADL(口腔ケア)】":[],
                    "【ADL(更衣)】":[],
                    "【ADL(内服)】":[]}
    

    # 医療用麻薬

    # CSCI　医療行為とかぶる！ 療法が選択されていれば麻薬を優先させる処理が必要
    mayaku_csci = {"【タスクリスト】":[],
                   "【事前練習】":["□CSCI(　月　日)\n"],
                   "【衛生材料】":["◆CSCI\n","□ロック付きシリンジ10cc(   本)\n","□イントロカンセーフティ(   本)\n","□シュアプラグ(   個)\n","□延長チューブ50cm(   本)\n","□延長チューブ100cm(   本)\n","□スキナゲートスパット\n","□オプサイト\n","□メディポア\n","□アルコール綿花\n"],
                   "【介護用品】":[],
                   "【家屋改修検討部位】":[],
                   "【訪問看護介入依頼(連絡)項目】":["□麻薬等CSCI\n"],
                   "【ヘルパー介入依頼項目】":[],
                   "【その他】":[],
                   "【退院中にすること】":["□痛み止め(医療用麻薬)等の持続皮下注射\n"],
                   "【患者様に介助が必要なこと】":[],
                   "【ケア等の事前練習】":["□持続皮下注射(　月　日)\n"],
                   "【必要な介護用品】":[],
                   "【バリアフリー確認部位】":[],
                   "【注意事項】":["□医療用麻薬の取扱いに充分ご注意ください。\n"],
                   "【その他退院までにすること】":[],
                   "【在宅での医療行為】":["CSCI　　"],
                   "【医療用麻薬】":["CSCI　　"],
                   "【ADL(体動)】":[],
                   "【ADL(平行移動)】":[],
                   "【ADL(階段昇降)】":[],
                   "【ADL(移乗)】":[],
                   "【ADL(食事準備等)】":[],
                   "【ADL(摂食)】":[],
                   "【ADL(排泄)】":[],
                   "【ADL(入浴)】":[],
                   "【ADL(口腔ケア)】":[],
                   "【ADL(更衣)】":[],
                   "【ADL(内服)】":[]}
    # 貼付剤
    mayaku_chouhu = {"【タスクリスト】":[],
                     "【事前練習】":["□麻薬貼付剤(　月　日)\n"],
                     "【衛生材料】":[],
                     "【介護用品】":[],
                     "【家屋改修検討部位】":[],
                     "【訪問看護介入依頼(連絡)項目】":["□定期麻薬貼付剤\n"],
                     "【ヘルパー介入依頼項目】":[],
                     "【その他】":[],
                     "【退院中にすること】":["□痛み止め(医療用麻薬)の貼り薬( 1日1回　時)\n"],
                     "【患者様に介助が必要なこと】":[],
                     "【ケア等の事前練習】":["□痛み止め(医療用麻薬)の貼り薬の貼り方(　月　日)\n"],
                     "【必要な介護用品】":[],
                     "【バリアフリー確認部位】":[],
                     "【注意事項】":["□医療用麻薬の取扱いに充分ご注意ください。\n"],
                     "【その他退院までにすること】":[],
                     "【在宅での医療行為】":[],
                     "【医療用麻薬】":["貼付剤　　"],
                     "【ADL(体動)】":[],
                     "【ADL(平行移動)】":[],
                     "【ADL(階段昇降)】":[],
                     "【ADL(移乗)】":[],
                     "【ADL(食事準備等)】":[],
                     "【ADL(摂食)】":[],
                     "【ADL(排泄)】":[],
                     "【ADL(入浴)】":[],
                     "【ADL(口腔ケア)】":[],
                     "【ADL(更衣)】":[],
                     "【ADL(内服)】":[]}
    # 定期内服
    mayaku_naihuku = {"【タスクリスト】":[],
                      "【事前練習】":[],
                      "【衛生材料】":[],
                      "【介護用品】":[],
                      "【家屋改修検討部位】":[],
                      "【訪問看護介入依頼(連絡)項目】":["□定期麻薬内服\n"],
                      "【ヘルパー介入依頼項目】":[],
                      "【その他】":[],
                      "【退院中にすること】":["□痛み止め(医療用麻薬)の内服\n"],
                      "【患者様に介助が必要なこと】":[],
                      "【ケア等の事前練習】":[],
                      "【必要な介護用品】":[],
                      "【バリアフリー確認部位】":[],
                      "【注意事項】":["□医療用麻薬の取扱いに充分ご注意ください。\n"],
                      "【その他退院までにすること】":[],
                      "【在宅での医療行為】":[],
                      "【医療用麻薬】":["定期内服　　"],
                      "【ADL(体動)】":[],
                      "【ADL(平行移動)】":[],
                      "【ADL(階段昇降)】":[],
                      "【ADL(移乗)】":[],
                      "【ADL(食事準備等)】":[],
                      "【ADL(摂食)】":[],
                      "【ADL(排泄)】":[],
                      "【ADL(入浴)】":[],
                      "【ADL(口腔ケア)】":[],
                      "【ADL(更衣)】":[],
                      "【ADL(内服)】":[]}
    # レスキュー
    mayaku_rescue = {"【タスクリスト】":[],
                     "【事前練習】":[],
                     "【衛生材料】":[],
                     "【介護用品】":[],
                     "【家屋改修検討部位】":[],
                     "【訪問看護介入依頼(連絡)項目】":["□レスキュー麻薬\n"],
                     "【ヘルパー介入依頼項目】":[],
                     "【その他】":[],
                     "【退院中にすること】":["□痛み止め(医療用麻薬)のとん服\n"],
                     "【患者様に介助が必要なこと】":[],
                     "【ケア等の事前練習】":[],
                     "【必要な介護用品】":[],
                     "【バリアフリー確認部位】":[],
                     "【注意事項】":["□医療用麻薬の取扱いに充分ご注意ください。\n"],
                     "【その他退院までにすること】":[],
                     "【在宅での医療行為】":[],
                     "【医療用麻薬】":["レスキュー　　"],
                     "【ADL(体動)】":[],
                     "【ADL(平行移動)】":[],
                     "【ADL(階段昇降)】":[],
                     "【ADL(移乗)】":[],
                     "【ADL(食事準備等)】":[],
                     "【ADL(摂食)】":[],
                     "【ADL(排泄)】":[],
                     "【ADL(入浴)】":[],
                     "【ADL(口腔ケア)】":[],
                     "【ADL(更衣)】":[],
                     "【ADL(内服)】":[]}
    # 退院手段
    # 本人のみ
    honnin = {"【タスクリスト】":[],
              "【事前練習】":[],
              "【衛生材料】":[],
              "【介護用品】":[],
              "【家屋改修検討部位】":[],
              "【訪問看護介入依頼(連絡)項目】":[],
              "【ヘルパー介入依頼項目】":[],
              "【その他】":[],
              "【退院中にすること】":[],
              "【患者様に介助が必要なこと】":[],
              "【ケア等の事前練習】":[],
              "【必要な介護用品】":[],
              "【バリアフリー確認部位】":[],
              "【注意事項】":[],
              "【その他退院までにすること】":[],
              "【在宅での医療行為】":[],
              "【医療用麻薬】":[],
              "【ADL(体動)】":[],
              "【ADL(平行移動)】":[],
              "【ADL(階段昇降)】":[],
              "【ADL(移乗)】":[],
              "【ADL(食事準備等)】":[],
              "【ADL(摂食)】":[],
              "【ADL(排泄)】":[],
              "【ADL(入浴)】":[],
              "【ADL(口腔ケア)】":[],
              "【ADL(更衣)】":[],
              "【ADL(内服)】":[]}
    # 家族
    kazoku = {"【タスクリスト】":[],
              "【事前練習】":[],
              "【衛生材料】":[],
              "【介護用品】":[],
              "【家屋改修検討部位】":[],
              "【訪問看護介入依頼(連絡)項目】":[],
              "【ヘルパー介入依頼項目】":[],
              "【その他】":[],
              "【退院中にすること】":[],
              "【患者様に介助が必要なこと】":[],
              "【ケア等の事前練習】":[],
              "【必要な介護用品】":[],
              "【バリアフリー確認部位】":[],
              "【注意事項】":[],
              "【その他退院までにすること】":[],
              "【在宅での医療行為】":[],
              "【医療用麻薬】":[],
              "【ADL(体動)】":[],
              "【ADL(平行移動)】":[],
              "【ADL(階段昇降)】":[],
              "【ADL(移乗)】":[],
              "【ADL(食事準備等)】":[],
              "【ADL(摂食)】":[],
              "【ADL(排泄)】":[],
              "【ADL(入浴)】":[],
              "【ADL(口腔ケア)】":[],
              "【ADL(更衣)】":[],
              "【ADL(内服)】":[]}
    # 介護タクシー
    c_taxi = {"【タスクリスト】":[],
              "【事前練習】":[],
              "【衛生材料】":[],
              "【介護用品】":[],
              "【家屋改修検討部位】":[],
              "【訪問看護介入依頼(連絡)項目】":[],
              "【ヘルパー介入依頼項目】":[],
              "【その他】":[],
              "【退院中にすること】":[],
              "【患者様に介助が必要なこと】":[],
              "【ケア等の事前練習】":[],
              "【必要な介護用品】":[],
              "【バリアフリー確認部位】":[],
              "【注意事項】":[],
              "【その他退院までにすること】":["□介護タクシーの予約\n"],
              "【在宅での医療行為】":[],
              "【医療用麻薬】":[],
              "【ADL(体動)】":[],
              "【ADL(平行移動)】":[],
              "【ADL(階段昇降)】":[],
              "【ADL(移乗)】":[],
              "【ADL(食事準備等)】":[],
              "【ADL(摂食)】":[],
              "【ADL(排泄)】":[],
              "【ADL(入浴)】":[],
              "【ADL(口腔ケア)】":[],
              "【ADL(更衣)】":[],
              "【ADL(内服)】":[]}



    # ADL

    # 体動
    
    # 起き上がり(介護力有り)
    okiagari = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                "【事前練習】":["□起き上がり介助(　月　日)\n","□褥瘡予防について(　月　日)\n"],
                "【衛生材料】":[],
                "【介護用品】":["□介護用電動ベッド\n","□介護用クッション\n"],
                "【家屋改修検討部位】":[],
                "【訪問看護介入依頼(連絡)項目】":[],
                "【ヘルパー介入依頼項目】":[],
                "【その他】":[],
                "【退院中にすること】":[],
                "【患者様に介助が必要なこと】":["□起き上がり介助\n"],
                "【ケア等の事前練習】":["□起き上がり介助(　月　日)\n","□褥瘡予防について(　月　日)\n"],
                "【必要な介護用品】":["□介護用電動ベッド\n","□介護用クッション\n"],
                "【バリアフリー確認部位】":[],
                "【注意事項】":[],
                "【その他退院までにすること】":[],
                "【在宅での医療行為】":[],
                "【医療用麻薬】":[],
                "【ADL(体動)】":["起き上がり　　"],
                "【ADL(平行移動)】":[],
                "【ADL(階段昇降)】":[],
                "【ADL(移乗)】":[],
                "【ADL(食事準備等)】":[],
                "【ADL(摂食)】":[],
                "【ADL(排泄)】":[],
                "【ADL(入浴)】":[],
                "【ADL(口腔ケア)】":[],
                "【ADL(更衣)】":[],
                "【ADL(内服)】":[]}
    
    # 起き上がり(介護力無し)
    okiagari_n = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                  "【事前練習】":[],
                  "【衛生材料】":[],
                  "【介護用品】":["□介護用電動ベッド\n","□介護用クッション\n"],
                  "【家屋改修検討部位】":[],
                  "【訪問看護介入依頼(連絡)項目】":[],
                  "【ヘルパー介入依頼項目】":["□起き上がり介助\n"],
                  "【その他】":[],
                  "【退院中にすること】":[],
                  "【患者様に介助が必要なこと】":["□起き上がり介助\n"],
                  "【ケア等の事前練習】":[],
                  "【必要な介護用品】":["□介護用電動ベッド\n","□介護用クッション\n"],
                  "【バリアフリー確認部位】":[],
                  "【注意事項】":[],
                  "【その他退院までにすること】":[],
                  "【在宅での医療行為】":[],
                  "【医療用麻薬】":[],
                  "【ADL(体動)】":["起き上がり　　"],
                  "【ADL(平行移動)】":[],
                  "【ADL(階段昇降)】":[],
                  "【ADL(移乗)】":[],
                  "【ADL(食事準備等)】":[],
                  "【ADL(摂食)】":[],
                  "【ADL(排泄)】":[],
                  "【ADL(入浴)】":[],
                  "【ADL(口腔ケア)】":[],
                  "【ADL(更衣)】":[],
                  "【ADL(内服)】":[]}
    
    # 寝返り(介護力有り)
    negaeri = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
               "【事前練習】":["□体位変換(　月　日)\n","□褥瘡予防について(　月　日)\n"],
               "【衛生材料】":[],
               "【介護用品】":["□介護用電動ベッド\n","□介護用クッション\n"],
               "【家屋改修検討部位】":[],
               "【訪問看護介入依頼(連絡)項目】":[],
               "【ヘルパー介入依頼項目】":[],
               "【その他】":[],
               "【退院中にすること】":[],
               "【患者様に介助が必要なこと】":["□体位変換(2～3時間おき)\n"],
               "【ケア等の事前練習】":["□体位変換(　月　日)\n","□褥瘡予防について(　月　日)\n"],
               "【必要な介護用品】":["□介護用電動ベッド\n","□介護用クッション\n"],
               "【バリアフリー確認部位】":[],
               "【注意事項】":[],
               "【その他退院までにすること】":[],
               "【在宅での医療行為】":[],
               "【医療用麻薬】":[],
               "【ADL(体動)】":["寝返り　　"],
               "【ADL(平行移動)】":[],
               "【ADL(階段昇降)】":[],
               "【ADL(移乗)】":[],
               "【ADL(食事準備等)】":[],
               "【ADL(摂食)】":[],
               "【ADL(排泄)】":[],
               "【ADL(入浴)】":[],
               "【ADL(口腔ケア)】":[],
               "【ADL(更衣)】":[],
               "【ADL(内服)】":[]}
    
    # 寝返り(介護力無し)
    negaeri_n = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                 "【事前練習】":[],
                 "【衛生材料】":[],
                 "【介護用品】":["□介護用電動ベッド\n","□介護用クッション\n"],
                 "【家屋改修検討部位】":[],
                 "【訪問看護介入依頼(連絡)項目】":["□体位変換"],
                 "【ヘルパー介入依頼項目】":["□体位変換\n"],
                 "【その他】":[],
                 "【退院中にすること】":[],
                 "【患者様に介助が必要なこと】":["□体位変換(2～3時間おき)\n"],
                 "【ケア等の事前練習】":[],
                 "【必要な介護用品】":["□介護用電動ベッド\n","□介護用クッション\n"],
                 "【バリアフリー確認部位】":[],
                 "【注意事項】":[],
                 "【その他退院までにすること】":[],
                 "【在宅での医療行為】":[],
                 "【医療用麻薬】":[],
                 "【ADL(体動)】":["寝返り　　"],
                 "【ADL(平行移動)】":[],
                 "【ADL(階段昇降)】":[],
                 "【ADL(移乗)】":[],
                 "【ADL(食事準備等)】":[],
                 "【ADL(摂食)】":[],
                 "【ADL(排泄)】":[],
                 "【ADL(入浴)】":[],
                 "【ADL(口腔ケア)】":[],
                 "【ADL(更衣)】":[],
                 "【ADL(内服)】":[]}
    
    # 座位保持(介護力有り)
    zaihoji = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
               "【事前練習】":["□褥瘡予防について(　月　日)\n"],
               "【衛生材料】":[],
               "【介護用品】":["□介護用クッション\n"],
               "【家屋改修検討部位】":[],
               "【訪問看護介入依頼(連絡)項目】":[],
               "【ヘルパー介入依頼項目】":[],
               "【その他】":[],
               "【退院中にすること】":[],
               "【患者様に介助が必要なこと】":[],
               "【ケア等の事前練習】":["□褥瘡予防について(　月　日)\n"],
               "【必要な介護用品】":["□介護用クッション\n"],
               "【バリアフリー確認部位】":[],
               "【注意事項】":[],
               "【その他退院までにすること】":[],
               "【在宅での医療行為】":[],
               "【医療用麻薬】":[],
               "【ADL(体動)】":["座位保持　　"],
               "【ADL(平行移動)】":[],
               "【ADL(階段昇降)】":[],
               "【ADL(移乗)】":[],
               "【ADL(食事準備等)】":[],
               "【ADL(摂食)】":[],
               "【ADL(排泄)】":[],
               "【ADL(入浴)】":[],
               "【ADL(口腔ケア)】":[],
               "【ADL(更衣)】":[],
               "【ADL(内服)】":[]}
    
    # 座位保持(介護力無し)
    zaihoji_n = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                 "【事前練習】":[],
                 "【衛生材料】":[],
                 "【介護用品】":[],
                 "【家屋改修検討部位】":[],
                 "【訪問看護介入依頼(連絡)項目】":[],
                 "【ヘルパー介入依頼項目】":[],
                 "【その他】":[],
                 "【退院中にすること】":[],
                 "【患者様に介助が必要なこと】":[],
                 "【ケア等の事前練習】":[],
                 "【必要な介護用品】":[],
                 "【バリアフリー確認部位】":[],
                 "【注意事項】":[],
                 "【その他退院までにすること】":[],
                 "【在宅での医療行為】":[],
                 "【医療用麻薬】":[],
                 "【ADL(体動)】":["座位保持　　"],
                 "【ADL(平行移動)】":[],
                 "【ADL(階段昇降)】":[],
                 "【ADL(移乗)】":[],
                 "【ADL(食事準備等)】":[],
                 "【ADL(摂食)】":[],
                 "【ADL(排泄)】":[],
                 "【ADL(入浴)】":[],
                 "【ADL(口腔ケア)】":[],
                 "【ADL(更衣)】":[],
                 "【ADL(内服)】":[]}
    
    # 平行移動
    
    # 杖歩行・伝い歩き(介護力有り)
    tsutaiaruki = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                   "【事前練習】":[],
                   "【衛生材料】":[],
                   "【介護用品】":["□杖\n","□手すり\n","□滑りにくい靴\n"],
                   "【家屋改修検討部位】":["□敷地内の段差\n","□生活動線への手すりの設置\n"],
                   "【訪問看護介入依頼(連絡)項目】":[],
                   "【ヘルパー介入依頼項目】":[],
                   "【その他】":[],
                   "【退院中にすること】":[],
                   "【患者様に介助が必要なこと】":["□歩行時の付き添い・見守り\n"],
                   "【ケア等の事前練習】":[],
                   "【必要な介護用品】":["□杖\n","□手すり\n","□滑りにくい靴\n"],
                   "【バリアフリー確認部位】":["□敷地内の段差の有無\n","□生活動線に手すりがあるか\n"],
                   "【注意事項】":[],
                   "【その他退院までにすること】":[],
                   "【在宅での医療行為】":[],
                   "【医療用麻薬】":[],
                   "【ADL(体動)】":[],
                   "【ADL(平行移動)】":["杖歩行・伝い歩き　　"],
                   "【ADL(階段昇降)】":[],
                   "【ADL(移乗)】":[],
                   "【ADL(食事準備等)】":[],
                   "【ADL(摂食)】":[],
                   "【ADL(排泄)】":[],
                   "【ADL(入浴)】":[],
                   "【ADL(口腔ケア)】":[],
                   "【ADL(更衣)】":[],
                   "【ADL(内服)】":[]}
    
    # 杖歩行・伝い歩き(介護力無し)
    tsutaiaruki_n = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                     "【事前練習】":[],
                     "【衛生材料】":[],
                     "【介護用品】":["□杖\n","□手すり\n","□滑りにくい靴\n"],
                     "【家屋改修検討部位】":["□敷地内の段差\n","□生活動線への手すりの設置\n"],
                     "【訪問看護介入依頼(連絡)項目】":["□歩行時の付き添い・見守り\n"],
                     "【ヘルパー介入依頼項目】":["□歩行時の付き添い・見守り\n"],
                     "【その他】":[],  
                     "【退院中にすること】":[],
                     "【患者様に介助が必要なこと】":["□歩行時の付き添い・見守り\n"],
                     "【ケア等の事前練習】":[],
                     "【必要な介護用品】":["□杖\n","□手すり\n","□滑りにくい靴\n"],
                     "【バリアフリー確認部位】":["□敷地内の段差の有無\n","□生活動線に手すりがあるか\n"],
                     "【注意事項】":[],
                     "【その他退院までにすること】":[],
                     "【在宅での医療行為】":[],
                     "【医療用麻薬】":[],
                     "【ADL(体動)】":[],
                     "【ADL(平行移動)】":["杖歩行・伝い歩き　　"],
                     "【ADL(階段昇降)】":[],
                     "【ADL(移乗)】":[],
                     "【ADL(食事準備等)】":[],
                     "【ADL(摂食)】":[],
                     "【ADL(排泄)】":[],
                     "【ADL(入浴)】":[],
                     "【ADL(口腔ケア)】":[],
                     "【ADL(更衣)】":[],
                     "【ADL(内服)】":[]}
    
    # 歩行器(介護力有り)
    hokouki = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
               "【事前練習】":[],
               "【衛生材料】":[],
               "【介護用品】":["□歩行器(シルバーカー)\n","□スロープ\n","□滑りにくい靴\n"],
               "【家屋改修検討部位】":["□敷地内の段差\n"],
               "【訪問看護介入依頼(連絡)項目】":[],
               "【ヘルパー介入依頼項目】":[],
               "【その他】":[],
               "【退院中にすること】":[],
               "【患者様に介助が必要なこと】":["□歩行時の付き添い・見守り\n"],
               "【ケア等の事前練習】":[],
               "【必要な介護用品】":["□歩行器(シルバーカー)\n","□スロープ\n","□滑りにくい靴\n"],
               "【バリアフリー確認部位】":["□敷地内の段差の有無\n","□敷地内を歩行器(シルバーカー)が通過できる幅があるか\n"],
               "【注意事項】":[],
               "【その他退院までにすること】":[],
               "【在宅での医療行為】":[],
               "【医療用麻薬】":[],
               "【ADL(体動)】":[],
               "【ADL(平行移動)】":["歩行器　　"],
               "【ADL(階段昇降)】":[],
               "【ADL(移乗)】":[],
               "【ADL(食事準備等)】":[],
               "【ADL(摂食)】":[],
               "【ADL(排泄)】":[],
               "【ADL(入浴)】":[],
               "【ADL(口腔ケア)】":[],
               "【ADL(更衣)】":[],
               "【ADL(内服)】":[]}
    # 歩行器(介護力無し)
    hokouki_n = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                 "【事前練習】":[],
                 "【衛生材料】":[],
                 "【介護用品】":["□歩行器(シルバーカー)\n","□スロープ\n","□滑りにくい靴\n"],
                 "【家屋改修検討部位】":["□敷地内の段差\n"],
                 "【訪問看護介入依頼(連絡)項目】":["□歩行時の付き添い・見守り\n"],
                 "【ヘルパー介入依頼項目】":["□歩行時の付き添い・見守り\n"],
                 "【その他】":[],
                 "【退院中にすること】":[],
                 "【患者様に介助が必要なこと】":[],
                 "【ケア等の事前練習】":[],
                 "【必要な介護用品】":["□歩行器(シルバーカー)\n","□スロープ\n","□滑りにくい靴\n"],
                 "【バリアフリー確認部位】":["□敷地内の段差の有無\n","□敷地内を歩行器(シルバーカー)が通過できる幅があるか\n"],
                 "【注意事項】":[],
                 "【その他退院までにすること】":[],
                 "【在宅での医療行為】":[],
                 "【医療用麻薬】":[],
                 "【ADL(体動)】":[],
                 "【ADL(平行移動)】":["歩行器　　"],
                 "【ADL(階段昇降)】":[],
                 "【ADL(移乗)】":[],
                 "【ADL(食事準備等)】":[],
                 "【ADL(摂食)】":[], 
                 "【ADL(排泄)】":[],
                 "【ADL(入浴)】":[],
                 "【ADL(口腔ケア)】":[],
                 "【ADL(更衣)】":[],
                 "【ADL(内服)】":[]}
    
    # 車いす(介護力有り)
    kurumaisu = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                 "【事前練習】":["□車いす介助(　月　日)\n","□褥瘡予防について(　月　日)\n"],
                 "【衛生材料】":[],
                 "【介護用品】":["□車いす\n","□スロープ\n"],
                 "【家屋改修検討部位】":["□敷地内の段差\n"],
                 "【訪問看護介入依頼(連絡)項目】":[],
                 "【ヘルパー介入依頼項目】":[],
                 "【その他】":[],
                 "【退院中にすること】":[],
                 "【患者様に介助が必要なこと】":["□車いす介助\n"],
                 "【ケア等の事前練習】":["□車いす介助(　月　日)\n","□褥瘡予防について(　月　日)\n"],
                 "【必要な介護用品】":["□車いす\n","□スロープ\n"],
                 "【バリアフリー確認部位】":["□敷地内の段差の有無\n","□敷地内を車いすが通過できる幅(90cm)があるか\n"],
                 "【注意事項】":[],
                 "【その他退院までにすること】":[],
                 "【在宅での医療行為】":[],
                 "【医療用麻薬】":[],
                 "【ADL(体動)】":[],
                 "【ADL(平行移動)】":["車いす　　"],
                 "【ADL(階段昇降)】":[],
                 "【ADL(移乗)】":[],
                 "【ADL(食事準備等)】":[],
                 "【ADL(摂食)】":[],
                 "【ADL(排泄)】":[],
                 "【ADL(入浴)】":[],
                 "【ADL(口腔ケア)】":[],
                 "【ADL(更衣)】":[],
                 "【ADL(内服)】":[]}
    
    # 車いす(介護力無し)
    kurumaisu_n = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                   "【事前練習】":[],
                   "【衛生材料】":[],
                   "【介護用品】":["□車いす\n","□スロープ\n"],
                   "【家屋改修検討部位】":["□敷地内の段差\n"],
                   "【訪問看護介入依頼(連絡)項目】":["□車いす介助\n"],
                   "【ヘルパー介入依頼項目】":["□車いす介助\n"],
                   "【その他】":[],
                   "【退院中にすること】":[],
                   "【患者様に介助が必要なこと】":["□車いす介助\n"],
                   "【ケア等の事前練習】":[],
                   "【必要な介護用品】":["□車いす\n","□スロープ\n"],
                   "【バリアフリー確認部位】":["□敷地内の段差の有無\n","□敷地内を車いすが通過できる幅(90cm)があるか\n"],
                   "【注意事項】":[],
                   "【その他退院までにすること】":[],
                   "【在宅での医療行為】":[],
                   "【医療用麻薬】":[],
                   "【ADL(体動)】":[],
                   "【ADL(平行移動)】":["車いす　　"],
                   "【ADL(階段昇降)】":[],
                   "【ADL(移乗)】":[],
                   "【ADL(食事準備等)】":[],
                   "【ADL(摂食)】":[],
                   "【ADL(排泄)】":[],
                   "【ADL(入浴)】":[],
                   "【ADL(口腔ケア)】":[],
                   "【ADL(更衣)】":[],
                   "【ADL(内服)】":[]}
    
    # 担送(介護力有り)
    stretcher = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                 "【事前練習】":[],
                 "【衛生材料】":[],
                 "【介護用品】":["□スロープ\n","□介護用電動ベッド\n"],
                 "【家屋改修検討部位】":["□敷地内の段差\n"],
                 "【訪問看護介入依頼(連絡)項目】":[],
                 "【ヘルパー介入依頼項目】":[],
                 "【その他】":[],
                 "【退院中にすること】":[],
                 "【患者様に介助が必要なこと】":[],
                 "【ケア等の事前練習】":[],
                 "【必要な介護用品】":["□スロープ\n","□介護用電動ベッド\n"],
                 "【バリアフリー確認部位】":["□敷地内の段差の有無\n","□敷地内をストレッチャーが通過できる幅があるか\n"],
                 "【注意事項】":[],
                 "【その他退院までにすること】":[],
                 "【在宅での医療行為】":[],
                 "【医療用麻薬】":[],
                 "【ADL(体動)】":[],
                 "【ADL(平行移動)】":["担送　　"],
                 "【ADL(階段昇降)】":[],
                 "【ADL(移乗)】":[],
                 "【ADL(食事準備等)】":[],
                 "【ADL(摂食)】":[],
                 "【ADL(排泄)】":[],
                 "【ADL(入浴)】":[],
                 "【ADL(口腔ケア)】":[],
                 "【ADL(更衣)】":[],
                 "【ADL(内服)】":[]}
    
    # 担送(介護力無し)
    stretcher_n = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                   "【事前練習】":[],
                   "【衛生材料】":[],
                   "【介護用品】":["□スロープ\n","□介護用電動ベッド\n"],
                   "【家屋改修検討部位】":["□敷地内の段差\n"],
                   "【訪問看護介入依頼(連絡)項目】":[],
                   "【ヘルパー介入依頼項目】":[],
                   "【その他】":[],
                   "【退院中にすること】":[],
                   "【患者様に介助が必要なこと】":[],
                   "【ケア等の事前練習】":[],
                   "【必要な介護用品】":["□スロープ\n","□介護用電動ベッド\n"],
                   "【バリアフリー確認部位】":["□敷地内の段差の有無\n","□敷地内をストレッチャーが通過できる幅があるか\n"],
                   "【注意事項】":[],
                   "【その他退院までにすること】":[],
                   "【在宅での医療行為】":[],
                   "【医療用麻薬】":[],
                   "【ADL(体動)】":[],
                   "【ADL(平行移動)】":["担送　　"],
                   "【ADL(階段昇降)】":[],
                   "【ADL(移乗)】":[],
                   "【ADL(食事準備等)】":[],
                   "【ADL(摂食)】":[],
                   "【ADL(排泄)】":[],
                   "【ADL(入浴)】":[],
                   "【ADL(口腔ケア)】":[],
                   "【ADL(更衣)】":[],
                   "【ADL(内服)】":[]}

    # 階段昇降
    
    # 支えor手すり(介護力有り)
    tesuri = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
              "【事前練習】":["□階段昇降介助(　月　日)\n"],
              "【衛生材料】":[],
              "【介護用品】":["□滑りにくい靴\n"],
              "【家屋改修検討部位】":["□生活動線への手すりの設置\n"],
              "【訪問看護介入依頼(連絡)項目】":[],
              "【ヘルパー介入依頼項目】":[],
              "【その他】":[],
              "【退院中にすること】":[],
              "【患者様に介助が必要なこと】":["□階段昇降介助・見守り\n"],
              "【ケア等の事前練習】":["□階段昇降介助\n"],
              "【必要な介護用品】":["□手すり\n","□滑りにくい靴\n"],
              "【バリアフリー確認部位】":["□段差のある場所に手すりがあるか\n"],
              "【注意事項】":[],
              "【その他退院までにすること】":[],
              "【在宅での医療行為】":[],
              "【医療用麻薬】":[],
              "【ADL(体動)】":[],
              "【ADL(平行移動)】":[],
              "【ADL(階段昇降)】":["支えor手すり　　"],
              "【ADL(移乗)】":[],
              "【ADL(食事準備等)】":[],
              "【ADL(摂食)】":[],
              "【ADL(排泄)】":[],
              "【ADL(入浴)】":[],
              "【ADL(口腔ケア)】":[],
              "【ADL(更衣)】":[],
              "【ADL(内服)】":[]}
    
    # 支えor手すり(介護力無し)
    tesuri_n = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                "【事前練習】":[],
                "【衛生材料】":[],
                "【介護用品】":["□滑りにくい靴\n"],
                "【家屋改修検討部位】":["□生活動線への手すりの設置\n"],
                "【訪問看護介入依頼(連絡)項目】":["□階段昇降介助・見守り\n"],
                "【ヘルパー介入依頼項目】":["□階段昇降介助・見守り\n"],
                "【その他】":[],
                "【退院中にすること】":[],
                "【患者様に介助が必要なこと】":["□階段昇降介助・見守り\n"],
                "【ケア等の事前練習】":[],
                "【必要な介護用品】":["□手すり\n","□滑りにくい靴\n"],
                "【バリアフリー確認部位】":["□段差のある場所に手すりがあるか\n"],
                "【注意事項】":[],
                "【その他退院までにすること】":[],
                "【在宅での医療行為】":[],
                "【医療用麻薬】":[],
                "【ADL(体動)】":[],
                "【ADL(平行移動)】":[],
                "【ADL(階段昇降)】":["支えor手すり　　"],
                "【ADL(移乗)】":[],
                "【ADL(食事準備等)】":[],
                "【ADL(摂食)】":[],
                "【ADL(排泄)】":[],
                "【ADL(入浴)】":[],
                "【ADL(口腔ケア)】":[],
                "【ADL(更衣)】":[],
                "【ADL(内服)】":[]}
    
    # 担送(介護力有り)
    tansou = {"【タスクリスト】":[],
              "【事前練習】":[],
              "【衛生材料】":[],
              "【介護用品】":[], 
              "【家屋改修検討部位】":[],
              "【訪問看護介入依頼(連絡)項目】":[],
              "【ヘルパー介入依頼項目】":[],
              "【その他】":[],
              "【退院中にすること】":[],
              "【患者様に介助が必要なこと】":[],
              "【ケア等の事前練習】":[],
              "【必要な介護用品】":[],
              "【バリアフリー確認部位】":[],
              "【注意事項】":[],
              "【その他退院までにすること】":[],
              "【在宅での医療行為】":[],
              "【医療用麻薬】":[],
              "【ADL(体動)】":[],
              "【ADL(平行移動)】":[],
              "【ADL(階段昇降)】":["担送　　"],
              "【ADL(移乗)":[],
              "【ADL(食事準備等)】":[],
              "【ADL(摂食)】":[],
              "【ADL(排泄)】":[],
              "【ADL(入浴)】":[],
              "【ADL(口腔ケア)】":[],
              "【ADL(更衣)】":[],
              "【ADL(内服)】":[]}
    
    # 担送(介護力無し)
    tansou_n = {"【タスクリスト】":[],
                "【事前練習】":[],
                "【衛生材料】":[],
                "【介護用品】":[],
                "【家屋改修検討部位】":[],
                "【訪問看護介入依頼(連絡)項目】":[],
                "【ヘルパー介入依頼項目】":[],
                "【その他】":[],
                "【退院中にすること】":[],
                "【患者様に介助が必要なこと】":[],
                "【ケア等の事前練習】":[],
                "【必要な介護用品】":[],
                "【バリアフリー確認部位】":[],
                "【注意事項】":[],
                "【その他退院までにすること】":[],
                "【在宅での医療行為】":[],
                "【医療用麻薬】":[],
                "【ADL(体動)】":[],
                "【ADL(平行移動)】":[],
                "【ADL(階段昇降)】":["担送　　"],
                "【ADL(移乗)】":[],
                "【ADL(食事準備等)】":[],
                "【ADL(摂食)】":[],
                "【ADL(排泄)】":[],
                "【ADL(入浴)】":[],
                "【ADL(口腔ケア)】":[],
                "【ADL(更衣)】":[],
                "【ADL(内服)】":[]}

    # 移乗
    
    # 一部介助(見守り・軽介助)(介護力有り)
    ichibukaijo = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                   "【事前練習】":["□移乗(　月　日)\n"],
                   "【衛生材料】":[],
                   "【介護用品】":["□滑りにくい靴\n"],
                   "【家屋改修検討部位】":[],
                   "【訪問看護介入依頼(連絡)項目】":[],
                   "【ヘルパー介入依頼項目】":[],
                   "【その他】":[],
                   "【退院中にすること】":[],
                   "【患者様に介助が必要なこと】":["□移乗介助\n"],
                   "【ケア等の事前練習】":["□移乗介助(　月　日)\n"],
                   "【必要な介護用品】":["□滑りにくい靴\n"],
                   "【バリアフリー確認部位】":[],
                   "【注意事項】":[],
                   "【その他退院までにすること】":[],
                   "【在宅での医療行為】":[],
                   "【医療用麻薬】":[],
                   "【ADL(体動)】":[],
                   "【ADL(平行移動)】":[],
                   "【ADL(階段昇降)】":[],
                   "【ADL(移乗)】":["一部介助(見守り・軽介助)　　"],
                   "【ADL(食事準備等)】":[],
                   "【ADL(摂食)】":[],
                   "【ADL(排泄)】":[],
                   "【ADL(入浴)】":[],
                   "【ADL(口腔ケア)】":[],
                   "【ADL(更衣)】":[],
                   "【ADL(内服)】":[]}
    
    # 一部介助(見守り・軽介助)(介護力無し)
    ichibukaijo_n = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                     "【事前練習】":[],
                     "【衛生材料】":[],
                     "【介護用品】":["□滑りにくい靴\n"],
                     "【家屋改修検討部位】":[],
                     "【訪問看護介入依頼(連絡)項目】":["□移乗介助\n"],
                     "【ヘルパー介入依頼項目】":["□移乗介助\n"],
                     "【その他】":[],
                     "【退院中にすること】":[],
                     "【患者様に介助が必要なこと】":["□移乗介助\n"],
                     "【ケア等の事前練習】":[],
                     "【必要な介護用品】":["□滑りにくい靴\n"],
                     "【バリアフリー確認部位】":[],
                     "【注意事項】":[],
                     "【その他退院までにすること】":[],
                     "【在宅での医療行為】":[],
                     "【医療用麻薬】":[],
                     "【ADL(体動)】":[],
                     "【ADL(平行移動)】":[],
                     "【ADL(階段昇降)】":[],
                     "【ADL(移乗)】":["一部介助(見守り・軽介助)　　"],
                     "【ADL(食事準備等)】":[],
                     "【ADL(摂食)】":[],
                     "【ADL(排泄)】":[],
                     "【ADL(入浴)】":[],
                     "【ADL(口腔ケア)】":[],
                     "【ADL(更衣)】":[],
                     "【ADL(内服)】":[]}
    
    # 全介助(介護力有り)
    ijou_all = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                "【事前練習】":[],
                "【衛生材料】":[],
                "【介護用品】":["□介護用電動ベッド\n"],
                "【家屋改修検討部位】":[],
                "【訪問看護介入依頼(連絡)項目】":[],
                "【ヘルパー介入依頼項目】":[],
                "【その他】":[],
                "【退院中にすること】":[],
                "【患者様に介助が必要なこと】":[],
                "【ケア等の事前練習】":[],
                "【必要な介護用品】":["□介護用電動ベッド\n"],
                "【バリアフリー確認部位】":[],
                "【注意事項】":[],
                "【その他退院までにすること】":[],
                "【在宅での医療行為】":[],
                "【医療用麻薬】":[],
                "【ADL(体動)】":[],
                "【ADL(平行移動)】":[],
                "【ADL(階段昇降)】":[],
                "【ADL(移乗)】":["全介助　　"],
                "【ADL(食事準備等)】":[],
                "【ADL(摂食)】":[],
                "【ADL(排泄)】":[],
                "【ADL(入浴)】":[],
                "【ADL(口腔ケア)】":[],
                "【ADL(更衣)】":[],
                "【ADL(内服)】":[]}
    
    # 全介助(介護力無し)
    ijou_all_n = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                  "【事前練習】":[],
                  "【衛生材料】":[],
                  "【介護用品】":["□介護用電動ベッド\n"],
                  "【家屋改修検討部位】":[],
                  "【訪問看護介入依頼(連絡)項目】":[],
                  "【ヘルパー介入依頼項目】":[],
                  "【その他】":[],
                  "【退院中にすること】":[],
                  "【患者様に介助が必要なこと】":[],
                  "【ケア等の事前練習】":[],
                  "【必要な介護用品】":["□介護用電動ベッド\n"],
                  "【バリアフリー確認部位】":[],
                  "【注意事項】":[],
                  "【その他退院までにすること】":[],
                  "【在宅での医療行為】":[],
                  "【医療用麻薬】":[],
                  "【ADL(体動)】":[],
                  "【ADL(平行移動)】":[],
                  "【ADL(階段昇降)】":[],
                  "【ADL(移乗)】":["全介助　　"],
                  "【ADL(食事準備等)】":[],
                  "【ADL(摂食)】":[],
                  "【ADL(排泄)】":[],
                  "【ADL(入浴)】":[],
                  "【ADL(口腔ケア)】":[],
                  "【ADL(更衣)】":[],
                  "【ADL(内服)】":[]}
    
    # 食事準備等
    
    # 材料調達(介護力有り)
    zairyou = {"【タスクリスト】":[],
               "【事前練習】":[],
               "【衛生材料】":[],
               "【介護用品】":[],
               "【家屋改修検討部位】":[],
               "【訪問看護介入依頼(連絡)項目】":[],
               "【ヘルパー介入依頼項目】":[],
               "【その他】":[],
               "【退院中にすること】":[],
               "【患者様に介助が必要なこと】":["□食材調達\n"],
               "【ケア等の事前練習】":[],
               "【必要な介護用品】":[],
               "【バリアフリー確認部位】":[],
               "【注意事項】":[],
               "【その他退院までにすること】":[],
               "【在宅での医療行為】":[],
               "【医療用麻薬】":[],
               "【ADL(体動)】":[],
               "【ADL(平行移動)】":[],
               "【ADL(階段昇降)】":[],
               "【ADL(移乗)】":[],
               "【ADL(食事準備等)】":["材料調達　　"],
               "【ADL(摂食)】":[],
               "【ADL(排泄)】":[],
               "【ADL(入浴)】":[],
               "【ADL(口腔ケア)】":[],
               "【ADL(更衣)】":[],
               "【ADL(内服)】":[]}
    
    # 材料調達(介護力有無し)
    zairyou_n = {"【タスクリスト】":["□配食サービス提案(ヘルパー介入不可の場合)\n"],
                 "【事前練習】":[],
                 "【衛生材料】":[],
                 "【介護用品】":[],
                 "【家屋改修検討部位】":[],
                 "【訪問看護介入依頼(連絡)項目】":[],
                 "【ヘルパー介入依頼項目】":["□食材買い出し\n"],
                 "【その他】":[],
                 "【退院中にすること】":[],
                 "【患者様に介助が必要なこと】":["□食材調達\n"],
                 "【ケア等の事前練習】":[],
                 "【必要な介護用品】":[],
                 "【バリアフリー確認部位】":[],
                 "【注意事項】":[],
                 "【その他退院までにすること】":[],
                 "【在宅での医療行為】":[],
                 "【医療用麻薬】":[],
                 "【ADL(体動)】":[],
                 "【ADL(平行移動)】":[],
                 "【ADL(階段昇降)】":[],
                 "【ADL(移乗)】":[],
                 "【ADL(食事準備等)】":["材料調達　　"],
                 "【ADL(摂食)】":[],
                 "【ADL(排泄)】":[],
                 "【ADL(入浴)】":[],
                 "【ADL(口腔ケア)】":[],
                 "【ADL(更衣)】":[],
                 "【ADL(内服)】":[]}
    
    # 調理・後片付け(介護力有り)
    chouri = {"【タスクリスト】":[],
              "【事前練習】":[],
              "【衛生材料】":[],
              "【介護用品】":[],
              "【家屋改修検討部位】":[],
              "【訪問看護介入依頼(連絡)項目】":[],
              "【ヘルパー介入依頼項目】":[],
              "【その他】":[],
              "【退院中にすること】":[],
              "【患者様に介助が必要なこと】":["□調理・後片付け\n"],
              "【ケア等の事前練習】":[],
              "【必要な介護用品】":[],
              "【バリアフリー確認部位】":[],
              "【注意事項】":[],
              "【その他退院までにすること】":[],
              "【在宅での医療行為】":[],
              "【医療用麻薬】":[],
              "【ADL(体動)】":[],
              "【ADL(平行移動)】":[],
              "【ADL(階段昇降)】":[],
              "【ADL(移乗)】":[],
              "【ADL(食事準備等)】":["調理・後片付け　　"],
              "【ADL(摂食)】":[],
              "【ADL(排泄)】":[],
              "【ADL(入浴)】":[],
              "【ADL(口腔ケア)】":[],
              "【ADL(更衣)】":[],
              "【ADL(内服)】":[]}
    
    # 調理・後片付け(介護力無し)
    chouri_n = {"【タスクリスト】":["□配食サービス提案(ヘルパー介入不可の場合)\n"],
                "【事前練習】":[],
                "【衛生材料】":[],
                "【介護用品】":[],
                "【家屋改修検討部位】":[],
                "【訪問看護介入依頼(連絡)項目】":[],
                "【ヘルパー介入依頼項目】":["□調理・後片付け\n"],
                "【その他】":[],
                "【退院中にすること】":[],
                "【患者様に介助が必要なこと】":["□調理・後片付け\n"],
                "【ケア等の事前練習】":[],
                "【必要な介護用品】":[],
                "【バリアフリー確認部位】":[],
                "【注意事項】":[],
                "【その他退院までにすること】":[],
                "【在宅での医療行為】":[],
                "【医療用麻薬】":[],
                "【ADL(体動)】":[],
                "【ADL(平行移動)】":[],
                "【ADL(階段昇降)】":[],
                "【ADL(移乗)】":[],
                "【ADL(食事準備等)】":["調理・後片付け　　"],
                "【ADL(摂食)】":[],
                "【ADL(排泄)】":[],
                "【ADL(入浴)】":[],
                "【ADL(口腔ケア)】":[],
                "【ADL(更衣)】":[],
                "【ADL(内服)】":[]}
    # 摂食
    
    # 食事介助(介護力有り)
    syokujikaijo = {"【タスクリスト】":[],
                    "【事前練習】":[],
                    "【衛生材料】":[],
                    "【介護用品】":[],
                    "【家屋改修検討部位】":[],
                    "【訪問看護介入依頼(連絡)項目】":[],
                    "【ヘルパー介入依頼項目】":[],
                    "【その他】":[],
                    "【退院中にすること】":[],
                    "【患者様に介助が必要なこと】":["□食事介助\n"],
                    "【ケア等の事前練習】":[],
                    "【必要な介護用品】":[],
                    "【バリアフリー確認部位】":[],
                    "【注意事項】":[],
                    "【その他退院までにすること】":[],
                    "【在宅での医療行為】":[],
                    "【医療用麻薬】":[],
                    "【ADL(体動)】":[],
                    "【ADL(平行移動)】":[],
                    "【ADL(階段昇降)】":[],
                    "【ADL(移乗)】":[],
                    "【ADL(食事準備等)】":[],
                    "【ADL(摂食)】":["食事介助　　"],
                    "【ADL(排泄)】":[],
                    "【ADL(入浴)】":[],
                    "【ADL(口腔ケア)】":[],
                    "【ADL(更衣)】":[],
                    "【ADL(内服)】":[]}
    
    # 食事介助(介護力無し)
    syokujikaijo_n = {"【タスクリスト】":[],
                      "【事前練習】":[],
                      "【衛生材料】":[],
                      "【介護用品】":[],
                      "【家屋改修検討部位】":[],
                      "【訪問看護介入依頼(連絡)項目】":[],
                      "【ヘルパー介入依頼項目】":["□食事介助\n"],
                      "【その他】":[],
                      "【退院中にすること】":[],
                      "【患者様に介助が必要なこと】":["□食事介助\n"],
                      "【ケア等の事前練習】":[],
                      "【必要な介護用品】":[],
                      "【バリアフリー確認部位】":[],
                      "【注意事項】":[],
                      "【その他退院までにすること】":[],
                      "【在宅での医療行為】":[],
                      "【医療用麻薬】":[],
                      "【ADL(体動)】":[],
                      "【ADL(平行移動)】":[],
                      "【ADL(階段昇降)】":[],
                      "【ADL(移乗)】":[],
                      "【ADL(食事準備等)】":[],
                      "【ADL(摂食)】":["食事介助　　"],
                      "【ADL(排泄)】":[],
                      "【ADL(入浴)】":[],
                      "【ADL(口腔ケア)】":[],
                      "【ADL(更衣)】":[],
                      "【ADL(内服)】":[]}
    # 経管栄養(経鼻)(介護力有り)
    ikan = {"【タスクリスト】":[],
            "【事前練習】":["□経管栄養(経鼻)(　月　日)\n"],
            "【衛生材料】":["◆経管栄養(経鼻)\n","□胃管カテーテル\n","□経管栄養チューブ\n","□イリゲーター\n","□カテーテルチップ\n","□コネクタ\n","□経管栄養剤\n"],
            "【介護用品】":[],
            "【家屋改修検討部位】":[],
            "【訪問看護介入依頼(連絡)項目】":["□経管栄養(経鼻)\n"],
            "【ヘルパー介入依頼項目】":[],
            "【その他】":[],
            "【退院中にすること】":["□経管栄養(経鼻)\n"],
            "【患者様に介助が必要なこと】":["□経管栄養(経鼻)\n"],
            "【ケア等の事前練習】":["□経管栄養(経鼻)(　月　日)\n"],
            "【必要な介護用品】":[],
            "【バリアフリー確認部位】":[],
            "【注意事項】":[],
            "【その他退院までにすること】":[],
            "【在宅での医療行為】":[],
            "【医療用麻薬】":[],
            "【ADL(体動)】":[],
            "【ADL(平行移動)】":[],
            "【ADL(階段昇降)】":[],
            "【ADL(移乗)】":[],
            "【ADL(食事準備等)】":[],
            "【ADL(摂食)】":["経管栄養(経鼻)　　"],
            "【ADL(排泄)】":[],
            "【ADL(入浴)】":[],
            "【ADL(口腔ケア)】":[],
            "【ADL(更衣)】":[],
            "【ADL(内服)】":[]}
    
    # 経管栄養(経鼻)(介護力無し)
    ikan_n = {"【タスクリスト】":[],
              "【事前練習】":[],
              "【衛生材料】":["◆経管栄養(経鼻)\n","□胃管カテーテル\n","□経管栄養チューブ\n","□イリゲーター\n","□カテーテルチップ\n","□コネクタ\n","□経管栄養剤\n"],
              "【介護用品】":[],
              "【家屋改修検討部位】":[],
              "【訪問看護介入依頼(連絡)項目】":["□経管栄養(経鼻)\n"],
              "【ヘルパー介入依頼項目】":[],
              "【その他】":[],
              "【退院中にすること】":["□経管栄養(経鼻)\n"],
              "【患者様に介助が必要なこと】":["□経管栄養(経鼻)\n"],
              "【ケア等の事前練習】":[],
              "【必要な介護用品】":[],
              "【バリアフリー確認部位】":[],
              "【注意事項】":[],
              "【その他退院までにすること】":[],
              "【在宅での医療行為】":[],
              "【医療用麻薬】":[],
              "【ADL(体動)】":[],
              "【ADL(平行移動)】":[],
              "【ADL(階段昇降)】":[],
              "【ADL(移乗)】":[],
              "【ADL(食事準備等)】":[],
              "【ADL(摂食)】":["経管栄養(経鼻)　　"],
              "【ADL(排泄)】":[],
              "【ADL(入浴)】":[],
              "【ADL(口腔ケア)】":[],
              "【ADL(更衣)】":[],
              "【ADL(内服)】":[]}
    
    # 経管栄養(胃瘻)(介護力有り)
    irou = {"【タスクリスト】":[],
            "【事前練習】":["□経管栄養(胃瘻)(　月　日)\n"],
            "【衛生材料】":["◆経管栄養(胃瘻)\n","□胃瘻カテーテル\n","□経管栄養チューブ\n","□イリゲーター\n","□カテーテルチップ\n","□コネクタ\n","□経管栄養剤\n"],
            "【介護用品】":[],
            "【家屋改修検討部位】":[],
            "【訪問看護介入依頼(連絡)項目】":["□経管栄養(胃瘻)\n"],
            "【ヘルパー介入依頼項目】":[],
            "【その他】":[],
            "【退院中にすること】":["□経管栄養(胃瘻)\n"],
            "【患者様に介助が必要なこと】":["□経管栄養(胃瘻)\n"],
            "【ケア等の事前練習】":["□経管栄養(胃瘻)(　月　日)\n"],
            "【必要な介護用品】":[],
            "【バリアフリー確認部位】":[],
            "【注意事項】":[],
            "【その他退院までにすること】":[],
            "【在宅での医療行為】":[],
            "【医療用麻薬】":[],
            "【ADL(体動)】":[],
            "【ADL(平行移動)】":[],
            "【ADL(階段昇降)】":[],
            "【ADL(移乗)】":[],
            "【ADL(食事準備等)】":[],
            "【ADL(摂食)】":["経管栄養(胃瘻)　　"],
            "【ADL(排泄)】":[],
            "【ADL(入浴)】":[],
            "【ADL(口腔ケア)】":[],
            "【ADL(更衣)】":[],
            "【ADL(内服)】":[]}
    
    # 経管栄養(胃瘻)(介護力無し)
    irou_n = {"【タスクリスト】":[],
              "【事前練習】":[],
              "【衛生材料】":["◆経管栄養(胃瘻)\n","□胃瘻カテーテル\n","□経管栄養チューブ\n","□イリゲーター\n","□カテーテルチップ\n","□コネクタ\n","□経管栄養剤\n"],
              "【介護用品】":[],
              "【家屋改修検討部位】":[],
              "【訪問看護介入依頼(連絡)項目】":["□経管栄養(胃瘻)\n"],
              "【ヘルパー介入依頼項目】":[],
              "【その他】":[],
              "【退院中にすること】":["□経管栄養(胃瘻)\n"],
              "【患者様に介助が必要なこと】":["□経管栄養(胃瘻)\n"],
              "【ケア等の事前練習】":[],
              "【必要な介護用品】":[],
              "【バリアフリー確認部位】":[],
              "【注意事項】":[],
              "【その他退院までにすること】":[],
              "【在宅での医療行為】":[],
              "【医療用麻薬】":[],
              "【ADL(体動)】":[],
              "【ADL(平行移動)】":[],
              "【ADL(階段昇降)】":[],
              "【ADL(移乗)】":[],
              "【ADL(食事準備等)】":[],
              "【ADL(摂食)】":["経管栄養(胃瘻)　　"],
              "【ADL(排泄)】":[],
              "【ADL(入浴)】":[],
              "【ADL(口腔ケア)】":[],
              "【ADL(更衣)】":[],
              "【ADL(内服)】":[]}

    # 排泄
    
    # ポータブルトイレ(介護力有り)
    p_toilet = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                "【事前練習】":["□ポータブルトイレ介助(　月　日)\n"],
                "【衛生材料】":[],
                "【介護用品】":["□ポータブルトイレ\n","□ポジショニングバー\n","□Pバー\n","□トイレ洗浄剤\n","□トイレ洗浄用ブラシ\n","□滑りにくい靴\n"],
                "【家屋改修検討部位】":[],
                "【訪問看護介入依頼(連絡)項目】":[],
                "【ヘルパー介入依頼項目】":[],
                "【その他】":[],
                "【退院中にすること】":[],
                "【患者様に介助が必要なこと】":["□ポータブルトイレ介助(移乗介助・脱衣介助・着衣介助・汚染時の対応・後片付け)\n","□ポータブルトイレの定期的な消毒\n"],
                "【ケア等の事前練習】":["□ポータブルトイレ介助方法(　月　日)\n"],
                "【必要な介護用品】":["□ポータブルトイレ\n","□ポジショニングバー\n","□Pバー\n","□トイレ洗浄剤\n","□トイレ洗浄用ブラシ\n","□滑りにくい靴\n"],
                "【バリアフリー確認部位】":["□ポータブルトイレ設置場所の段差の有無\n","□ポータブルトイレ設置場所に手すりなどはあるか(または設置可能か)\n"],
                "【注意事項】":["□ポータブルトイレの高さは患者さんの立ち上がりやすい高さで設定できるものを選んでください。\n"],
                "【その他退院までにすること】":[],
                "【在宅での医療行為】":[],
                "【医療用麻薬】":[],
                "【ADL(体動)】":[],
                "【ADL(平行移動)】":[],
                "【ADL(階段昇降)】":[],
                "【ADL(移乗)】":[],
                "【ADL(食事準備等)】":[],
                "【ADL(摂食)】":[],
                "【ADL(排泄)】":["ポータブルトイレ　　"],
                "【ADL(入浴)】":[],
                "【ADL(口腔ケア)】":[],
                "【ADL(更衣)】":[],
                "【ADL(内服)】":[]}
    
    # ポータブルトイレ(介護力無し)
    p_toilet_n = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                  "【事前練習】":[],
                  "【衛生材料】":[],
                  "【介護用品】":["□ポータブルトイレ\n","□ポジショニングバー\n","□Pバー\n","□トイレ洗浄剤\n","□トイレ洗浄用ブラシ\n","□滑りにくい靴\n"],
                  "【家屋改修検討部位】":[],
                  "【訪問看護介入依頼(連絡)項目】":["□ポータブルトイレ介助・後片付け\n"],
                  "【ヘルパー介入依頼項目】":["□ポータブルトイレ介助・後片付け\n","□ポータブルトイレの定期的な消毒\n"],
                  "【その他】":[],
                  "【退院中にすること】":[],
                  "【患者様に介助が必要なこと】":["□ポータブルトイレ介助(移乗介助・脱衣介助・着衣介助・汚染時の対応・後片付け)\n","□ポータブルトイレの定期的な消毒\n"],
                  "【ケア等の事前練習】":[],
                  "【必要な介護用品】":["□ポータブルトイレ\n","□ポジショニングバー\n","□Pバー\n","□トイレ洗浄剤\n","□トイレ洗浄用ブラシ\n","□滑りにくい靴\n"],
                  "【バリアフリー確認部位】":["□ポータブルトイレ設置場所の段差の有無\n","□ポータブルトイレ設置場所に手すりなどはあるか(または設置可能か)\n"],
                  "【注意事項】":["□ポータブルトイレの高さは患者さんの立ち上がりやすい高さで設定できるものを選んでください。\n"],
                  "【その他退院までにすること】":[],
                  "【在宅での医療行為】":[],
                  "【医療用麻薬】":[],
                  "【ADL(体動)】":[],
                  "【ADL(平行移動)】":[],
                  "【ADL(階段昇降)】":[],
                  "【ADL(移乗)】":[],
                  "【ADL(食事準備等)】":[],
                  "【ADL(摂食)】":[],
                  "【ADL(排泄)】":["ポータブルトイレ　　"],
                  "【ADL(入浴)】":[],
                  "【ADL(口腔ケア)】":[],
                  "【ADL(更衣)】":[],
                  "【ADL(内服)】":[]}
    
    # 尿器(介護力有り)
    nyouki = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
              "【事前練習】":["□尿器介助(　月　日)\n"],
              "【衛生材料】":[],
              "【介護用品】":["□尿器\n","□尿器置きラック\n","□トイレ洗浄剤\n","□トイレ洗浄用ブラシ\n"],
              "【家屋改修検討部位】":[],
              "【訪問看護介入依頼(連絡)項目】":[],
              "【ヘルパー介入依頼項目】":[],
              "【その他】":[],
              "【退院中にすること】":[],
              "【患者様に介助が必要なこと】":["□尿器での排尿介助・後片付け\n"],
              "【ケア等の事前練習】":["□尿器での排尿介助(　月　日)\n"],
              "【必要な介護用品】":["□尿器\n","□尿器置きラック\n","□トイレ洗浄剤\n","□トイレ洗浄用ブラシ\n"],
              "【バリアフリー確認部位】":[],
              "【注意事項】":[],
              "【その他退院までにすること】":[],
              "【在宅での医療行為】":[],
              "【医療用麻薬】":[],
              "【ADL(体動)】":[],
              "【ADL(平行移動)】":[],
              "【ADL(階段昇降)】":[],
              "【ADL(移乗)】":[],
              "【ADL(食事準備等)】":[],
              "【ADL(摂食)】":[],
              "【ADL(排泄)】":["尿器　　"],
              "【ADL(入浴)】":[],
              "【ADL(口腔ケア)】":[],
              "【ADL(更衣)】":[],
              "【ADL(内服)】":[]}
    
    # 尿器(介護力無し)
    nyouki_n = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                "【事前練習】":[],
                "【衛生材料】":[],
                "【介護用品】":["□尿器\n","□尿器置きラック\n","□トイレ洗浄剤\n","□トイレ洗浄用ブラシ\n"],
                "【家屋改修検討部位】":[],
                "【訪問看護介入依頼(連絡)項目】":["□尿器介助・後片付け\n"],
                "【ヘルパー介入依頼項目】":["□尿器介助・後片付け\n"],
                "【その他】":[],
                "【退院中にすること】":[],
                "【患者様に介助が必要なこと】":["□尿器での排尿介助・後片付け\n"],
                "【ケア等の事前練習】":[],
                "【必要な介護用品】":["□尿器\n","□尿器置きラック\n","□トイレ洗浄剤\n","□トイレ洗浄用ブラシ\n"],
                "【バリアフリー確認部位】":[],
                "【注意事項】":[],
                "【その他退院までにすること】":[],
                "【在宅での医療行為】":[],
                "【医療用麻薬】":[],
                "【ADL(体動)】":[],
                "【ADL(平行移動)】":[],
                "【ADL(階段昇降)】":[],
                "【ADL(移乗)】":[],
                "【ADL(食事準備等)】":[],
                "【ADL(摂食)】":[],
                "【ADL(排泄)】":["尿器　　"],
                "【ADL(入浴)】":[],
                "【ADL(口腔ケア)】":[],
                "【ADL(更衣)】":[],
                "【ADL(内服)】":[]}
    
    # オムツ(介護力有り)
    omutsu = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
              "【事前練習】":["□オムツ交換(　月　日)\n","□陰部洗浄(　月　日)\n","□褥瘡予防について(　月　日)\n"],
              "【衛生材料】":[],
              "【介護用品】":["□オムツ\n","□尿取りパット\n","□洗浄ボトル\n","□ゴム手袋\n","□洗浄剤(身体用)\n","□おしり拭き\n","□介護用電動ベッド\n"],
              "【家屋改修検討部位】":[],
              "【訪問看護介入依頼(連絡)項目】":[],
              "【ヘルパー介入依頼項目】":[],
              "【その他】":[],
              "【退院中にすること】":[],
              "【患者様に介助が必要なこと】":["□オムツ交換\n","□陰部洗浄\n"],
              "【ケア等の事前練習】":["□オムツ交換(　月　日)\n","□陰部洗浄(　月　日)\n","□褥瘡予防について(　月　日)\n"],
              "【必要な介護用品】":["□オムツ\n","□尿取りパット\n","□洗浄ボトル\n","□ゴム手袋\n","□洗浄剤(身体用)\n","□おしり拭き\n","□介護用電動ベッド\n"],
              "【バリアフリー確認部位】":[],
              "【注意事項】":[],
              "【その他退院までにすること】":[],
              "【在宅での医療行為】":[],
              "【医療用麻薬】":[],
              "【ADL(体動)】":[],
              "【ADL(平行移動)】":[],
              "【ADL(階段昇降)】":[],
              "【ADL(移乗)】":[],
              "【ADL(食事準備等)】":[],
              "【ADL(摂食)】":[],
              "【ADL(排泄)】":["オムツ　　"],
              "【ADL(入浴)】":[],
              "【ADL(口腔ケア)】":[],
              "【ADL(更衣)】":[],
              "【ADL(内服)】":[]}
    
    # オムツ(介護力無し)
    omutsu_n = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                "【事前練習】":[],
                "【衛生材料】":[],
                "【介護用品】":["□オムツ\n","□尿取りパット\n","□洗浄ボトル\n","□ゴム手袋\n","□洗浄剤(身体用)\n","□おしり拭き\n","□介護用電動ベッド\n"],
                "【家屋改修検討部位】":[],
                "【訪問看護介入依頼(連絡)項目】":["□オムツ交換\n","□陰部洗浄\n"],
                "【ヘルパー介入依頼項目】":["□オムツ交換\n","□陰部洗浄\n"],
                "【その他】":[],
                "【退院中にすること】":[],
                "【患者様に介助が必要なこと】":["□オムツ交換\n","□陰部洗浄\n"],
                "【ケア等の事前練習】":[],
                "【必要な介護用品】":["□オムツ\n","□尿取りパット\n","□洗浄ボトル\n","□ゴム手袋\n","□洗浄剤(身体用)\n","□おしり拭き\n","□介護用電動ベッド\n"],
                "【バリアフリー確認部位】":[],
                "【注意事項】":[],
                "【その他退院までにすること】":[],
                "【在宅での医療行為】":[],
                "【医療用麻薬】":[],
                "【ADL(体動)】":[],
                "【ADL(平行移動)】":[],
                "【ADL(階段昇降)】":[],
                "【ADL(移乗)】":[],
                "【ADL(食事準備等)】":[],
                "【ADL(摂食)】":[],
                "【ADL(排泄)】":["オムツ　　"],
                "【ADL(入浴)】":[],
                "【ADL(口腔ケア)】":[],
                "【ADL(更衣)】":[],
                "【ADL(内服)】":[]}
    
    # 膀胱留置カテーテル(介護力有り)
    balloon = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
               "【事前練習】":["□陰部洗浄(　月　日)\n","□膀胱留置カテーテル管理(　月　日)\n"],
               "【衛生材料】":["◆膀胱留置カテーテル\n","□膀胱留置カテーテル(　本)\n","□排尿バッグ(　個)\n","□クイックフィックス\n","□カバー\n"],
               "【介護用品】":["□洗浄ボトル\n","□ゴム手袋\n","□洗浄剤(身体用)\n"],
               "【家屋改修検討部位】":[],
               "【訪問看護介入依頼(連絡)項目】":[],
               "【ヘルパー介入依頼項目】":[],
               "【その他】":[],
               "【退院中にすること】":[],
               "【患者様に介助が必要なこと】":["□陰部洗浄\n","□排尿バッグの尿破棄\n"],
               "【ケア等の事前練習】":["□陰部洗浄(　月　日)\n","□膀胱留置カテーテル管理(　月　日)\n"],
               "【必要な介護用品】":["□洗浄ボトル\n","□ゴム手袋\n","□洗浄剤(身体用)\n"],
               "【バリアフリー確認部位】":[],
               "【注意事項】":[],
               "【その他退院までにすること】":[],
               "【在宅での医療行為】":[],
               "【医療用麻薬】":[],
               "【ADL(体動)】":[],
               "【ADL(平行移動)】":[],
               "【ADL(階段昇降)】":[],
               "【ADL(移乗)】":[],
               "【ADL(食事準備等)】":[],
               "【ADL(摂食)】":[],
               "【ADL(排泄)】":["膀胱留置カテーテル　　"],
               "【ADL(入浴)】":[],
               "【ADL(口腔ケア)】":[],
               "【ADL(更衣)】":[],
               "【ADL(内服)】":[]}
    
    # 膀胱留置カテーテル(介護力無し)
    balloon_n = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                 "【事前練習】":[],
                 "【衛生材料】":["◆膀胱留置カテーテル\n","□膀胱留置カテーテル(　本)\n","□排尿バッグ(　個)\n","□クイックフィックス\n","□カバー\n"],
                 "【介護用品】":["□洗浄ボトル\n","□ゴム手袋\n","□洗浄剤(身体用)\n"],
                 "【家屋改修検討部位】":[],
                 "【訪問看護介入依頼(連絡)項目】":["□陰部洗浄\n","□膀胱留置カテーテル管理\n"],
                 "【ヘルパー介入依頼項目】":["□陰部洗浄\n","□排尿バッグの尿破棄(1回/日)\n"],
                 "【その他】":[],
                 "【退院中にすること】":[],
                 "【患者様に介助が必要なこと】":["□陰部洗浄\n","□膀胱留置カテーテル管理\n"],
                 "【ケア等の事前練習】":[],
                 "【必要な介護用品】":["□洗浄ボトル\n","□ゴム手袋\n","□洗浄剤(身体用)\n"],
                 "【バリアフリー確認部位】":[],
                 "【注意事項】":[],
                 "【その他退院までにすること】":[],
                 "【在宅での医療行為】":[],
                 "【医療用麻薬】":[],
                 "【ADL(体動)】":[],
                 "【ADL(平行移動)】":[],
                 "【ADL(階段昇降)】":[],
                 "【ADL(移乗)】":[],
                 "【ADL(食事準備等)】":[],
                 "【ADL(摂食)】":[],
                 "【ADL(排泄)】":["膀胱留置カテーテル　　"],
                 "【ADL(入浴)】":[],
                 "【ADL(口腔ケア)】":[],
                 "【ADL(更衣)】":[],
                 "【ADL(内服)】":[]}
    
    # 腎瘻(介護力有り)
    jinrou = {"【タスクリスト】":[],
              "【事前練習】":["□腎瘻管理(　月　日)\n"],
              "【衛生材料】":["◆腎瘻\n","□ヘキシジンン綿棒(　本)\n","□オプサイト\n","□メディポア\n"],
              "【介護用品】":[],
              "【家屋改修検討部位】":[],
              "【訪問看護介入依頼(連絡)項目】":["□腎瘻管理\n"],
              "【ヘルパー介入依頼項目】":[],
              "【その他】":[],
              "【退院中にすること】":[],
              "【患者様に介助が必要なこと】":["□腎瘻カテーテル固定テープ交換\n","□排尿バッグの尿破棄\n"],
              "【ケア等の事前練習】":["□腎瘻管理(　月　日)\n"],
              "【必要な介護用品】":[],
              "【バリアフリー確認部位】":[],
              "【注意事項】":[],
              "【その他退院までにすること】":[],
              "【在宅での医療行為】":[],
              "【医療用麻薬】":[],
              "【ADL(体動)】":[],
              "【ADL(平行移動)】":[],
              "【ADL(階段昇降)】":[],
              "【ADL(移乗)】":[],
              "【ADL(食事準備等)】":[],
              "【ADL(摂食)】":[],
              "【ADL(排泄)】":["腎瘻　　"],
              "【ADL(入浴)】":[],
              "【ADL(口腔ケア)】":[],
              "【ADL(更衣)】":[],
              "【ADL(内服)】":[]}
    
    # 腎瘻(介護力無し)
    jinrou_n = {"【タスクリスト】":[],
                "【事前練習】":[],
                "【衛生材料】":["◆腎瘻\n","□ヘキシジンン綿棒(　本)\n","□オプサイト\n","□メディポア\n"],
                "【介護用品】":[],
                "【家屋改修検討部位】":[],
                "【訪問看護介入依頼(連絡)項目】":["□腎瘻管理\n"],
                "【ヘルパー介入依頼項目】":["□排尿バッグの尿破棄(1回/日)\n","□腎瘻カテーテル固定確認\n"],
                "【その他】":[],
                "【退院中にすること】":[],
                "【患者様に介助が必要なこと】":["□腎瘻管理\n"],
                "【ケア等の事前練習】":[],
                "【必要な介護用品】":[],
                "【バリアフリー確認部位】":[],
                "【注意事項】":[],
                "【その他退院までにすること】":[],
                "【在宅での医療行為】":[],
                "【医療用麻薬】":[],
                "【ADL(体動)】":[],
                "【ADL(平行移動)】":[],
                "【ADL(階段昇降)】":[],
                "【ADL(移乗)】":[],
                "【ADL(食事準備等)】":[],
                "【ADL(摂食)】":[],
                "【ADL(排泄)】":["腎瘻　　"],
                "【ADL(入浴)】":[],
                "【ADL(口腔ケア)】":[],
                "【ADL(更衣)】":[],
                "【ADL(内服)】":[]}
    
    # ストマ(介護力有り)
    stoma = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
             "【事前練習】":["□ストマ管理(　月　日)\n"],
             "【衛生材料】":[],
             "【介護用品】":["□ストマ用品\n"],
             "【家屋改修検討部位】":[],
             "【訪問看護介入依頼(連絡)項目】":["□ストマ管理\n"],
             "【ヘルパー介入依頼項目】":[],
             "【その他】":[],
             "【退院中にすること】":[],
             "【患者様に介助が必要なこと】":["□ストマパウチ交換\n","□ストマパウチ便破棄・ガス抜き\n","□ストマパウチ貼付部位のスキンケア\n"],
             "【ケア等の事前練習】":["□ストマ管理(　月　日)\n"],
             "【必要な介護用品】":["□ストマ用品\n"],
             "【バリアフリー確認部位】":[],
             "【注意事項】":[],
             "【その他退院までにすること】":[],
             "【在宅での医療行為】":[],
             "【医療用麻薬】":[],
             "【ADL(体動)】":[],
             "【ADL(平行移動)】":[],
             "【ADL(階段昇降)】":[],
             "【ADL(移乗)】":[],
             "【ADL(食事準備等)】":[],
             "【ADL(摂食)】":[],
             "【ADL(排泄)】":["ストマ　　"],
             "【ADL(入浴)】":[],
             "【ADL(口腔ケア)】":[],
             "【ADL(更衣)】":[],
             "【ADL(内服)】":[]}
             
    # ストマ(介護力無し)
    stoma_n = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
               "【事前練習】":[],
               "【衛生材料】":[],
               "【介護用品】":["□ストマ用品\n"],
               "【家屋改修検討部位】":[],
               "【訪問看護介入依頼(連絡)項目】":["□ストマ管理\n"],
               "【ヘルパー介入依頼項目】":[],
               "【その他】":[],
               "【退院中にすること】":[],
               "【患者様に介助が必要なこと】":["□ストマパウチ交換\n","□ストマパウチ便破棄・ガス抜き\n","□ストマパウチ貼付部位のスキンケア\n"],
               "【ケア等の事前練習】":[],
               "【必要な介護用品】":["□ストマ用品\n"],
               "【バリアフリー確認部位】":[],
               "【注意事項】":[],
               "【その他退院までにすること】":[],
               "【在宅での医療行為】":[],
               "【医療用麻薬】":[],
               "【ADL(体動)】":[],
               "【ADL(平行移動)】":[],
               "【ADL(階段昇降)】":[],
               "【ADL(移乗)】":[],
               "【ADL(食事準備等)】":[],
               "【ADL(摂食)】":[],
               "【ADL(排泄)】":["ストマ　　"],
               "【ADL(入浴)】":[],
               "【ADL(口腔ケア)】":[],
               "【ADL(更衣)】":[],
               "【ADL(内服)】":[]}

    # 入浴
    
    # 一部介助(介助浴)(介護力有り)
    kaijoyoku = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                 "【事前練習】":[],
                 "【衛生材料】":[],
                 "【介護用品】":["□シャワーチェア\n"],
                 "【家屋改修検討部位】":["□浴室の手すり\n","□浴室の段差\n"],
                 "【訪問看護介入依頼(連絡)項目】":[],
                 "【ヘルパー介入依頼項目】":[],
                 "【その他】":[],
                 "【退院中にすること】":[],
                 "【患者様に介助が必要なこと】":["□入浴一部介助\n"],
                 "【ケア等の事前練習】":[],
                 "【必要な介護用品】":["□シャワーチェア\n"],
                 "【バリアフリー確認部位】":["□浴室の手すり\n","□浴室の段差\n"],
                 "【注意事項】":[],
                 "【その他退院までにすること】":[],
                 "【在宅での医療行為】":[],
                 "【医療用麻薬】":[],
                 "【ADL(体動)】":[],
                 "【ADL(平行移動)】":[],
                 "【ADL(階段昇降)】":[],
                 "【ADL(移乗)】":[],
                 "【ADL(食事準備等)】":[],
                 "【ADL(摂食)】":[],
                 "【ADL(排泄)】":[],
                 "【ADL(入浴)】":["一部介助(介助浴)　　"],
                 "【ADL(口腔ケア)】":[],
                 "【ADL(更衣)】":[],
                 "【ADL(内服)】":[]}
    
    # 一部介助(介助浴)(介護力無し)
    kaijoyoku_n = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                   "【事前練習】":[],
                   "【衛生材料】":[],
                   "【介護用品】":["□シャワーチェア\n"],
                   "【家屋改修検討部位】":["□浴室の手すり\n","□浴室の段差\n"],
                   "【訪問看護介入依頼(連絡)項目】":[],
                   "【ヘルパー介入依頼項目】":["□入浴一部介助(　回/週)\n"],
                   "【その他】":[],
                   "【退院中にすること】":[],
                   "【患者様に介助が必要なこと】":["□入浴一部介助\n"],
                   "【ケア等の事前練習】":[],
                   "【必要な介護用品】":["□シャワーチェア\n"],
                   "【バリアフリー確認部位】":["□浴室の手すり\n","□浴室の段差\n"],
                   "【注意事項】":[],
                   "【その他退院までにすること】":[],
                   "【在宅での医療行為】":[],
                   "【医療用麻薬】":[],
                   "【ADL(体動)】":[],
                   "【ADL(平行移動)】":[],
                   "【ADL(階段昇降)】":[],
                   "【ADL(移乗)】":[],
                   "【ADL(食事準備等)】":[],
                   "【ADL(摂食)】":[],
                   "【ADL(排泄)】":[],
                   "【ADL(入浴)】":["一部介助(介助浴)　　"],
                   "【ADL(口腔ケア)】":[],
                   "【ADL(更衣)】":[],
                   "【ADL(内服)】":[]}
    
    # 全介助(リフト浴)(介護力有り)
    liftyoku = {"【タスクリスト】":[],
                "【事前練習】":[],
                "【衛生材料】":[],
                "【介護用品】":[],
                "【家屋改修検討部位】":[],
                "【訪問看護介入依頼(連絡)項目】":[],
                "【ヘルパー介入依頼項目】":["□訪問入浴(　回/週)\n"],
                "【その他】":[],
                "【退院中にすること】":["□訪問入浴(　回/週)\n"],
                "【患者様に介助が必要なこと】":["□入浴全介助\n"],
                "【ケア等の事前練習】":[],
                "【必要な介護用品】":[],
                "【バリアフリー確認部位】":[],
                "【注意事項】":[],
                "【その他退院までにすること】":[],
                "【在宅での医療行為】":[],
                "【医療用麻薬】":[],
                "【ADL(体動)】":[],
                "【ADL(平行移動)】":[],
                "【ADL(階段昇降)】":[],
                "【ADL(移乗)】":[],
                "【ADL(食事準備等)】":[],
                "【ADL(摂食)】":[],
                "【ADL(排泄)】":[],
                "【ADL(入浴)】":["全介助(リフト浴)　　"],
                "【ADL(口腔ケア)】":[],
                "【ADL(更衣)】":[],
                "【ADL(内服)】":[]}
    
    # 全介助(リフト浴)(介護力無し)
    liftyoku_n = {"【タスクリスト】":[],
                  "【事前練習】":[],
                  "【衛生材料】":[],
                  "【介護用品】":[],
                  "【家屋改修検討部位】":[],
                  "【訪問看護介入依頼(連絡)項目】":[],
                  "【ヘルパー介入依頼項目】":["□訪問入浴(　回/週)\n"],
                  "【その他】":[],
                  "【退院中にすること】":["□訪問入浴(　回/週)\n"],
                  "【患者様に介助が必要なこと】":["□入浴全介助\n"],
                  "【ケア等の事前練習】":[],
                  "【必要な介護用品】":[],
                  "【バリアフリー確認部位】":[],
                  "【注意事項】":[],
                  "【その他退院までにすること】":[],
                  "【在宅での医療行為】":[],
                  "【医療用麻薬】":[],
                  "【ADL(体動)】":[],
                  "【ADL(平行移動)】":[],
                  "【ADL(階段昇降)】":[],
                  "【ADL(移乗)】":[],
                  "【ADL(食事準備等)】":[],
                "【ADL(摂食)】":[],
                  "【ADL(排泄)】":[],
                  "【ADL(入浴)】":["全介助(リフト浴)　　"],
                  "【ADL(口腔ケア)】":[],
                  "【ADL(更衣)】":[],
                  "【ADL(内服)】":[]}

    # 口腔ケア
    
    # セッティング(介護力有り)
    setting = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
               "【事前練習】":[],
               "【衛生材料】":[],
               "【介護用品】":["□ガーグルベースン\n","□歯ブラシ\n","□スポンジブラシ\n","□歯間ブラシ\n","□口腔ジェル\n"],
               "【家屋改修検討部位】":[],
               "【訪問看護介入依頼(連絡)項目】":[],
               "【ヘルパー介入依頼項目】":[],
               "【その他】":[],
               "【退院中にすること】":[],
               "【患者様に介助が必要なこと】":["□歯磨き物品のセッティング・後片付け\n"],
               "【ケア等の事前練習】":[],
               "【必要な介護用品】":["□ガーグルベースン\n","□歯ブラシ\n","□スポンジブラシ\n","□歯間ブラシ\n","□口腔ジェル\n"],
               "【バリアフリー確認部位】":[],
               "【注意事項】":[],
               "【その他退院までにすること】":[],
               "【在宅での医療行為】":[],
               "【医療用麻薬】":[],
               "【ADL(体動)】":[],
               "【ADL(平行移動)】":[],
               "【ADL(階段昇降)】":[],
               "【ADL(移乗)】":[],
               "【ADL(食事準備等)】":[],
               "【ADL(摂食)】":[],
               "【ADL(排泄)】":[],
               "【ADL(入浴)】":[],
               "【ADL(口腔ケア)】":["セッティング　　"],
               "【ADL(更衣)】":[],
               "【ADL(内服)】":[]}
    
    # セッティング(介護力有無し)
    setting_n = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                 "【事前練習】":[],
                 "【衛生材料】":[],
                 "【介護用品】":["□ガーグルベースン\n","□歯ブラシ\n","□スポンジブラシ\n","□歯間ブラシ\n","□口腔ジェル\n"],
                 "【家屋改修検討部位】":[],
                 "【訪問看護介入依頼(連絡)項目】":[],
                 "【ヘルパー介入依頼項目】":["□歯磨き物品のセッティング・後片付け\n"],
                 "【その他】":[],
                 "【退院中にすること】":[],
                 "【患者様に介助が必要なこと】":["□歯磨き物品のセッティング・後片付け\n"],
                 "【ケア等の事前練習】":[],
                 "【必要な介護用品】":["□ガーグルベースン\n","□歯ブラシ\n","□スポンジブラシ\n","□歯間ブラシ\n","□口腔ジェル\n"],
                 "【バリアフリー確認部位】":[],
                 "【注意事項】":[],
                 "【その他退院までにすること】":[],
                 "【在宅での医療行為】":[],
                 "【医療用麻薬】":[],
                 "【ADL(体動)】":[],
                 "【ADL(平行移動)】":[],
                 "【ADL(階段昇降)】":[],
                 "【ADL(移乗)】":[],
                 "【ADL(食事準備等)】":[],
                 "【ADL(摂食)】":[],
                 "【ADL(排泄)】":[],
                 "【ADL(入浴)】":[],
                 "【ADL(口腔ケア)】":["セッティング　　"],
                 "【ADL(更衣)】":[],
                 "【ADL(内服)】":[]}
    
    # 歯磨き・うがい(介護力有り)
    hamigaki = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                "【事前練習】":["□口腔ケア(　月　日)\n"],
                "【衛生材料】":[],
                "【介護用品】":["□ガーグルベースン\n","□歯ブラシ\n","□スポンジブラシ\n","□歯間ブラシ\n","□口腔ジェル\n"],
                "【家屋改修検討部位】":[],
                "【訪問看護介入依頼(連絡)項目】":[],
                "【ヘルパー介入依頼項目】":[],
                "【その他】":[],
                "【退院中にすること】":[],
                "【患者様に介助が必要なこと】":["□歯磨き・うがい介助\n"],
                "【ケア等の事前練習】":["□口腔ケア(　月　日)\n"],
                "【必要な介護用品】":["□ガーグルベースン\n","□歯ブラシ\n","□スポンジブラシ\n","□歯間ブラシ\n","□口腔ジェル\n"],
                "【バリアフリー確認部位】":[],
                "【注意事項】":[],
                "【その他退院までにすること】":[],
                "【在宅での医療行為】":[],
                "【医療用麻薬】":[],
                "【ADL(体動)】":[],
                "【ADL(平行移動)】":[],
                "【ADL(階段昇降)】":[],
                "【ADL(移乗)】":[],
                "【ADL(食事準備等)】":[],
                "【ADL(摂食)】":[],
                "【ADL(排泄)】":[],
                "【ADL(入浴)】":[],
                "【ADL(口腔ケア)】":["歯磨き・うがい　　"],
                "【ADL(更衣)】":[],
                "【ADL(内服)】":[]}
    
    # 歯磨き・うがい(介護力無し)
    hamigaki_n = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                  "【事前練習】":[],
                  "【衛生材料】":[],
                  "【介護用品】":["□ガーグルベースン\n","□歯ブラシ\n","□スポンジブラシ\n","□歯間ブラシ\n","□口腔ジェル\n"],
                  "【家屋改修検討部位】":[],
                  "【訪問看護介入依頼(連絡)項目】":[],
                  "【ヘルパー介入依頼項目】":["□歯磨き・うがい介助\n"],
                  "【その他】":[],
                  "【退院中にすること】":[],
                  "【患者様に介助が必要なこと】":["□歯磨き・うがい介助\n"],
                  "【ケア等の事前練習】":[],
                  "【必要な介護用品】":["□ガーグルベースン\n","□歯ブラシ\n","□スポンジブラシ\n","□歯間ブラシ\n","□口腔ジェル\n"],
                  "【バリアフリー確認部位】":[],
                  "【注意事項】":[],
                  "【その他退院までにすること】":[],
                  "【在宅での医療行為】":[],
                  "【医療用麻薬】":[],
                  "【ADL(体動)】":[],
                  "【ADL(平行移動)】":[],
                  "【ADL(階段昇降)】":[],
                  "【ADL(移乗)】":[],
                  "【ADL(食事準備等)】":[],
                  "【ADL(摂食)】":[],
                  "【ADL(排泄)】":[],
                  "【ADL(入浴)】":[],
                  "【ADL(口腔ケア)】":["歯磨き・うがい　　"],
                  "【ADL(更衣)】":[],
                  "【ADL(内服)】":[]}
    
    # 入れ歯(介護力有り)
    ireba = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
             "【事前練習】":[],
             "【衛生材料】":[],
             "【介護用品】":["□入れ歯洗浄剤\n","□入れ歯洗浄用ケース\n"],
             "【家屋改修検討部位】":[],
             "【訪問看護介入依頼(連絡)項目】":[],
             "【ヘルパー介入依頼項目】":[],
             "【その他】":[],
             "【退院中にすること】":[],
             "【患者様に介助が必要なこと】":["□入れ歯のケア\n"],
             "【ケア等の事前練習】":[],
             "【必要な介護用品】":["□入れ歯洗浄剤\n","□入れ歯洗浄用ケース\n"],
             "【バリアフリー確認部位】":[],
             "【注意事項】":[],
             "【その他退院までにすること】":[],
             "【在宅での医療行為】":[],
             "【医療用麻薬】":[],
             "【ADL(体動)】":[],
             "【ADL(平行移動)】":[],
             "【ADL(階段昇降)】":[],
             "【ADL(移乗)】":[],
             "【ADL(食事準備等)】":[],
             "【ADL(摂食)】":[],
             "【ADL(排泄)】":[],
             "【ADL(入浴)】":[],
             "【ADL(口腔ケア)】":["入れ歯のケア　　"],
             "【ADL(更衣)】":[],
             "【ADL(内服)】":[]}
    
    # 入れ歯(介護力無し)
    ireba_n = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
               "【事前練習】":[],
               "【衛生材料】":[],
               "【介護用品】":["□入れ歯洗浄剤\n","□入れ歯洗浄用ケース\n"],
               "【家屋改修検討部位】":[],
               "【訪問看護介入依頼(連絡)項目】":[],
               "【ヘルパー介入依頼項目】":["□入れ歯のケア\n"],
               "【その他】":[],
               "【退院中にすること】":[],
               "【患者様に介助が必要なこと】":["□入れ歯のケア\n"],
               "【ケア等の事前練習】":[],
               "【必要な介護用品】":["□入れ歯洗浄剤\n","□入れ歯洗浄用ケース\n"],
               "【バリアフリー確認部位】":[],
               "【注意事項】":[],
               "【その他退院までにすること】":[],
               "【在宅での医療行為】":[],
               "【医療用麻薬】":[],
               "【ADL(体動)】":[],
               "【ADL(平行移動)】":[],
               "【ADL(階段昇降)】":[],
               "【ADL(移乗)】":[],
               "【ADL(食事準備等)】":[],
               "【ADL(摂食)】":[],
               "【ADL(排泄)】":[],
               "【ADL(入浴)】":[],
               "【ADL(口腔ケア)】":["入れ歯のケア　　"],
               "【ADL(更衣)】":[],
               "【ADL(内服)】":[]}

    # 更衣
    
    # 一部介助(袖を通す・ボタンなど)(介護力有り)
    sode_btn = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                "【事前練習】":["□更衣(　月　日)\n"],
                "【衛生材料】":[],
                "【介護用品】":["□介護用パジャマ\n"],
                "【家屋改修検討部位】":[],
                "【訪問看護介入依頼(連絡)項目】":[],
                "【ヘルパー介入依頼項目】":[],
                "【その他】":[],
                "【退院中にすること】":[],
                "【患者様に介助が必要なこと】":["□更衣一部介助(袖を通す・ボタンなど)\n"],
                "【ケア等の事前練習】":["□更衣(　月　日)\n"],
                "【必要な介護用品】":["□介護用パジャマ(着脱しやすいゆったりした前開きのもの)\n"],
                "【バリアフリー確認部位】":[],
                "【注意事項】":[],
                "【その他退院までにすること】":[],
                "【在宅での医療行為】":[],
                "【医療用麻薬】":[],
                "【ADL(体動)】":[],
                "【ADL(平行移動)】":[],
                "【ADL(階段昇降)】":[],
                "【ADL(移乗)】":[],
                "【ADL(食事準備等)】":[],
                "【ADL(摂食)】":[],
                "【ADL(排泄)】":[],
                "【ADL(入浴)】":[],
                "【ADL(口腔ケア)】":[],
                "【ADL(更衣)】":["一部介助(袖を通す・ボタンなど)　　"],
                "【ADL(内服)】":[]}
    
    # 一部介助(袖を通す・ボタンなど)(介護力無し)
    sode_btn_n = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                  "【事前練習】":[],
                  "【衛生材料】":[],
                  "【介護用品】":["□介護用パジャマ\n"],
                  "【家屋改修検討部位】":[],
                  "【訪問看護介入依頼(連絡)項目】":[],
                  "【ヘルパー介入依頼項目】":["□更衣一部介助(袖を通す・ボタンなど)\n"],
                  "【その他】":[],
                  "【退院中にすること】":[],
                  "【患者様に介助が必要なこと】":["□更衣一部介助(袖を通す・ボタンなど)\n"],
                  "【ケア等の事前練習】":[],
                  "【必要な介護用品】":["□介護用パジャマ(着脱しやすいゆったりした前開きのもの)\n"],
                  "【バリアフリー確認部位】":[],
                  "【注意事項】":[],
                  "【その他退院までにすること】":[],
                  "【在宅での医療行為】":[],
                  "【医療用麻薬】":[],
                  "【ADL(体動)】":[],
                  "【ADL(平行移動)】":[],
                  "【ADL(階段昇降)】":[],
                  "【ADL(移乗)】":[],
                  "【ADL(食事準備等)】":[],
                  "【ADL(摂食)】":[],
                  "【ADL(排泄)】":[],
                  "【ADL(入浴)】":[],
                  "【ADL(口腔ケア)】":[],
                  "【ADL(更衣)】":["一部介助(袖を通す・ボタンなど)　　"],
                  "【ADL(内服)】":[]}
    
    # 全介助(介護力有り)
    koui_all = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                "【事前練習】":["□更衣(　月　日)\n"],
                "【衛生材料】":[],
                "【介護用品】":["□介護用パジャマ\n"],
                "【家屋改修検討部位】":[],
                "【訪問看護介入依頼(連絡)項目】":[],
                "【ヘルパー介入依頼項目】":[],
                "【その他】":[],
                "【退院中にすること】":[],
                "【患者様に介助が必要なこと】":["□更衣全介助\n"],
                "【ケア等の事前練習】":["□更衣(　月　日)\n"],
                "【必要な介護用品】":["□介護用パジャマ(着脱しやすいゆったりした前開きのもの)\n"],
                "【バリアフリー確認部位】":[],
                "【注意事項】":[],
                "【その他退院までにすること】":[],
                "【在宅での医療行為】":[],
                "【医療用麻薬】":[],
                "【ADL(体動)】":[],
                "【ADL(平行移動)】":[],
                "【ADL(階段昇降)】":[],
                "【ADL(移乗)】":[],
                "【ADL(食事準備等)】":[],
                "【ADL(摂食)】":[],
                "【ADL(排泄)】":[],
                "【ADL(入浴)】":[],
                "【ADL(口腔ケア)】":[],
                "【ADL(更衣)】":["全介助　　"],
                "【ADL(内服)】":[]}
    
    # 全介助(介護力無し)
    koui_all_n = {"【タスクリスト】":["□MSWを通じて福祉用具業者と情報共有\n"],
                  "【事前練習】":[],
                  "【衛生材料】":[],
                  "【介護用品】":["□介護用パジャマ\n"],
                  "【家屋改修検討部位】":[],
                  "【訪問看護介入依頼(連絡)項目】":[],
                  "【ヘルパー介入依頼項目】":["□更衣全介助\n"],
                  "【その他】":[],
                  "【退院中にすること】":[],
                  "【患者様に介助が必要なこと】":["□更衣全介助\n"],
                  "【ケア等の事前練習】":[],
                  "【必要な介護用品】":["□介護用パジャマ(着脱しやすいゆったりした前開きのもの)\n"],
                  "【バリアフリー確認部位】":[],
                  "【注意事項】":[],
                  "【その他退院までにすること】":[],
                  "【在宅での医療行為】":[],
                  "【医療用麻薬】":[],
                  "【ADL(体動)】":[],
                  "【ADL(平行移動)】":[],
                  "【ADL(階段昇降)】":[],
                  "【ADL(移乗)】":[],
                  "【ADL(食事準備等)】":[],
                  "【ADL(摂食)】":[],
                  "【ADL(排泄)】":[],
                  "【ADL(入浴)】":[],
                  "【ADL(口腔ケア)】":[],
                  "【ADL(更衣)】":["全介助　　"],
                  "【ADL(内服)】":[]}
                  

    # 内服
    
    # 確実与薬(介護力有り)
    kakujitsu = {"【タスクリスト】":[],
                 "【事前練習】":[],
                 "【衛生材料】":[],
                 "【介護用品】":[],
                 "【家屋改修検討部位】":[],
                 "【訪問看護介入依頼(連絡)項目】":[],
                 "【ヘルパー介入依頼項目】":[],
                 "【その他】":[],
                 "【退院中にすること】":[],
                 "【患者様に介助が必要なこと】":["□内服介助・確認\n"],
                 "【ケア等の事前練習】":[],
                 "【必要な介護用品】":[],
                 "【バリアフリー確認部位】":[],
                 "【注意事項】":[],
                 "【その他退院までにすること】":[],
                 "【在宅での医療行為】":[],
                 "【医療用麻薬】":[],
                 "【ADL(体動)】":[],
                 "【ADL(平行移動)】":[],
                 "【ADL(階段昇降)】":[],
                 "【ADL(移乗)】":[],
                 "【ADL(食事準備等)】":[],
                 "【ADL(摂食)】":[],
                 "【ADL(排泄)】":[],
                 "【ADL(入浴)】":[],
                 "【ADL(口腔ケア)】":[],
                 "【ADL(更衣)】":[],
                 "【ADL(内服)】":["確実与薬　　"]}
                 
    # 確実与薬(介護力無し)
    kakujitsu_n = {"【タスクリスト】":[],
                   "【事前練習】":[],
                   "【衛生材料】":[],
                   "【介護用品】":[],
                   "【家屋改修検討部位】":[],
                   "【訪問看護介入依頼(連絡)項目】":["□内服介助・確認\n"],
                   "【ヘルパー介入依頼項目】":["□内服介助・確認\n"],
                   "【その他】":[],
                   "【退院中にすること】":[],
                   "【患者様に介助が必要なこと】":["□内服介助・確認\n"],
                   "【ケア等の事前練習】":[],
                   "【必要な介護用品】":[],
                   "【バリアフリー確認部位】":[],
                   "【注意事項】":[],
                   "【その他退院までにすること】":[],
                   "【在宅での医療行為】":[],
                   "【医療用麻薬】":[],
                   "【ADL(体動)】":[],
                   "【ADL(平行移動)】":[],
                   "【ADL(階段昇降)】":[],
                   "【ADL(移乗)】":[],
                   "【ADL(食事準備等)】":[],
                   "【ADL(摂食)】":[],
                   "【ADL(排泄)】":[],
                   "【ADL(入浴)】":[],
                   "【ADL(口腔ケア)】":[],
                   "【ADL(更衣)】":[],
                   "【ADL(内服)】":["確実与薬　　"]}

    # 一回配薬(介護力有り)
    ikkaihaiyaku = {"【タスクリスト】":[],
                    "【事前練習】":[],
                    "【衛生材料】":[],
                    "【介護用品】":[],
                    "【家屋改修検討部位】":[],
                    "【訪問看護介入依頼(連絡)項目】":[],
                    "【ヘルパー介入依頼項目】":[],
                    "【その他】":[],
                    "【退院中にすること】":[],
                    "【患者様に介助が必要なこと】":["□内服準備,確認\n"],
                    "【ケア等の事前練習】":[],
                    "【必要な介護用品】":[],
                    "【バリアフリー確認部位】":[],
                    "【注意事項】":[],
                    "【その他退院までにすること】":[],
                    "【在宅での医療行為】":[],
                    "【医療用麻薬】":[],
                    "【ADL(体動)】":[],
                    "【ADL(平行移動)】":[],
                    "【ADL(階段昇降)】":[],
                    "【ADL(移乗)】":[],
                    "【ADL(食事準備等)】":[],
                    "【ADL(摂食)】":[],
                    "【ADL(排泄)】":[],
                    "【ADL(入浴)】":[],
                    "【ADL(口腔ケア)】":[],
                    "【ADL(更衣)】":[],
                    "【ADL(内服)】":["一回配薬　　"]}
                 
    # 一回配薬(介護力無し)
    ikkaihaiyaku_n = {"【タスクリスト】":[],
                      "【事前練習】":["□お薬カレンダー使用方法(　月　日)\n"],
                      "【衛生材料】":[],
                      "【介護用品】":["□お薬カレンダー\n"],
                      "【家屋改修検討部位】":[],
                      "【訪問看護介入依頼(連絡)項目】":["□内服確認\n"],
                      "【ヘルパー介入依頼項目】":[],
                      "【その他】":[],
                      "【退院中にすること】":[],
                      "【患者様に介助が必要なこと】":["□内服準備(一回分ずつ),確認\n"],
                      "【ケア等の事前練習】":["□お薬カレンダー使用方法(　月　日)\n"],
                      "【必要な介護用品】":["□お薬カレンダー\n"],
                      "【バリアフリー確認部位】":[],
                      "【注意事項】":[],
                      "【その他退院までにすること】":[],
                      "【在宅での医療行為】":[],
                      "【医療用麻薬】":[],
                      "【ADL(体動)】":[],
                      "【ADL(平行移動)】":[],
                      "【ADL(階段昇降)】":[],
                      "【ADL(移乗)】":[],
                      "【ADL(食事準備等)】":[],
                      "【ADL(摂食)】":[],
                      "【ADL(排泄)】":[],
                      "【ADL(入浴)】":[],
                      "【ADL(口腔ケア)】":[],
                      "【ADL(更衣)】":[],
                      "【ADL(内服)】":["一回配薬　　"]}
    
    
    # 簡易懸濁(介護力有り)
    kendaku = {"【タスクリスト】":[],
               "【事前練習】":["□内服薬簡易懸濁(　月　日)\n"],
               "【衛生材料】":["□懸濁ボトル\n"],
               "【介護用品】":[],
               "【家屋改修検討部位】":[],
               "【訪問看護介入依頼(連絡)項目】":[],
               "【ヘルパー介入依頼項目】":[],
               "【その他】":[],
               "【退院中にすること】":[],
               "【患者様に介助が必要なこと】":["□内服薬簡易懸濁\n"],
               "【ケア等の事前練習】":["□内服薬簡易懸濁(　月　日)\n"],
               "【必要な介護用品】":[],
               "【バリアフリー確認部位】":[],
               "【注意事項】":[],
               "【その他退院までにすること】":[],
               "【在宅での医療行為】":[],
               "【医療用麻薬】":[],
               "【ADL(体動)】":[],
               "【ADL(平行移動)】":[],
               "【ADL(階段昇降)】":[],
               "【ADL(移乗)】":[],
               "【ADL(食事準備等)】":[],
               "【ADL(摂食)】":[],
               "【ADL(排泄)】":[],
               "【ADL(入浴)】":[],
               "【ADL(口腔ケア)】":[],
               "【ADL(更衣)】":[],
               "【ADL(内服)】":["簡易懸濁　　"]}
    
    # 簡易懸濁(介護力有無し)
    kendaku_n = {"【タスクリスト】":[],
                 "【事前練習】":[],
                 "【衛生材料】":["□懸濁ボトル\n"],
                 "【介護用品】":[],
                 "【家屋改修検討部位】":[],
                 "【訪問看護介入依頼(連絡)項目】":["□内服薬簡易懸濁\n"],
                 "【ヘルパー介入依頼項目】":[],
                 "【その他】":[],
                 "【退院中にすること】":[],
                 "【患者様に介助が必要なこと】":["□内服薬簡易懸濁\n"],
                 "【ケア等の事前練習】":[],
                 "【必要な介護用品】":[],
                 "【バリアフリー確認部位】":[],
                 "【注意事項】":[],
                 "【その他退院までにすること】":[],
                 "【在宅での医療行為】":[],
                 "【医療用麻薬】":[],
                 "【ADL(体動)】":[],
                 "【ADL(平行移動)】":[],
                 "【ADL(階段昇降)】":[],
                 "【ADL(移乗)】":[],
                 "【ADL(食事準備等)】":[],
                 "【ADL(摂食)】":[],
                 "【ADL(排泄)】":[],
                 "【ADL(入浴)】":[],
                 "【ADL(口腔ケア)】":[],
                 "【ADL(更衣)】":[],
                 "【ADL(内服)】":["簡易懸濁　　"]}
    
    # 経管投与(経鼻・胃瘻)(介護力有り)
    keikan = {"【タスクリスト】":[],
              "【事前練習】":["□内服薬経管投与(　月　日)\n"],
              "【衛生材料】":["◆内服薬経管投与\n","□懸濁ボトル\n","□カテーテルチップ\n"],
              "【介護用品】":[],
              "【家屋改修検討部位】":[],
              "【訪問看護介入依頼(連絡)項目】":[],
              "【ヘルパー介入依頼項目】":[],
              "【その他】":[],
              "【退院中にすること】":[],
              "【患者様に介助が必要なこと】":["□内服薬経管投与\n"],
              "【ケア等の事前練習】":["□内服薬経管投与(　月　日)\n"],
              "【必要な介護用品】":[],
              "【バリアフリー確認部位】":[],
              "【注意事項】":[],
              "【その他退院までにすること】":[],
              "【在宅での医療行為】":[],
              "【医療用麻薬】":[],
              "【ADL(体動)】":[],
              "【ADL(平行移動)】":[],
              "【ADL(階段昇降)】":[],
              "【ADL(移乗)】":[],
              "【ADL(食事準備等)】":[],
              "【ADL(摂食)】":[],
              "【ADL(排泄)】":[],
              "【ADL(入浴)】":[],
              "【ADL(口腔ケア)】":[],
              "【ADL(更衣)】":[],
              "【ADL(内服)】":["経管投与(経鼻・胃瘻)　　"]}
    
    # 経管投与(経鼻・胃瘻)(介護力有無し)
    keikan_n = {"【タスクリスト】":[],
                "【事前練習】":[],
                "【衛生材料】":["◆内服薬経管投与\n","□懸濁ボトル\n","□カテーテルチップ\n"],
                "【介護用品】":[],
                "【家屋改修検討部位】":[],
                "【訪問看護介入依頼(連絡)項目】":["□内服薬経管投与\n"],
                "【ヘルパー介入依頼項目】":[],
                "【その他】":[],
                "【退院中にすること】":[],
                "【患者様に介助が必要なこと】":["□内服薬経管投与\n"],
                "【ケア等の事前練習】":[],
                "【必要な介護用品】":[],
                "【バリアフリー確認部位】":[],
                "【注意事項】":[],
                "【その他退院までにすること】":[],
                "【在宅での医療行為】":[],
                "【医療用麻薬】":[],
                "【ADL(体動)】":[],
                "【ADL(平行移動)】":[],
                "【ADL(階段昇降)】":[],
                "【ADL(移乗)】":[],
                "【ADL(食事準備等)】":[],
                "【ADL(摂食)】":[],
                "【ADL(排泄)】":[],
                "【ADL(入浴)】":[],
                "【ADL(口腔ケア)】":[],
                "【ADL(更衣)】":[],
                "【ADL(内服)】":["経管投与(経鼻・胃瘻)　　"]}
    



    








    


    

    # エラーメッセージを出す関数
    def error_appear(error):
        error.configure(text="error!  未選択項目あり!")
        lbl_end_comment.configure(text="error!  未選択or未入力項目あり! (￣▽￣)")

    def error_appear2(error):
        error.configure(text="error!  未入力項目あり!")
        lbl_end_comment.configure(text="error!  未選択or未入力項目あり! (￣▽￣)")

    # エラーメッセージを取り消す関数
    def error_clear(error):
        error.configure(text="")



    error_num = 0# エラーの数を数えるために変数



    # 性別
    if 1 == v44.get():
        info_gender.append("男性")
        error_clear(error_namae)

    elif 2 == v44.get():
        info_gender.append("女性")
        error_clear(error_namae)

    else:
        error_appear(error_namae)
        error_num = error_num + 1
        
    

    # 在宅医療等介入予定・既存の在宅医療

    # 訪問診療
    if 1 == v32.get():
        info_yotei.append("・訪問診療：予定なし\n")
        dc_list(s__yotei_n)

        if 1 == v33.get():
            info_zaitaku.append("・訪問診療：なし\n")

        elif 2 == v33.get():
            h_shinryou = str(txt_shinryou.get())
            info_zaitaku.append("・訪問診療：{}\n".format(h_shinryou))

        else:
            error_appear(error_zaitaku)
            error_num = error_num + 1

    elif 2 == v32.get():
        info_yotei.append("・訪問診療：予定あり\n")
        
        if 1 == v33.get():
            info_zaitaku.append("・訪問診療：なし\n")
            dc_list(s__kison_n)

        elif 2 == v33.get():
            h_shinryou = str(txt_shinryou.get())
            info_zaitaku.append("・訪問診療：{}\n".format(h_shinryou))
            dc_list(s__kison)

        else:
            error_appear(error_zaitaku)
            error_num = error_num + 1

    elif 3 == v32.get():
        info_yotei.append("・訪問診療：未定\n")
        dc_list(s__yotei_n)

        if 1 == v33.get():
            info_zaitaku.append("・訪問診療：なし\n")

        elif 2 == v33.get():
            h_shinryou = str(txt_shinryou.get())
            info_zaitaku.append("・訪問診療：{}\n".format(h_shinryou))

        else:
            error_appear(error_zaitaku)
            error_num = error_num + 1

    else:
        error_appear(error_yotei)
        error_num = error_num + 1

    # 訪問看護
    if 1 == v46.get():
        info_yotei.append("・訪問看護：予定なし\n")
        dc_list(n_yotei_n)

        if 1 == v34.get():
            info_zaitaku.append("・訪問看護：なし\n")

        elif 2 == v34.get():
            h_kango = str(txt_kango.get())
            info_zaitaku.append("・訪問看護：{}\n".format(h_kango))

        else:
            error_appear(error_zaitaku)
            error_num = error_num + 1

    elif 2 == v46.get():
        info_yotei.append("・訪問看護：予定あり\n")

        if 1 == v34.get():
            info_zaitaku.append("・訪問看護：なし\n")
            dc_list(n_kison_n)

        elif 2 == v34.get():
            h_kango = str(txt_kango.get())
            info_zaitaku.append("・訪問看護：{}\n".format(h_kango))
            dc_list(n_kison)

        else:
            error_appear(error_zaitaku)
            error_num = error_num + 1

    elif 3 == v46.get():
        info_yotei.append("・訪問看護：未定\n")
        dc_list(n_yotei_n)

        if 1 == v34.get():
            info_zaitaku.append("・訪問看護：なし\n")

        elif 2 == v34.get():
            h_kango = str(txt_kango.get())
            info_zaitaku.append("・訪問看護：{}\n".format(h_kango))

        else:
            error_appear(error_zaitaku)
            error_num = error_num + 1

    else:
        error_appear(error_yotei)
        error_num = error_num + 1

    # 訪問介護
    if 1 == v47.get():
        info_yotei.append("・訪問介護：予定なし\n")
        dc_list(care_yotei_n)

        if 1 == v35.get():
                info_zaitaku.append("・訪問介護：なし\n")

        elif 2 == v35.get():
            h_care = str(txt_care.get())
            info_zaitaku.append("・訪問介護：{}\n".format(h_care))

        else:
            error_appear(error_zaitaku)
            error_num = error_num + 1

    elif 2 == v47.get():
        info_yotei.append("・訪問介護：予定あり\n")

        if 1 == v35.get():
                info_zaitaku.append("・訪問介護：なし\n")
                dc_list(care_kison_n)

        elif 2 == v35.get():
            h_care = str(txt_care.get())
            info_zaitaku.append("・訪問介護：{}\n".format(h_care))
            dc_list(care_kison)

        else:
            error_appear(error_zaitaku)
            error_num = error_num + 1

    elif 3 == v47.get():
        info_yotei.append("・訪問介護：未定\n")
        dc_list(care_yotei_n)

        if 1 == v35.get():
                info_zaitaku.append("・訪問介護：なし\n")

        elif 2 == v35.get():
            h_care = str(txt_care.get())
            info_zaitaku.append("・訪問介護：{}\n".format(h_care))

        else:
            error_appear(error_zaitaku)
            error_num = error_num + 1

    else:
        error_appear(error_yotei)
        error_num = error_num + 1


    # ケアマネージャー
    if 1 == v48.get():
        info_zaitaku.append("・ケアマネージャー：なし\n")

    elif 2 == v48.get():
        c_mane = str(txt_c_mane.get())
        c_tel = str(txt_c_tel.get())
        c_tel = jaconv.z2h(c_tel,digit=True)
        info_zaitaku.append("・ケアマネージャー：{}様".format(c_mane))
        info_zaitaku.append("　連絡先：{}\n".format(c_tel))

    else:
        error_appear(error_zaitaku)
        error_num = error_num + 1

    
    

    # 障害保険・経済状況
   
    if 1 == v42.get():
        pass

    elif 2 == v42.get():
        info_m_hoken.append("生活保護受給\n")

    else:
        error_appear(error_m_hoken)
        error_num = error_num + 1


    if 1 == v43.get():
        pass

    elif 2 == v43.get():

        if 1 == v36.get():
            info_m_hoken.append("身体障害者手帳1級\n")

        elif 2 == v36.get():
            info_m_hoken.append("身体障害者手帳2級\n")

        elif 3 == v36.get():
            info_m_hoken.append("身体障害者手帳3級\n")

        elif 4 == v36.get():
            info_m_hoken.append("身体障害者手帳4級\n")

        elif 5 == v36.get():
            info_m_hoken.append("身体障害者手帳5級\n")

        elif 6 == v36.get():
            info_m_hoken.append("身体障害者手帳6級\n")

        elif 7 == v36.get():
            info_m_hoken.append("身体障害者手帳7級\n")

        else:
            error_appear(error_m_hoken)
            error_num = error_num + 1

    if 1 == v42.get() and 1 == v43.get():
        info_m_hoken.append("特記事項なし\n")
            
    
    # 要介護認定
    if 1 == v37.get():
        info_c_hoken.append("なし\n")

    elif 2 == v37.get():

        if 1 == v38.get():
            info_c_hoken.append("要支援1\n")

        elif 2 == v38.get():
            info_c_hoken.append("要支援2\n")

        elif 3 == v38.get():
            info_c_hoken.append("要介護1\n")

        elif 4 == v38.get():
            info_c_hoken.append("要介護2\n")

        elif 5 == v38.get():
            info_c_hoken.append("要介護3\n")

        elif 6 == v38.get():
            info_c_hoken.append("要介護4\n")

        elif 7 == v38.get():
            info_c_hoken.append("要介護5\n")

        else:
            error_appear(error_c_hoken)
            error_num = error_num + 1

    elif 3 == v37.get():
        info_c_hoken.append("申請中\n")

    else:
        error_appear(error_c_hoken)
        error_num = error_num + 1
        

    # 同居家族
    
    if 1 == v39.get():
        info_fam.append("なし\n")

    elif 2 == v39.get():
        """
        info_fam.append("配偶者　　")if boolvar47.get()else""
        info_fam.append("子　　")if boolvar48.get()else""
        info_fam.append("孫　　")if boolvar49.get()else""
        info_fam.append("親　　")if boolvar50.get()else""
        info_fam.append("兄弟姉妹　　")if boolvar51.get()else""
        f_doukyo = str(txt_fam_sonota.get()) if boolvar52.get()else""
        info_fam.append("{}\n".format(f_doukyo))if boolvar52.get()else""
        """
        chk_fam = 0
        
        if boolvar47.get():
            info_fam.append("配偶者　　")
            error_clear(error_fam)
            chk_fam = chk_fam + 1  
        if boolvar48.get():
            info_fam.append("子　　")
            error_clear(error_fam)
            chk_fam = chk_fam + 1 
        if boolvar49.get():
            info_fam.append("孫　　")
            error_clear(error_fam)
            chk_fam = chk_fam + 1 
        if boolvar50.get():
            info_fam.append("親　　")
            error_clear(error_fam)
            chk_fam = chk_fam + 1 
        if boolvar51.get():
            info_fam.append("兄弟姉妹　　")
            error_clear(error_fam)
            chk_fam = chk_fam + 1 
        if boolvar52.get():
            f_doukyo = str(txt_fam_sonota.get())
            info_fam.append("{}\n".format(f_doukyo))
            error_clear(error_fam)
            chk_fam = chk_fam + 1 
        if chk_fam == 0:
            error_appear(error_fam)
            error_num = error_num + 1

    else:
        error_appear(error_fam)
        error_num = error_num + 1


    # 主な介護者
    if 1 == v40.get():
        info_kaigo.append("なし\n")

    elif 2 == v40.get():
        """
        info_kaigo.append("配偶者　　")if boolvar53.get()else""
        info_kaigo.append("子　　")if boolvar54.get()else""
        info_kaigo.append("孫　　")if boolvar55.get()else""
        info_kaigo.append("親　　")if boolvar56.get()else""
        info_kaigo.append("兄弟姉妹　　")if boolvar57.get()else""
        c_main = str(txt_fam_sonota.get()) if boolvar58.get()else""
        info_kaigo.append("{}\n".format(c_main))if boolvar58.get()else""
        """
        chk_kaigo = 0
        
        if boolvar53.get():
            info_kaigo.append("配偶者　　")
            error_clear(error_kaigo)
            chk_kaigo = chk_kaigo + 1 
        if boolvar54.get():
            info_kaigo.append("子　　")
            error_clear(error_kaigo)
            chk_kaigo = chk_kaigo + 1 
        if boolvar55.get():
            info_kaigo.append("孫　　")
            error_clear(error_kaigo)
            chk_kaigo = chk_kaigo + 1 
        if boolvar56.get():
            info_kaigo.append("親　　")
            error_clear(error_kaigo)
            chk_kaigo = chk_kaigo + 1 
        if boolvar57.get():
            info_kaigo.append("兄弟姉妹　　")
            error_clear(error_kaigo)
            chk_kaigo = chk_kaigo + 1 
        if boolvar58.get():
            c_main = str(txt_fam_sonota.get())
            info_kaigo.append("{}\n".format(c_main))
            error_clear(error_kaigo)
            chk_kaigo = chk_kaigo + 1 
        if chk_kaigo == 0:
            error_appear(error_kaigo)
            error_num = error_num + 1

    else:
        error_appear(error_kaigo)
        error_num = error_num + 1


    
    # 患者が一人で過ごす時間
    if 1 == v41.get():
        info_hitori.append("なし\n")

    elif 2 == v41.get():
        info_hitori.append("あり\n")

    else:
        error_appear(error_hitori)
        error_num = error_num + 1


    
    # 家屋環境
    if 1 == v24.get():
        info_kaoku.append("・段差：なし(敷地全体)\n")

    elif 2 == v24.get():
        info_kaoku.append("・段差：あり\n")

    elif 3 == v24.get():
        info_kaoku.append("・段差：不明\n")

    else:
        error_appear(error_dansa)
        error_num = error_num + 1


    if 1 == v25.get():
        info_kaoku.append("・車いすが通れる幅(90cm)：なし\n")

    elif 2 == v25.get():
        info_kaoku.append("・車いすが通れる幅(90cm)：あり\n")

    elif 3 == v25.get():
        info_kaoku.append("・車いすが通れる幅(90cm)：不明\n")

    else:
        error_appear(error_kurumaisu)
        error_num = error_num + 1


    if 1 == v45.get():
        info_kaoku.append("・日常生活：居室フロアで生活可\n")

    elif 2 == v45.get():
        info_kaoku.append("・日常生活：他フロアへの移動を要する\n")

    else:
        error_appear(error_seikatsu)
        error_num = error_num + 1


    # 退院手段
    if 1 == v49.get():
        dc_list(honnin)
        info_syudan.append("本人のみで退院\n")

    elif 2 == v49.get():
        dc_list(kazoku)
        info_syudan.append("家族の送迎あり\n")

    elif 3 == v49.get():
        dc_list(c_taxi)
        info_syudan.append("介護タクシー\n")

    else:
        error_appear(error_syudan)
        error_num = error_num + 1
        
        
        
        
        
    
    # 在宅酸素療法
    if 1 == v1.get():
        # 何もしない
        pass
    

    # 酸素吸入『有り』が選択されてていたら
    elif 2 == v1.get():
        #todo.append("□HOT指示書を医師に依頼\n")# ここはtaiinshienの関数で辞書型をリストに追加する処理に変更
        dc_list(o2)
        
        
        # 既存の在宅酸素療法『有り』『無し』いずれか選択されたほうに紐づくデータをリストo2に追加
        # 『無し』が選択されたら
        if 1 == v2.get():
            todo.append("□星医療に連絡\n")
        # 『有り』が選択されたら    
        elif 2== v2.get():
            office = str(txt1.get())
            todo.append("□既存のHOT業者【{}】に連絡\n".format(office))
            
            
            
        # 既存のHOT『有り』『無し』どちらも選択されていなければエラーメッセージを出す
        else:
            error_appear(error_o2_1)
            error_num = error_num + 1
            
            
        
    # 酸素吸入『有り』『無し』どちらも選択されていなければエラーメッセージを出す
    else:
        error_appear(error_o2_1)
        error_num = error_num + 1
    


    # 医療行為
    if 1 == v3.get():
        pass
    
    elif 2 == v3.get():
        """
        #dc_list(csci)if boolvar1.get()else""
        dc_list(div)if boolvar2.get()else""
        dc_list(cvp)if boolvar46.get()else""
        dc_list(maruyama)if boolvar3.get()else""
        dc_list(kyuin)if boolvar4.get()else""
        dc_list(kyunyu)if boolvar5.get()else""
        dc_list(insulin)if boolvar6.get()else""
        dc_list(bsck)if boolvar7.get()else""
        dc_list(sousyou)if boolvar8.get()else""
        """
        chk_medic = 0
        
        if boolvar1.get():
            error_clear(error_medic)
            chk_medic = chk_medic + 1
        if boolvar2.get():
            dc_list(div)
            error_clear(error_medic)
            chk_medic = chk_medic + 1
        if boolvar46.get():
            dc_list(cvp)
            error_clear(error_medic)
            chk_medic = chk_medic + 1
        if boolvar3.get():
            dc_list(maruyama)
            error_clear(error_medic)
            chk_medic = chk_medic + 1
        if boolvar4.get():
            dc_list(kyuin)
            error_clear(error_medic)
            chk_medic = chk_medic + 1
        if boolvar5.get():
            dc_list(kyunyu)
            error_clear(error_medic)
            chk_medic = chk_medic + 1
        if boolvar6.get():
            dc_list(insulin)
            error_clear(error_medic)
            chk_medic = chk_medic + 1
        if boolvar7.get():
            dc_list(bsck)
            error_clear(error_medic)
            chk_medic = chk_medic + 1
        if boolvar8.get():
            dc_list(sousyou)
            error_clear(error_medic)
            chk_medic = chk_medic + 1
        if boolvar59.get():
            dc_list(hukusui)
            error_clear(error_medic)
            chk_medic = chk_medic + 1
        if boolvar60.get():
            dc_list(kyousui)
            error_clear(error_medic)
            chk_medic = chk_medic + 1

        if boolvar61.get():
            if txt_medic_sonota.get():
                sonota_medic2 = []# 空のリストを作ってnrsとto_fam_todoに入れる要素は一旦リスト化する(nrsとto_fam_todoには要素が重複しない処理がされているため、重複する文字列が入力されていると削除されてしまう)
                sonota_medic = str(txt_medic_sonota.get())
                medic.extend(f"◆{sonota_medic}\n")
                sonota_medic2.extend(f"□{sonota_medic}\n")
                nrs.extend(sonota_medic2)
                to_fam_todo.extend(sonota_medic2)
                info_iryou.extend(f"{sonota_medic}　　")
                error_clear(error_medic)
                chk_medic = chk_medic + 1
            else:
                error_appear2(error_medic)
                error_num = error_num + 1
                

        # どれにもチェックがなければエラーメッセージを表示    
        if chk_medic == 0:
            error_appear(error_medic)
            error_num = error_num + 1
            
    else:
        error_appear(error_medic)
        error_num = error_num + 1


    
    



    # 医療用麻薬
    if 1 == v31.get():
        pass
    
    elif 2 == v31.get():
        """
        #dc_list(mayaku_csci)if boolvar41.get()else""
        dc_list(mayaku_chouhu)if boolvar42.get()else""
        dc_list(mayaku_naihuku)if boolvar43.get()else""
        dc_list(mayaku_rescue)if boolvar44.get()else""
        """
        chk_mayaku = 0
        
        if boolvar41.get():
            error_clear(error_mayaku)
            chk_mayaku = chk_mayaku + 1
        if boolvar42.get():
            dc_list(mayaku_chouhu)
            error_clear(error_mayaku)
            chk_mayaku = chk_mayaku + 1
        if boolvar43.get():
            dc_list(mayaku_naihuku)
            error_clear(error_mayaku)
            chk_mayaku = chk_mayaku + 1
        if boolvar44.get():
            dc_list(mayaku_rescue)
            error_clear(error_mayaku)
            chk_mayaku = chk_mayaku + 1
        if chk_mayaku == 0:
            error_appear(error_mayaku)
            error_num = error_num + 1

    else:
        error_appear(error_mayaku)
        error_num = error_num + 1

    # CSCIと麻薬のCSCIがダブるので、ダブった時の処理を作成
    if boolvar1.get():
        if boolvar41.get():
            dc_list(mayaku_csci)
        
        else:
            dc_list(csci)

    


    # ADL

    # 体動
    if 1 == v29.get():
        info_taidou.append("自立")

    elif 2 == v29.get():
        info_taidou.append("要介助")
        
        
        if 1 == v30.get():
            info_taidou.append("(介護力あり)　")
            """
            dc_list(okiagari)if boolvar38.get()else""
            dc_list(negaeri)if boolvar39.get()else""
            dc_list(zaihoji)if boolvar40.get()else""
        """
            chk_taidou = 0
            
            if boolvar38.get():
                dc_list(okiagari)
                error_clear(error_taidou)
                chk_taidou = chk_taidou + 1
            if boolvar39.get():
                dc_list(negaeri)
                error_clear(error_taidou)
                chk_taidou = chk_taidou + 1
            if boolvar40.get():
                dc_list(zaihoji)
                error_clear(error_taidou)
                chk_taidou = chk_taidou + 1
            if chk_taidou == 0:
                error_appear(error_taidou)
                error_num = error_num + 1

        elif 2 == v30.get():
            info_taidou.append("(介護力なし)　")
            """
            dc_list(okiagari_n)if boolvar38.get()else""
            dc_list(negaeri_n)if boolvar39.get()else""
            dc_list(zaihoji_n)if boolvar40.get()else""
            """
            chk_taidou = 0
            
            if boolvar38.get():
                dc_list(okiagari_n)
                error_clear(error_taidou)
                chk_taidou = chk_taidou + 1
            if boolvar39.get():
                dc_list(negaeri_n)
                error_clear(error_taidou)
                chk_taidou = chk_taidou + 1
            if boolvar40.get():
                dc_list(zaihoji_n)
                error_clear(error_taidou)
                chk_taidou = chk_taidou + 1
            if chk_taidou == 0:
                error_appear(error_taidou)
                error_num = error_num + 1

        else:
            error_appear(error_taidou)
            error_num = error_num + 1
            

    else:
        error_appear(error_taidou)
        error_num = error_num + 1

            

            
    # 平行移動
    if 1 == v4.get():
        info_heikou.append("自立")

    elif 2 == v4.get():
        info_heikou.append("要介助")

        if 1 == v5.get():
            info_heikou.append("(介護力あり)　")
            """
            dc_list(tsutaiaruki)if boolvar9.get()else""
            dc_list(hokouki)if boolvar10.get()else""
            dc_list(kurumaisu)if boolvar11.get()else""
            dc_list(stretcher)if boolvar12.get()else""
            """
            chk_heikou = 0
            
            if boolvar9.get():
                dc_list(tsutaiaruki)
                error_clear(error_heikou)
                chk_heikou = chk_heikou + 1
            if boolvar10.get():
                dc_list(hokouki)
                error_clear(error_heikou)
                chk_heikou = chk_heikou + 1
            if boolvar11.get():
                dc_list(kurumaisu)
                error_clear(error_heikou)
                chk_heikou = chk_heikou + 1
            if boolvar12.get():
                dc_list(stretcher)
                error_clear(error_heikou)
                chk_heikou = chk_heikou + 1
            if chk_heikou == 0:
                error_appear(error_heikou)
                error_num = error_num + 1

                   

        elif 2 == v5.get():
            info_heikou.append("(介護力なし)　")
            """
            dc_list(tsutaiaruki_n)if boolvar9.get()else""
            dc_list(hokouki_n)if boolvar10.get()else""
            dc_list(kurumaisu_n)if boolvar11.get()else""
            dc_list(stretcher_n)if boolvar12.get()else"
            """
            chk_heikou = 0
            
            if boolvar9.get():
                dc_list(tsutaiaruki_n)
                error_clear(error_heikou)
                chk_heikou = chk_heikou + 1
            if boolvar10.get():
                dc_list(hokouki_n)
                error_clear(error_heikou)
                chk_heikou = chk_heikou + 1
            if boolvar11.get():
                dc_list(kurumaisu_n)
                error_clear(error_heikou)
                chk_heikou = chk_heikou + 1
            if boolvar12.get():
                dc_list(stretcher_n)
                error_clear(error_heikou)
                chk_heikou = chk_heikou + 1
            if chk_heikou == 0:
                error_appear(error_heikou)
                error_num = error_num + 1   
            
        else:
            error_appear(error_heikou)
            error_num = error_num + 1

    else:
        error_appear(error_heikou)
        error_num = error_num + 1


    # 階段昇降
    
    if 1 == v6.get():
        info_kaidan.append("自立")

    elif 2 == v6.get():
        info_kaidan.append("要介助")

        if 1 == v7.get():
            info_kaidan.append("(介護力あり)　")
            """
            dc_list(tesuri)if boolvar13.get()else""
            dc_list(tansou)if boolvar14.get()else""
            """
            chk_kaidan = 0
            
            if boolvar13.get():
                dc_list(tesuri)
                error_clear(error_kaidan)
                chk_kaidan = chk_kaidan + 1
            if boolvar14.get():
                dc_list(tansou)
                error_clear(error_kaidan)
                chk_kaidan = chk_kaidan + 1
            if chk_kaidan == 0:
                error_appear(error_kaidan)
                error_num = error_num + 1
                

        elif 2 == v7.get():
            info_kaidan.append("(介護力なし)　")
            """
            dc_list(tesuri_n)if boolvar13.get()else""
            dc_list(tansou_n)if boolvar14.get()else""
            """
            chk_kaidan = 0
            
            if boolvar13.get():
                dc_list(tesuri_n)
                error_clear(error_kaidan)
                chk_kaidan = chk_kaidan + 1
            if boolvar14.get():
                dc_list(tansou_n)
                error_clear(error_kaidan)
                chk_kaidan = chk_kaidan + 1
            if chk_kaidan == 0:
                error_appear(error_kaidan)
                error_num = error_num + 1

        else:
            error_appear(error_kaidan)
            error_num = error_num + 1

    else:
        error_appear(error_kaidan)
        error_num = error_num + 1

           


    # 移乗
    
    if 1 == v8.get():
        info_ijou.append("自立")

    elif 2 == v8.get():
        info_ijou.append("要介助")

        if 1 == v9.get():
            info_ijou.append("(介護力あり)　")
            """
            dc_list(ichibukaijo)if boolvar15.get()else""
            dc_list(ijou_all)if boolvar16.get()else""
            """
            chk_ijou = 0
            
            if boolvar15.get():
                dc_list(ichibukaijo)
                error_clear(error_ijou)
                chk_ijou = chk_ijou + 1
            if boolvar16.get():
                dc_list(ijou_all)
                error_clear(error_ijou)
                chk_ijou = chk_ijou + 1
            if chk_ijou == 0:
                error_appear(error_ijou)
                error_num = error_num + 1

        elif 2 == v9.get():
            info_ijou.append("(介護力なし)　")
            """
            dc_list(ichibukaijo_n)if boolvar15.get()else""
            dc_list(ijou_all_n)if boolvar16.get()else""
            """
            chk_ijou = 0
            
            if boolvar15.get():
                dc_list(ichibukaijo_n)
                error_clear(error_ijou)
                chk_ijou = chk_ijou + 1
            if boolvar16.get():
                dc_list(ijou_all_n)
                error_clear(error_ijou)
                chk_ijou = chk_ijou + 1
            if chk_ijou == 0:
                error_appear(error_ijou)
                error_num = error_num + 1
        else:
            error_appear(error_ijou)
            error_num = error_num + 1

    else:
        error_appear(error_ijou)
        error_num = error_num + 1



    # 食事準備等

    if 1 == v10.get():
        info_junbi.append("自立")

    elif 3 == v10.get():
        info_junbi.append("不要(経管栄養)")

    elif 2 == v10.get():
        info_junbi.append("要介助")
    

        if 1 == v11.get():
            info_junbi.append("(介護力あり)　")
            """
            dc_list(zairyou)if boolvar17.get()else""
            dc_list(chouri)if boolvar18.get()else""
            """
            chk_syokuji = 0
            
            if boolvar17.get():
                dc_list(zairyou)
                error_clear(error_syokuji)
                chk_syokuji = chk_syokuji + 1
            if boolvar18.get():
                dc_list(chouri)
                error_clear(error_syokuji)
                chk_syokuji = chk_syokuji + 1
            if chk_syokuji == 0:
                error_appear(error_syokuji)
                error_num = error_num + 1

        elif 2 == v11.get():
            info_junbi.append("(介護力なし)　")
            """
            dc_list(zairyou_n)if boolvar17.get()else""
            dc_list(chouri_n)if boolvar18.get()else""
            """
            chk_syokuji = 0
            
            if boolvar17.get():
                dc_list(zairyou_n)
                error_clear(error_syokuji)
                chk_syokuji = chk_syokuji + 1
            if boolvar18.get():
                dc_list(chouri_n)
                error_clear(error_syokuji)
                chk_syokuji = chk_syokuji + 1
            if chk_syokuji == 0:
                error_appear(error_syokuji)
                error_num = error_num + 1

        else:
            error_appear(error_syokuji)
            error_num = error_num + 1

    else:
        error_appear(error_syokuji)
        error_num = error_num + 1


    # 摂食
    
    if 1 == v12.get():
        info_sessyoku.append("自立")

    elif 2 == v12.get():
        info_sessyoku.append("要介助")

        if 1 == v13.get():
            info_sessyoku.append("(介護力あり)　")
            """
            dc_list(syokujikaijo)if boolvar19.get()else""
            dc_list(ikan)if boolvar20.get()else""
            dc_list(irou)if boolvar21.get()else""
            """
            chk_sessyoku = 0
            
            if boolvar19.get():
                dc_list(syokujikaijo)
                error_clear(error_sessyoku)
                chk_sessyoku = chk_sessyoku + 1
            if boolvar20.get():
                dc_list(ikan)
                error_clear(error_sessyoku)
                chk_sessyoku = chk_sessyoku + 1
            if boolvar21.get():
                dc_list(irou)
                error_clear(error_sessyoku)
                chk_sessyoku = chk_sessyoku + 1
            if chk_sessyoku == 0:
                error_appear(error_sessyoku)
                error_num = error_num + 1

        elif 2 == v13.get():
            info_sessyoku.append("(介護力なし)　")
            """
            dc_list(syokujikaijo_n)if boolvar19.get()else""
            dc_list(ikan_n)if boolvar20.get()else""
            dc_list(irou_n)if boolvar21.get()else""
            """
            chk_sessyoku = 0
            
            if boolvar19.get():
                dc_list(syokujikaijo_n)
                error_clear(error_sessyoku)
                chk_sessyoku = chk_sessyoku + 1
            if boolvar20.get():
                dc_list(ikan_n)
                error_clear(error_sessyoku)
                chk_sessyoku = chk_sessyoku + 1
            if boolvar21.get():
                dc_list(irou_n)
                error_clear(error_sessyoku)
                chk_sessyoku = chk_sessyoku + 1
            if chk_sessyoku == 0:
                error_appear(error_sessyoku)
                error_num = error_num + 1
                

        else:
            error_appear(error_sessyoku)
            error_num = error_num + 1

    else:
        error_appear(error_sessyoku)
        error_num = error_num + 1

        

    # 排泄

    if 1 == v14.get():
        info_haisetsu.append("自立")

    elif 2 == v14.get():
        info_haisetsu.append("要介助")

        if 1 == v15.get():
            info_haisetsu.append("(介護力あり)　")
            """
            dc_list(p_toilet)if boolvar22.get()else""
            dc_list(nyouki)if boolvar23.get()else""
            dc_list(omutsu)if boolvar24.get()else""
            dc_list(balloon)if boolvar25.get()else""
            dc_list(jinrou)if boolvar26.get()else""
            dc_list(stoma)if boolvar27.get()else""
            """
            chk_haisetsu = 0
            
            if boolvar22.get():
                dc_list(p_toilet)
                error_clear(error_haisetsu)
                chk_haisetsu = chk_haisetsu + 1
            if boolvar23.get():
                dc_list(nyouki)
                error_clear(error_haisetsu)
                chk_haisetsu = chk_haisetsu + 1
            if boolvar24.get():
                dc_list(omutsu)
                error_clear(error_haisetsu)
                chk_haisetsu = chk_haisetsu + 1
            if boolvar25.get():
                dc_list(balloon)
                error_clear(error_haisetsu)
                chk_haisetsu = chk_haisetsu + 1
            if boolvar26.get():
                dc_list(jinrou)
                error_clear(error_haisetsu)
                chk_haisetsu = chk_haisetsu + 1
            if boolvar27.get():
                dc_list(stoma)
                error_clear(error_haisetsu)
                chk_haisetsu = chk_haisetsu + 1
            if chk_haisetsu == 0:
                error_appear(error_haisetsu)
                error_num = error_num + 1

        elif 2 == v15.get():
            info_haisetsu.append("(介護力なし)　")
            """
            dc_list(p_toilet_n)if boolvar22.get()else""
            dc_list(nyouki_n)if boolvar23.get()else""
            dc_list(omutsu_n)if boolvar24.get()else""
            dc_list(balloon_n)if boolvar25.get()else""
            dc_list(jinrou_n)if boolvar26.get()else""
            dc_list(stoma_n)if boolvar27.get()else""
            """
            chk_haisetsu = 0
            
            if boolvar22.get():
                dc_list(p_toilet_n)
                error_clear(error_haisetsu)
                chk_haisetsu = chk_haisetsu + 1
            if boolvar23.get():
                dc_list(nyouki_n)
                error_clear(error_haisetsu)
                chk_haisetsu = chk_haisetsu + 1
            if boolvar24.get():
                dc_list(omutsu_n)
                error_clear(error_haisetsu)
                chk_haisetsu = chk_haisetsu + 1
            if boolvar25.get():
                dc_list(balloon_n)
                error_clear(error_haisetsu)
                chk_haisetsu = chk_haisetsu + 1
            if boolvar26.get():
                dc_list(jinrou_n)
                error_clear(error_haisetsu)
                chk_haisetsu = chk_haisetsu + 1
            if boolvar27.get():
                dc_list(stoma_n)
                error_clear(error_haisetsu)
                chk_haisetsu = chk_haisetsu + 1
            if chk_haisetsu == 0:
                error_appear(error_haisetsu)
                error_num = error_num + 1

        else:
            error_appear(error_haisetsu)
            error_num = error_num + 1

    else:
        error_appear(error_haisetsu)
        error_num = error_num + 1


    # 入浴
    
    if 1 == v16.get():
        info_nyuyoku.append("自立")

    elif 2 == v16.get():
        info_nyuyoku.append("要介助")

        if 1 == v17.get():
            info_nyuyoku.append("(介護力あり)　")
            """
            dc_list(kaijoyoku)if boolvar28.get()else""
            dc_list(liftyoku)if boolvar29.get()else""
            """
            chk_nyuyoku = 0
            
            if boolvar28.get():
                dc_list(kaijoyoku)
                error_clear(error_nyuyoku)
                chk_nyuyoku = chk_nyuyoku + 1
            if boolvar29.get():
                dc_list(liftyoku)
                error_clear(error_nyuyoku)
                chk_nyuyoku = chk_nyuyoku + 1
            if chk_nyuyoku == 0:
                error_appear(error_nyuyoku)
                error_num = error_num + 1

        elif 2 == v17.get():
            info_nyuyoku.append("(介護力なし)　")
            """
            dc_list(kaijoyoku_n)if boolvar28.get()else""
            dc_list(liftyoku_n)if boolvar29.get()else""
            """
            chk_nyuyoku = 0
            
            if boolvar28.get():
                dc_list(kaijoyoku_n)
                error_clear(error_nyuyoku)
                chk_nyuyoku = chk_nyuyoku + 1
            if boolvar29.get():
                dc_list(liftyoku_n)
                error_clear(error_nyuyoku)
                chk_nyuyoku = chk_nyuyoku + 1
            if chk_nyuyoku == 0:
                error_appear(error_nyuyoku)
                error_num = error_num + 1

        else:
            error_appear(error_nyuyoku)
            error_num = error_num + 1

    else:
        error_appear(error_nyuyoku)
        error_num = error_num + 1
            

    # 口腔ケア
    
    if 1 == v18.get():
        info_koukuu.append("自立")

    elif 2 == v18.get():
        info_koukuu.append("要介助")

        if 1 == v19.get():
            info_koukuu.append("(介護力あり)　")
            """
            dc_list(setting)if boolvar30.get()else""
            dc_list(hamigaki)if boolvar31.get()else""
            dc_list(ireba)if boolvar32.get()else""
            """
            chk_kouku = 0
            
            if boolvar30.get():
                dc_list(setting)
                error_clear(error_kouku)
                chk_kouku = chk_kouku + 1
            if boolvar31.get():
                dc_list(hamigaki)
                error_clear(error_kouku)
                chk_kouku = chk_kouku + 1
            if boolvar32.get():
                dc_list(ireba)
                error_clear(error_kouku)
                chk_kouku = chk_kouku + 1
            if chk_kouku == 0:
                error_appear(error_kouku)
                error_num = error_num + 1

        elif 2 == v19.get():
            info_koukuu.append("(介護力なし)　")
            """
            dc_list(setting_n)if boolvar30.get()else""
            dc_list(hamigaki_n)if boolvar31.get()else""
            dc_list(ireba_n)if boolvar32.get()else""
            """
            chk_kouku = 0
            
            if boolvar30.get():
                dc_list(setting_n)
                error_clear(error_kouku)
                chk_kouku = chk_kouku + 1
            if boolvar31.get():
                dc_list(hamigaki_n)
                error_clear(error_kouku)
                chk_kouku = chk_kouku + 1
            if boolvar32.get():
                dc_list(ireba_n)
                error_clear(error_kouku)
                chk_kouku = chk_kouku + 1
            if chk_kouku == 0:
                error_appear(error_kouku)
                error_num = error_num + 1

        else:
            error_appear(error_kouku)
            error_num = error_num + 1

    else:
        error_appear(error_kouku)
        error_num = error_num + 1


    # 更衣

    if 1 == v20.get():
        info_koui.append("自立")

    elif 2 == v20.get():
        info_koui.append("要介助")

        if 1 == v21.get():
            info_koui.append("(介護力あり)　")
            """
            dc_list(sode_btn)if boolvar33.get()else""
            dc_list(koui_all)if boolvar34.get()else""
            """
            chk_koui = 0
            
            if boolvar33.get():
                dc_list(sode_btn)
                error_clear(error_koui)
                chk_koui = chk_koui + 1
            if boolvar34.get():
                dc_list(koui_all)
                error_clear(error_koui)
                chk_koui = chk_koui + 1
            if chk_koui == 0:
                error_appear(error_koui)
                error_num = error_num + 1

        elif 2 == v21.get():
            info_koui.append("(介護力なし)　")
            """
            dc_list(sode_btn_n)if boolvar33.get()else""
            dc_list(koui_all_n)if boolvar34.get()else""
            """
            chk_koui = 0
            
            if boolvar33.get():
                dc_list(sode_btn_n)
                error_clear(error_koui)
                chk_koui = chk_koui + 1
            if boolvar34.get():
                dc_list(koui_all_n)
                error_clear(error_koui)
                chk_koui = chk_koui + 1
            if chk_koui == 0:
                error_appear(error_koui)
                error_num = error_num + 1

        else:
            error_appear(error_koui)
            error_num = error_num + 1

    else:
        error_appear(error_koui)
        error_num = error_num + 1
            

    # 内服
    
    if 1 == v22.get():
        info_naihuku.append("自立")

    elif 2 == v22.get():
        info_naihuku.append("要介助")

        if 1 == v23.get():
            info_naihuku.append("(介護力あり)　")
            """
            dc_list(kakujitsu)if boolvar35.get()else""
            dc_list(ikkaihaiyaku)if boolvar45.get()else""
            dc_list(kendaku)if boolvar36.get()else""
            dc_list(keikan)if boolvar37.get()else""
            """
            chk_naihuku = 0
            
            if boolvar35.get():
                dc_list(kakujitsu)
                error_clear(error_naihuku)
                chk_naihuku = chk_naihuku + 1
            if boolvar45.get():
                dc_list(ikkaihaiyaku)
                error_clear(error_naihuku)
                chk_naihuku = chk_naihuku + 1
            if boolvar36.get():
                dc_list(kendaku)
                error_clear(error_naihuku)
                chk_naihuku = chk_naihuku + 1
            if boolvar37.get():
                dc_list(keikan)
                error_clear(error_naihuku)
                chk_naihuku = chk_naihuku + 1
            if chk_naihuku == 0:
                error_appear(error_naihuku)
                error_num = error_num + 1

        elif 2 == v23.get():
            info_naihuku.append("(介護力なし)　")
            """
            dc_list(kakujitsu_n)if boolvar35.get()else""
            dc_list(ikkaihaiyaku_n)if boolvar45.get()else""
            dc_list(kendaku_n)if boolvar36.get()else""
            dc_list(keikan_n)if boolvar37.get()else""
            """
            chk_naihuku = 0
            
            if boolvar35.get():
                dc_list(kakujitsu_n)
                error_clear(error_naihuku)
                chk_naihuku = chk_naihuku + 1
            if boolvar45.get():
                dc_list(ikkaihaiyaku_n)
                error_clear(error_naihuku)
                chk_naihuku = chk_naihuku + 1
            if boolvar36.get():
                dc_list(kendaku_n)
                error_clear(error_naihuku)
                chk_naihuku = chk_naihuku + 1
            if boolvar37.get():
                dc_list(keikan_n)
                error_clear(error_naihuku)
                chk_naihuku = chk_naihuku + 1
            if chk_naihuku == 0:
                error_appear(error_naihuku)
                error_num = error_num + 1

        else:
            error_appear(error_naihuku)
            error_num = error_num + 1

    else:
        error_appear(error_naihuku)
        error_num = error_num + 1



    """
    print(error_num)
    
    if error_num == 0:
        lbl_end_comment.configure(text="フォルダー内に3つのファイルを作成しました。")
    """


    # リストを1列の文字列型に変換
    """
    lists = todo,training,medic,care,reform,nrs,helper,sonota,
    to_fam_todo,to_fam_care,to_fam_training,to_fam_goods,to_fam_barrier,to_fam_caution,to_fam_sonota,
    info_gender,info_yotei,info_zaitaku,info_m_hoken,info_c_hoken,info_fam,info_kaigo,info_iryou,info_mayaku,
    info_taidou,info_heikou,info_kaidan,info_ijou,info_junbi,info_sessyoku,info_haisetsu,info_haisetsu,info_nyuyoku,info_koukuu,imfo_koui,info_naihuku
    info_kaoku,info_hitori
    """

    # リストの要素の重複を削除する
    todo = sorted(set(todo),key=todo.index)
    training = sorted(set(training),key=training.index)
    #Strmedic = "".join(medic)
    care = sorted(set(care),key=care.index)
    reform = sorted(set(reform),key=reform.index)
    nrs = sorted(set(nrs),key=nrs.index)
    helper = sorted(set(helper),key=helper.index)
    sonota = sorted(set(sonota),key=sonota.index)
    
    
    to_fam_todo = sorted(set(to_fam_todo),key=to_fam_todo.index)
    to_fam_care = sorted(set(to_fam_care),key=to_fam_care.index)
    to_fam_training = sorted(set(to_fam_training),key=to_fam_training.index)
    to_fam_goods = sorted(set(to_fam_goods),key=to_fam_goods.index)
    to_fam_barrier = sorted(set(to_fam_barrier),key=to_fam_barrier.index)
    to_fam_caution = sorted(set(to_fam_caution),key=to_fam_caution.index)
    to_fam_sonota = sorted(set(to_fam_sonota),key=to_fam_sonota.index)

    
    
    Strtodo = "".join(todo)
    Strtraining = "".join(training)
    Strmedic = "".join(medic)
    Strcare = "".join(care)
    Strreform = "".join(reform)
    Strnrs = "".join(nrs)
    Strhelper = "".join(helper)
    Strsonota = "".join(sonota)
    
    
    Strto_fam_todo = "".join(to_fam_todo)
    Strto_fam_care = "".join(to_fam_care)
    Strto_fam_training = "".join(to_fam_training)
    Strto_fam_goods = "".join(to_fam_goods)
    Strto_fam_barrier = "".join(to_fam_barrier)
    Strto_fam_caution = "".join(to_fam_caution)
    Strto_fam_sonota = "".join(to_fam_sonota)

    
    Strinfo_gender = "".join(info_gender)
    Strinfo_yotei = "".join(info_yotei)
    Strinfo_zaitaku = "".join(info_zaitaku)
    Strinfo_m_hoken = "".join(info_m_hoken)
    Strinfo_c_hoken = "".join(info_c_hoken)
    Strinfo_fam = "".join(info_fam)
    Strinfo_kaigo = "".join(info_kaigo)
    Strinfo_iryou = "".join(info_iryou)
    Strinfo_mayaku = "".join(info_mayaku)
    Strinfo_taidou = "".join(info_taidou)
    Strinfo_heikou = "".join(info_heikou)
    Strinfo_kaidan = "".join(info_kaidan)
    Strinfo_ijou = "".join(info_ijou)
    Strinfo_junbi = "".join(info_junbi)
    Strinfo_sessyoku = "".join(info_sessyoku)
    Strinfo_haisetsu = "".join(info_haisetsu)
    Strinfo_nyuyoku = "".join(info_nyuyoku)
    Strinfo_koukuu = "".join(info_koukuu)
    Strinfo_koui = "".join(info_koui)
    Strinfo_naihuku = "".join(info_naihuku)
    Strinfo_kaoku = "".join(info_kaoku)
    Strinfo_hitori = "".join(info_hitori)
    Strinfo_syudan = "".join(info_syudan)


    """
    Str(lists)
    """
    
    #
    if txt_id.get():
        pt_id = str(txt_id.get())
        pt_id = jaconv.z2h(pt_id,digit=True)
        error_clear(error_namae)

    else:
            error_appear2(error_namae)
            error_num = error_num + 1

    if txt_name.get():
        name = str(txt_name.get())
        error_clear(error_namae)

    else:
            error_appear2(error_namae)
            error_num = error_num + 1

    if txt_age.get():
        age = str(txt_age.get())
        age = jaconv.z2h(age,digit=True)
        age = age +"歳"
        error_clear(error_namae)

    else:
            error_appear2(error_namae)
            error_num = error_num + 1

    if txt_disease.get():
        disease = str(txt_disease.get())
        error_clear(error_namae)
        

    else:
            error_appear2(error_namae)
            error_num = error_num + 1
    
    
    print(Strtodo)
    print(Strtraining)
    print(Strmedic)
    print(Strcare)
    print(Strreform)
    print(Strnrs)
    print(Strhelper)
    print(Strsonota)
    
    print(Strto_fam_todo)
    print(Strto_fam_care)
    print(Strto_fam_training)
    print(Strto_fam_goods)
    print(Strto_fam_barrier)
    print(Strto_fam_caution)
    print(Strto_fam_sonota)


    print(pt_id)
    print(name)
    print(Strinfo_gender)
    print(age)
    print(disease)
    
    print(Strinfo_yotei)
    print(Strinfo_zaitaku)
    print(Strinfo_m_hoken)
    print(Strinfo_c_hoken)
    print(Strinfo_fam)
    
    print(Strinfo_kaigo)
    print(Strinfo_iryou)
    print(Strinfo_mayaku)
    print(Strinfo_taidou)
    print(Strinfo_heikou)
    
    print(Strinfo_kaidan)
    print(Strinfo_ijou)
    print(Strinfo_junbi)
    print(Strinfo_sessyoku)
    print(Strinfo_haisetsu)
    
    print(Strinfo_nyuyoku)
    print(Strinfo_koukuu)
    print(Strinfo_koui)
    print(Strinfo_naihuku)
    print(Strinfo_kaoku)
    
    print(Strinfo_hitori)
    print(Strinfo_syudan)
    
    
    

    #
    t1 = "【タスクリスト】"
    t2 = "【事前練習】"
    t3 = "【衛生材料】"
    t4 = "【介護用品】"
    t5 = "【家屋改修検討部位】"
    t6 = "【訪問看護介入依頼(連絡)項目】"
    t7 = "【ヘルパー介入依頼項目】"
    t8 = "【その他】"
    
    f1 = "【退院中にすること】"
    f2 = "【患者様に介助が必要なこと】"
    f3 = "【ケア等の事前練習】"
    f4 = "【必要な介護用品】"
    f5 = "【バリアフリー確認部位】"
    f6 = "【注意事項】"
    f7 = "【その他退院までにすること】"

    i1 = "【患者ID】："
    i2 = "【患者名】："
    i3 = "【性別】："
    i4 = "【年齢】："
    i5 = "【疾患名】："
    i6 = "【在宅医療等介入予定】"
    i7 = "【既存の在宅医療等】"
    i8 = "【障害保険・経済状況】"
    i9 = "【要介護認定】"
    i10 = "【同居家族】"
    i11 = "【主な介護者】"
    i12 = "【在宅での医療行為】"
    i13 = "【医療用麻薬の使用】"
    i14 = "【ADL】"
    i15 = "【家屋環境】"
    i16 = "【患者が一人で過ごす時間】"
    i17 = "【退院手段】"
    
    
    #{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n

    print("エラー件数：",error_num)

    if error_num >= 1:
        lbl_end_comment.configure(text="")
        lbl_end_comment.configure(text="error!  未選択or未入力項目あり! (￣▽￣)",fg="red")
        
        
  
    if error_num == 0:
        lbl_end_comment.configure(text="フォルダー内に3つのファイルを作成しました。(*‘ω‘ *)",fg="blue")
    
        """
        # WORDへの書き出しとファイル作成
        # 退院支援リスト
        doc = docx.Document("dc_list.docx")
        doc.add_paragraph("{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n"
                          .format(t1,Strtodo,t2,Strtraining,t3,Strmedic,t4,Strcare,t5,Strreform,t6,Strnrs,t7,Strhelper,t8,Strsonota))
        doc.save("{}様退院支援リスト.docx".format(name))    # ご家族へ

        doc = docx.Document("dc_fam.docx")
        doc.add_paragraph("{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n"
                          .format(f1,Strto_fam_todo,f2,Strto_fam_care,f3,Strto_fam_training,f4,Strto_fam_goods,f5,Strto_fam_barrier,f6,Strto_fam_caution,f7,Strto_fam_sonota))
        doc.save("{}様のご家族へ.docx".format(name))

        # 患者情報
        doc = docx.Document("dc_info.docx")
        doc.add_paragraph("{}{}\n\n{}{}\n\n{}{}\n\n{}{}\n\n{}{}\n\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n\n{}\n{}\n\n{}\n{}\n\n{}\n{}\n\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n\n{}\n{}\n{}\n{}\n{}\n{}\n"
                          .format(i1,pt_id,i2,name,i3,Strinfo_gender,i4,age,i5,disease,i6,Strinfo_yotei,i7,Strinfo_zaitaku,i8,Strinfo_m_hoken,i9,Strinfo_c_hoken,i10,Strinfo_fam,i11,Strinfo_kaigo,
                                  i12,Strinfo_iryou,i13,Strinfo_mayaku,i14,Strinfo_taidou,Strinfo_heikou,Strinfo_kaidan,Strinfo_ijou,Strinfo_junbi,Strinfo_sessyoku,Strinfo_haisetsu,
                                  Strinfo_nyuyoku,Strinfo_koukuu,Strinfo_koui,Strinfo_naihuku,i15,Strinfo_kaoku,i16,Strinfo_hitori,i17,Strinfo_syudan))
        doc.save("{}様情報.docx".format(name))

        """
        try:
            # WORDへの書き出しとファイル作成
            # 退院支援リスト
            doc = docx.Document("dc_list.docx")
            doc.add_paragraph("{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n"
                              .format(t1,Strtodo,t2,Strtraining,t3,Strmedic,t4,Strcare,t5,Strreform,t6,Strnrs,t7,Strhelper,t8,Strsonota))
            doc.save("{}様退院支援リスト.docx".format(name))    # ご家族へ

            doc = docx.Document("dc_fam.docx")
            doc.add_paragraph("{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n"
                              .format(f1,Strto_fam_todo,f2,Strto_fam_care,f3,Strto_fam_training,f4,Strto_fam_goods,f5,Strto_fam_barrier,f6,Strto_fam_caution,f7,Strto_fam_sonota))
            doc.save("{}様のご家族へ.docx".format(name))

            # 患者情報
            doc = docx.Document("dc_info.docx")
            doc.add_paragraph("{}{}\n\n{}{}\n\n{}{}\n\n{}{}\n\n{}{}\n\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n\n{}\n{}\n\n{}\n{}\n\n{}\n{}\n\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n\n{}\n{}\n{}\n{}\n{}\n{}\n"
                              .format(i1,pt_id,i2,name,i3,Strinfo_gender,i4,age,i5,disease,i6,Strinfo_yotei,i7,Strinfo_zaitaku,i8,Strinfo_m_hoken,i9,Strinfo_c_hoken,i10,Strinfo_fam,i11,Strinfo_kaigo,
                                      i12,Strinfo_iryou,i13,Strinfo_mayaku,i14,Strinfo_taidou,Strinfo_heikou,Strinfo_kaidan,Strinfo_ijou,Strinfo_junbi,Strinfo_sessyoku,Strinfo_haisetsu,
                                      Strinfo_nyuyoku,Strinfo_koukuu,Strinfo_koui,Strinfo_naihuku,i15,Strinfo_kaoku,i16,Strinfo_hitori,i17,Strinfo_syudan))
            doc.save("{}様情報.docx".format(name))
        except:
            lbl_end_comment.configure(text="error!　作業中のファイルを閉じてください。",fg="red")
            




    


# フォントファミリー：MS PGothic
# 背景色：lavender,lavender blush,LemonChiffon,grey95,misty rose,oldlace,PaleTurquoise,papayaWhip,pink,
# lightpink,powderblue,seashell,snow,aliceblue,azure,cornsilk,mintcream,ghostwhite,linen,floralwhite,cadetblue
# フレーム文字：grey,darkturquoise,lightblue
# その他文字：navy,royalblue,cornflowerblue,palevioletred

# 配色パターン(青)： bg1 = bg = "aliceblue"　　fg1 = fg = "lightblue"　　fg2 = fg = "steelblue"
# 配色パターン(ピンク)： bg1 = bg = "lavender blush"　　fg1 = fg = "pink"　　fg2 = fg = "palevioletred"
# 配色パターン(黄色)： bg1 = bg = "oldlace"　　fg1 = fg = "darksalmon"　　fg2 = fg = "orange"
# 配色パターン(緑)：bg1 = bg = "honeydew"　　fg1 = fg = "yellowgreen"　　fg2 = fg = "lightseagreen"
# 配色パターン(緑)：bg1 = bg = "lavender"　　fg1 = fg = "lightblue"　　fg2 = fg = "steelblue"

root = tk.Tk()
root.geometry("1300x1200+20+20")
root.title("退院支援app")
font1 = tkinter.font.Font(family="MS PGothic",weight="bold",size=20,)
font2 = tkinter.font.Font(family="Yu Gothic UI",weight="bold",size=14)

"""
bg1 = bg = "lightcyan"
fg1 = fg = "skyblue"
fg2 = fg = "steelblue"
"""
"""
bg1 = bg = "aliceblue"
fg1 = fg = "lightblue"
fg2 = fg = "#ff99cc"
"""
bg1 = bg = "azure"
fg1 = fg = "skyblue"
fg2 = fg = "hotpink"
"""
bg1 = bg = "aliceblue"
fg1 = fg = "lightblue"
fg2 = fg = "steelblue"
"""
"""
bg1 = bg = "lavender blush"
fg1 = fg = "pink"
fg2 = fg = "#ff99cc"#"palevioletred"
"""
"""
bg1 = bg = "oldlace"
fg1 = fg = "gold"
fg2 = fg = "orange"
"""
"""
bg1 = bg = "honeydew"
fg1 = fg = "darkseagreen"
fg2 = fg = "lightseagreen"
"""
"""
bg1 = bg = "honeydew"
fg1 = fg = "skyblue"
fg2 = fg = "#ff99cc"
"""

"""
bg1 = bg = "lavender"
fg1 = fg = "thistle"#"#cc99cc"
fg2 = fg = "#666699"
"""
root.configure(bg=bg1)

canvas = tk.Canvas(root,width=1250,height=1200,borderwidth=0,bg=bg1)
canvas.pack(side=tk.LEFT,fill=tk.BOTH)

bar = tk.Scrollbar(root,orient=tk.VERTICAL)
bar.pack(side=tk.RIGHT,fill=tk.Y)

bar.config(command=canvas.yview)

canvas.config(scrollregion=(0,0,1100,9150))

canvas.config(yscrollcommand=bar.set)
canvas.bind_all("<MouseWheel>",mouse_y_scroll)

frame_base = tk.Frame(canvas,width=1250,height=1200,borderwidth=0,relief="ridge",bg=bg1)

# フレーム(カテゴリー)
frame_n = tk.Frame(frame_base,width=1100,height=100,borderwidth=0,relief="ridge",bg=bg1)

frame_kihon = tk.LabelFrame(frame_base,text="基本情報",font=font1,width=1100,height=3000,borderwidth=5,relief="ridge",bg=bg1,fg=fg1)
frame_name = tk.LabelFrame(frame_kihon,width=1100,height=200,borderwidth=0,relief="ridge",bg=bg1)
frame_yotei = tk.LabelFrame(frame_kihon,width=1100,height=550,borderwidth=0,relief="ridge",bg=bg1)
frame_zaitaku = tk.LabelFrame(frame_kihon,width=1100,height=730,borderwidth=0,relief="ridge",bg=bg1)
frame_m_hoken = tk.LabelFrame(frame_kihon,width=1100,height=450,borderwidth=0,relief="ridge",bg=bg1)
frame_c_hoken = tk.LabelFrame(frame_kihon,width=1100,height=300,borderwidth=0,relief="ridge",bg=bg1)
frame_fam = tk.LabelFrame(frame_kihon,width=1100,height=300,borderwidth=0,relief="ridge",bg=bg1)
frame_kaigo = tk.LabelFrame(frame_kihon,width=1100,height=300,borderwidth=0,relief="ridge",bg=bg1)
frame_hitori = tk.LabelFrame(frame_kihon,width=1100,height=200,borderwidth=0,relief="ridge",bg=bg1)


frame_o2 = tk.LabelFrame(frame_base,text="在宅酸素療法",font=font1,width=1100,height=400,borderwidth=5,relief="ridge",bg=bg1,fg=fg1)
frame_medic = tk.LabelFrame(frame_base,text="医療行為",font=font1,width=1100,height=400,borderwidth=5,relief="ridge",bg=bg1,fg=fg1)

frame_adl = tk.LabelFrame(frame_base,text="ADL",font=font1,width=1100,height=4000,borderwidth=5,relief="ridge",bg=bg1,fg=fg1)
frame_taidou = tk.LabelFrame(frame_adl,width=1100,height=350,borderwidth=0,relief="ridge",bg=bg1)
frame_heikou = tk.LabelFrame(frame_adl,width=1100,height=350,borderwidth=0,relief="ridge",bg=bg1)
frame_kaidan = tk.LabelFrame(frame_adl,width=1100,height=350,borderwidth=0,relief="ridge",bg=bg1)
frame_ijou = tk.LabelFrame(frame_adl,width=1100,height=350,borderwidth=0,relief="ridge",bg=bg1)
frame_syokuji = tk.LabelFrame(frame_adl,width=1100,height=350,borderwidth=0,relief="ridge",bg=bg1)
frame_sessyoku = tk.LabelFrame(frame_adl,width=1100,height=350,borderwidth=0,relief="ridge",bg=bg1)
frame_haisetsu = tk.LabelFrame(frame_adl,width=1100,height=350,borderwidth=0,relief="ridge",bg=bg1)
frame_nyuyoku = tk.LabelFrame(frame_adl,width=1100,height=350,borderwidth=0,relief="ridge",bg=bg1)
frame_kouku = tk.LabelFrame(frame_adl,width=1100,height=350,borderwidth=0,relief="ridge",bg=bg1)
frame_koui = tk.LabelFrame(frame_adl,width=1100,height=350,borderwidth=0,relief="ridge",bg=bg1)
frame_naihuku = tk.LabelFrame(frame_adl,width=1100,height=350,borderwidth=0,relief="ridge",bg=bg1)


frame_kankyo = tk.LabelFrame(frame_base,text="家屋環境",font=font1,width=1100,height=550,borderwidth=5,relief="ridge",bg=bg1,fg=fg1)
frame_mayaku = tk.LabelFrame(frame_base,text="医療用麻薬",font=font1,width=1100,height=300,borderwidth=5,relief="ridge",bg=bg1,fg=fg1)
frame_sonota = tk.LabelFrame(frame_base,text="その他",font=font1,width=1100,height=300,borderwidth=5,relief="ridge",bg=bg1,fg=fg1)

frame_none = tk.Frame(frame_base,width=1100,height=350,borderwidth=0,relief="ridge",bg=bg1)


# 配置　フレーム(カテゴリー)
frame_n.pack()

frame_kihon.pack()
frame_name.pack()
frame_yotei.pack()
frame_zaitaku.pack()
frame_m_hoken.pack()
frame_c_hoken.pack()
frame_fam.pack()
frame_kaigo.pack()
frame_hitori.pack()

frame_o2.pack()
frame_medic.pack()
frame_mayaku.pack()
frame_adl.pack()
frame_taidou.pack()
frame_heikou.pack()
frame_kaidan.pack()
frame_ijou.pack()
frame_syokuji.pack()
frame_sessyoku.pack()
frame_haisetsu.pack()
frame_nyuyoku.pack()
frame_kouku.pack()
frame_koui.pack()
frame_naihuku.pack()

frame_kankyo.pack()
frame_sonota.pack()

frame_none.pack()


canvas.create_window((0,0),window=frame_base,anchor=tk.NW,width=canvas.cget("width"))




# ≪ウィンドウ作成≫
# 情報入力
# 名前等
fr = frame_name
lbl_id = tk.Label(fr,text="【患者ID】",font=font2,bg=bg1,fg=fg2)
txt_id = tk.Entry(fr,width=20)

lbl_name = tk.Label(fr,text="【患者名】",font=font2,bg=bg1,fg=fg2)
txt_name = tk.Entry(fr,width=20)

lbl_gender = tk.Label(fr,text="【性別】",font=font2,bg=bg1,fg=fg2)
v44 = tk.IntVar()
v44.set(0)
rd99 = tk.Radiobutton(fr,text="男",font=font2,bg=bg1,fg=fg2,value=1,variable=v44)
rd100 = tk.Radiobutton(fr,text="女",font=font2,bg=bg1,fg=fg2,value=2,variable=v44)

lbl_age = tk.Label(fr,text="【年齢】",font=font2,bg=bg1,fg=fg2)
txt_age = tk.Entry(fr,width=5)

lbl_disease = tk.Label(fr,text="【疾患名】",font=font2,bg=bg1,fg=fg2)
txt_disease = tk.Entry(fr,width=40)

error_namae = tk.Label(fr,text="",fg="red",bg=bg1)


# 在宅医療等介入予定
fr = frame_yotei
lbl_yotei = tk.Label(fr,text="【在宅医療等介入予定】",font=font2,bg=bg1,fg=fg2)
lbl_s_yotei = tk.Label(fr,text="◆訪問診療",font=font2,bg=bg1,fg=fg2)
v32 = tk.IntVar()
v32.set(0)
rd63 = tk.Radiobutton(fr,text="無し",font=font2,bg=bg1,fg=fg2,value=1,variable=v32,command=lambda:[error_clear(error_yotei)])
rd64 = tk.Radiobutton(fr,text="有り",font=font2,bg=bg1,fg=fg2,value=2,variable=v32,command=lambda:[error_clear(error_yotei)])
rd65 = tk.Radiobutton(fr,text="未定",font=font2,bg=bg1,fg=fg2,value=3,variable=v32,command=lambda:[error_clear(error_yotei)])

lbl_n_yotei = tk.Label(fr,text="◆訪問看護",font=font2,bg=bg1,fg=fg2)
v46 = tk.IntVar()
v46.set(0)
rd103 = tk.Radiobutton(fr,text="無し",font=font2,bg=bg1,fg=fg2,value=1,variable=v46,command=lambda:[error_clear(error_yotei)])
rd104 = tk.Radiobutton(fr,text="有り",font=font2,bg=bg1,fg=fg2,value=2,variable=v46,command=lambda:[error_clear(error_yotei)])
rd105 = tk.Radiobutton(fr,text="未定",font=font2,bg=bg1,fg=fg2,value=3,variable=v46,command=lambda:[error_clear(error_yotei)])

lbl_care_yotei = tk.Label(fr,text="◆訪問介護",font=font2,bg=bg1,fg=fg2)
v47 = tk.IntVar()
v47.set(0)
rd106 = tk.Radiobutton(fr,text="無し",font=font2,bg=bg1,fg=fg2,value=1,variable=v47,command=lambda:[error_clear(error_yotei)])
rd107 = tk.Radiobutton(fr,text="有り",font=font2,bg=bg1,fg=fg2,value=2,variable=v47,command=lambda:[error_clear(error_yotei)])
rd108 = tk.Radiobutton(fr,text="未定",font=font2,bg=bg1,fg=fg2,value=3,variable=v47,command=lambda:[error_clear(error_yotei)])

error_yotei = tk.Label(fr,text="",fg="red",bg=bg1)

# 既存の在宅医療等
fr = frame_zaitaku
lbl_zaitaku = tk.Label(fr,text="【既存の在宅医療等】",font=font2,bg=bg1,fg=fg2)
lbl_shinryou = tk.Label(fr,text="◆訪問診療",font=font2,bg=bg1,fg=fg2)
v33 = tk.IntVar()
v33.set(0)
rd66 = tk.Radiobutton(fr,text="無し",font=font2,bg=bg1,fg=fg2,value=1,variable=v33,command=lambda:[txt_clear(txt_shinryou),txt_disable(txt_shinryou),error_clear(error_zaitaku)])
rd67 = tk.Radiobutton(fr,text="有り",font=font2,bg=bg1,fg=fg2,value=2,variable=v33,command=lambda:[txt_normal(txt_shinryou),error_clear(error_zaitaku)])
lbl_d_office = tk.Label(fr,text="事業所名",font=font2,bg=bg1,fg=fg2)
txt_shinryou = tk.Entry(fr,width=30)
txt_shinryou["state"] = "disable"

lbl_kango = tk.Label(fr,text="◆訪問看護",font=font2,bg=bg1,fg=fg2)
v34 = tk.IntVar()
v34.set(0)
rd68 = tk.Radiobutton(fr,text="無し",font=font2,bg=bg1,fg=fg2,value=1,variable=v34,command=lambda:[txt_clear(txt_kango),txt_disable(txt_kango),error_clear(error_zaitaku)])
rd69 = tk.Radiobutton(fr,text="有り",font=font2,bg=bg1,fg=fg2,value=2,variable=v34,command=lambda:[txt_normal(txt_kango),error_clear(error_zaitaku)])
lbl_n_office = tk.Label(fr,text="事業所名",font=font2,bg=bg1,fg=fg2)
txt_kango = tk.Entry(fr,width=30)
txt_kango["state"] = "disable"

lbl_care = tk.Label(fr,text="◆訪問介護",font=font2,bg=bg1,fg=fg2)
v35 = tk.IntVar()
v35.set(0)
rd70 = tk.Radiobutton(fr,text="無し",font=font2,bg=bg1,fg=fg2,value=1,variable=v35,command=lambda:[txt_clear(txt_care),txt_disable(txt_care),error_clear(error_zaitaku)])
rd71 = tk.Radiobutton(fr,text="有り",font=font2,bg=bg1,fg=fg2,value=2,variable=v35,command=lambda:[txt_normal(txt_care),error_clear(error_zaitaku)])
lbl_c_office = tk.Label(fr,text="事業所名",font=font2,bg=bg1,fg=fg2)
txt_care = tk.Entry(fr,width=30)
txt_care["state"] = "disable"

lbl_c_mane = tk.Label(fr,text="◆ケアマネージャー",font=font2,bg=bg1,fg=fg2)
v48 = tk.IntVar()
v48.set(0)
rd109 = tk.Radiobutton(fr,text="無し",font=font2,bg=bg1,fg=fg2,value=1,variable=v48,command=lambda:[txt_clear(txt_c_mane),txt_clear(txt_c_tel),txt_disable(txt_c_mane),txt_disable(txt_c_tel),error_clear(error_zaitaku)])
rd110 = tk.Radiobutton(fr,text="有り",font=font2,bg=bg1,fg=fg2,value=2,variable=v48,command=lambda:[txt_normal(txt_c_mane),txt_normal(txt_c_tel),error_clear(error_zaitaku)])
lbl_c_name = tk.Label(fr,text="名前",font=font2,bg=bg1,fg=fg2)
lbl_c_tel = tk.Label(fr,text="連絡先",font=font2,bg=bg1,fg=fg2)
txt_c_mane = tk.Entry(fr,width=20)
txt_c_tel = tk.Entry(fr,width=30)
txt_c_mane["state"] = "disable"
txt_c_tel["state"] = "disable"

error_zaitaku = tk.Label(fr,text="",fg="red",bg=bg1)


# 障害保険・経済状況
fr = frame_m_hoken
lbl_m_hoken = tk.Label(fr,text="【障害保険・経済状況】",font=font2,bg=bg1,fg=fg2)
lbl_seikatsuhogo = tk.Label(fr,text="◆生活保護受給",font=font2,bg=bg1,fg=fg2)
lbl_shinsyousya = tk.Label(fr,text="◆身体障害者手帳",font=font2,bg=bg1,fg=fg2)

v42 = tk.IntVar()
v42.set(0)
rd95 = tk.Radiobutton(fr,text="無し",font=font2,bg=bg1,fg=fg2,value=1,variable=v42,command=lambda:[error_clear(error_m_hoken)])
rd96 = tk.Radiobutton(fr,text="有り",font=font2,bg=bg1,fg=fg2,value=2,variable=v42,command=lambda:[error_clear(error_m_hoken)])

v43 = tk.IntVar()
v43.set(0)
rd97 = tk.Radiobutton(fr,text="無し",font=font2,bg=bg1,fg=fg2,value=1,variable=v43,command=lambda:[btn_disable(btns=[rd72,rd73,rd74,rd75,rd76,rd77,rd78]),v_btn_non(v36),error_clear(error_m_hoken)])
rd98 = tk.Radiobutton(fr,text="有り",font=font2,bg=bg1,fg=fg2,value=2,variable=v43,command=lambda:[btn_normal(btns=[rd72,rd73,rd74,rd75,rd76,rd77,rd78]),error_clear(error_m_hoken)])

v36 = tk.IntVar()
v36.set(0)
rd72 = tk.Radiobutton(fr,text="1級",font=font2,bg=bg1,fg=fg2,value=1,variable=v36,command=lambda:[error_clear(error_m_hoken)])
rd73 = tk.Radiobutton(fr,text="2級",font=font2,bg=bg1,fg=fg2,value=2,variable=v36,command=lambda:[error_clear(error_m_hoken)])
rd74 = tk.Radiobutton(fr,text="3級",font=font2,bg=bg1,fg=fg2,value=3,variable=v36,command=lambda:[error_clear(error_m_hoken)])
rd75 = tk.Radiobutton(fr,text="4級",font=font2,bg=bg1,fg=fg2,value=4,variable=v36,command=lambda:[error_clear(error_m_hoken)])
rd76 = tk.Radiobutton(fr,text="5級",font=font2,bg=bg1,fg=fg2,value=5,variable=v36,command=lambda:[error_clear(error_m_hoken)])
rd77 = tk.Radiobutton(fr,text="6級",font=font2,bg=bg1,fg=fg2,value=6,variable=v36,command=lambda:[error_clear(error_m_hoken)])
rd78 = tk.Radiobutton(fr,text="7級",font=font2,bg=bg1,fg=fg2,value=7,variable=v36,command=lambda:[error_clear(error_m_hoken)])

rd72["state"] = "disable"# 初期値をdisableに設定
rd73["state"] = "disable"
rd74["state"] = "disable"
rd75["state"] = "disable"
rd76["state"] = "disable"
rd77["state"] = "disable"
rd78["state"] = "disable"

error_m_hoken = tk.Label(fr,text="",fg="red",bg=bg1)



# 要介護認定
fr = frame_c_hoken
lbl_c_hoken = tk.Label(fr,text="【要介護認定】",font=font2,bg=bg1,fg=fg2)
v37 = tk.IntVar()
v37.set(0)
rd79 = tk.Radiobutton(fr,text="無し",font=font2,bg=bg1,fg=fg2,value=1,variable=v37,command=lambda:[btn_disable(btns=[rd82,rd83,rd84,rd85,rd86,rd87,rd88]),v_btn_non(v38),error_clear(error_c_hoken)])
rd80 = tk.Radiobutton(fr,text="有り",font=font2,bg=bg1,fg=fg2,value=2,variable=v37,command=lambda:[btn_normal(btns=[rd82,rd83,rd84,rd85,rd86,rd87,rd88]),error_clear(error_c_hoken)])
rd81 = tk.Radiobutton(fr,text="申請中",font=font2,bg=bg1,fg=fg2,value=3,variable=v37,command=lambda:[btn_disable(btns=[rd82,rd83,rd84,rd85,rd86,rd87,rd88]),v_btn_non(v38),error_clear(error_c_hoken)])

v38 = tk.IntVar()
v38.set(0)
rd82 = tk.Radiobutton(fr,text="要支援1",font=font2,bg=bg1,fg=fg2,value=1,variable=v38,command=lambda:[error_clear(error_c_hoken)])
rd83 = tk.Radiobutton(fr,text="要支援2",font=font2,bg=bg1,fg=fg2,value=2,variable=v38,command=lambda:[error_clear(error_c_hoken)])
rd84 = tk.Radiobutton(fr,text="要介護1",font=font2,bg=bg1,fg=fg2,value=3,variable=v38,command=lambda:[error_clear(error_c_hoken)])
rd85 = tk.Radiobutton(fr,text="要介護2",font=font2,bg=bg1,fg=fg2,value=4,variable=v38,command=lambda:[error_clear(error_c_hoken)])
rd86 = tk.Radiobutton(fr,text="要介護3",font=font2,bg=bg1,fg=fg2,value=5,variable=v38,command=lambda:[error_clear(error_c_hoken)])
rd87 = tk.Radiobutton(fr,text="要介護4",font=font2,bg=bg1,fg=fg2,value=6,variable=v38,command=lambda:[error_clear(error_c_hoken)])
rd88 = tk.Radiobutton(fr,text="要介護5",font=font2,bg=bg1,fg=fg2,value=7,variable=v38,command=lambda:[error_clear(error_c_hoken)])

rd82["state"] = "disable"# 初期値をdisableに設定
rd83["state"] = "disable"
rd84["state"] = "disable"
rd85["state"] = "disable"
rd86["state"] = "disable"
rd87["state"] = "disable"
rd88["state"] = "disable"

error_c_hoken = tk.Label(fr,text="",fg="red",bg=bg1)



# 同居家族
fr = frame_fam
lbl_fam = tk.Label(fr,text="【同居家族】",font=font2,bg=bg1,fg=fg2)
lbl_fam_sonota = tk.Label(fr,text=": 続柄",font=font2,bg=bg1,fg=fg2)
txt_fam_sonota = tk.Entry(fr,width=20)
txt_fam_sonota["state"] = "disable"

boolvar47 = tk.BooleanVar()
boolvar48 = tk.BooleanVar()
boolvar49 = tk.BooleanVar()
boolvar50 = tk.BooleanVar()
boolvar51 = tk.BooleanVar()
boolvar52 = tk.BooleanVar()

chk47 = tk.Checkbutton(fr,text="配偶者",font=font2,bg=bg1,fg=fg2,variable=boolvar47)
chk48 = tk.Checkbutton(fr,text="子",font=font2,bg=bg1,fg=fg2,variable=boolvar48)
chk49 = tk.Checkbutton(fr,text="孫",font=font2,bg=bg1,fg=fg2,variable=boolvar49)
chk50 = tk.Checkbutton(fr,text="親",font=font2,bg=bg1,fg=fg2,variable=boolvar50)
chk51 = tk.Checkbutton(fr,text="兄弟姉妹",font=font2,bg=bg1,fg=fg2,variable=boolvar51)
chk52 = tk.Checkbutton(fr,text="その他",font=font2,bg=bg1,fg=fg2,variable=boolvar52)

chk47["state"] = "disable"# 初期値をdisableに設定
chk48["state"] = "disable"
chk49["state"] = "disable"
chk50["state"] = "disable"
chk51["state"] = "disable"
chk52["state"] = "disable"

txt_fam_sonota["state"] = "disable"

v39 = tk.IntVar()
v39.set(0)
rd89 = tk.Radiobutton(fr,text="無し",font=font2,bg=bg1,fg=fg2,value=1,variable=v39,
                      command=lambda:[chk_off(boolvars=[boolvar47,boolvar48,boolvar49,boolvar50,boolvar51,boolvar52]),
                                      btn_disable(btns=[chk47,chk48,chk49,chk50,chk51,chk52]),
                                      txt_clear(txt_fam_sonota),
                                      txt_disable(txt_fam_sonota),
                                      error_clear(error_fam)])
rd90 = tk.Radiobutton(fr,text="有り",font=font2,bg=bg1,fg=fg2,value=2,variable=v39,
                      command=lambda:[btn_normal(btns=[chk47,chk48,chk49,chk50,chk51,chk52]),
                                      txt_normal(txt_fam_sonota),
                                      error_clear(error_fam)])

error_fam = tk.Label(fr,text="",fg="red",bg=bg1)





# 主な介護者
fr = frame_kaigo
lbl_kaigo = tk.Label(fr,text="【主な介護者】",font=font2,bg=bg1,fg=fg2)
lbl_kaigo_sonota = tk.Label(fr,text=": 続柄",font=font2,bg=bg1,fg=fg2)
txt_kaigo_sonota = tk.Entry(fr,width=20)

boolvar53 = tk.BooleanVar()
boolvar54 = tk.BooleanVar()
boolvar55 = tk.BooleanVar()
boolvar56 = tk.BooleanVar()
boolvar57 = tk.BooleanVar()
boolvar58 = tk.BooleanVar()

chk53 = tk.Checkbutton(fr,text="配偶者",font=font2,bg=bg1,fg=fg2,variable=boolvar53)
chk54 = tk.Checkbutton(fr,text="子",font=font2,bg=bg1,fg=fg2,variable=boolvar54)
chk55 = tk.Checkbutton(fr,text="孫",font=font2,bg=bg1,fg=fg2,variable=boolvar55)
chk56 = tk.Checkbutton(fr,text="親",font=font2,bg=bg1,fg=fg2,variable=boolvar56)
chk57 = tk.Checkbutton(fr,text="兄弟姉妹",font=font2,bg=bg1,fg=fg2,variable=boolvar57)
chk58 = tk.Checkbutton(fr,text="その他",font=font2,bg=bg1,fg=fg2,variable=boolvar58,command=txt_normal(txt_kaigo_sonota))

chk53["state"] = "disable"# 初期値をdisableに設定
chk54["state"] = "disable"
chk55["state"] = "disable"
chk56["state"] = "disable"
chk57["state"] = "disable"
chk58["state"] = "disable"

txt_kaigo_sonota["state"] = "disable"

v40 = tk.IntVar()
v40.set(0)
rd91 = tk.Radiobutton(fr,text="無し",font=font2,bg=bg1,fg=fg2,value=1,variable=v40,
                      command=lambda:[chk_off(boolvars=[boolvar53,boolvar54,boolvar55,boolvar56,boolvar57,boolvar58]),
                                      btn_disable(btns=[chk53,chk54,chk55,chk56,chk57,chk58]),
                                      txt_clear(txt_kaigo_sonota),
                                      txt_disable(txt_kaigo_sonota),
                                      error_clear(error_kaigo)])
rd92 = tk.Radiobutton(fr,text="有り",font=font2,bg=bg1,fg=fg2,value=2,variable=v40,
                      command=lambda:[btn_normal(btns=[chk53,chk54,chk55,chk56,chk57,chk58]),
                                      txt_normal(txt_kaigo_sonota),
                                      error_clear(error_kaigo)])

error_kaigo = tk.Label(fr,text="",fg="red",bg=bg1)






# 患者が一人で過ごす時間
fr = frame_hitori
lbl_hitori = tk.Label(fr,text="【患者が一人で過ごす時間(家族が不在になる時間)】",font=font2,bg=bg1,fg=fg2)
v41 = tk.IntVar()
v41.set(0)
rd93 = tk.Radiobutton(fr,text="無し",font=font2,bg=bg1,fg=fg2,value=1,variable=v41,command=lambda:[error_clear(error_hitori)])
rd94 = tk.Radiobutton(fr,text="有り",font=font2,bg=bg1,fg=fg2,value=2,variable=v41,command=lambda:[error_clear(error_hitori)])

error_hitori = tk.Label(fr,text="",fg="red",bg=bg1)



# 在宅酸素療法
fr = frame_o2

lbl1 = tk.Label(fr,text="【酸素吸入】",font=font2,bg=bg1,fg=fg2)
v1 = tk.IntVar()
v1.set(0)
rd1 = tk.Radiobutton(fr,text="無し",font=font2,bg=bg1,fg=fg2,value=1,variable=v1,command=lambda:[btn_disable(btns=[rd3,rd4]),txt_clear(txt1),txt_disable(txt1),v_btn_non(v2),error_clear(error_o2_1)])# btn_disable() : 『無し』が選択されていれば、その後の既存の在宅酸素療法の有無の選択ボタンを押すことができない
rd2 = tk.Radiobutton(fr,text="有り",font=font2,bg=bg1,fg=fg2,value=2,variable=v1,command=lambda:[btn_normal(btns=[rd3,rd4]),v_btn_non(v2),txt_clear(txt1),error_clear(error_o2_1)])# btn_normal() : 『有り』が選択されていれば、その後の既存の在宅酸素療法の有無の選択ボタンを押すことができる


lbl2 = tk.Label(fr,text="【既存の在宅酸素療法】",font=font2,bg=bg1,fg=fg2)
v2 = tk.IntVar()
v2.set(0)

rd3 = tk.Radiobutton(fr,text="無し",font=font2,bg=bg1,fg=fg2,value=1,variable=v2,command=lambda:[txt_clear(txt1),txt_disable(txt1),error_clear(error_o2_2)])
rd4 = tk.Radiobutton(fr,text="有り",font=font2,bg=bg1,fg=fg2,value=2,variable=v2,command=lambda:[txt_normal(txt1),error_clear(error_o2_2)])

rd3["state"] = "disable"# 初期値をdisableに設定
rd4["state"] = "disable"


lbl3 = tk.Label(fr,text="業者名",font=font2,bg=bg1,fg=fg2)
txt1 = tk.Entry(fr,width=30)
txt1["state"] = "disable"

error_o2_1 = tk.Label(fr,text="",fg="red",bg=bg1)
error_o2_2 = tk.Label(fr,text="",fg="red",bg=bg1)

# 医療行為
fr = frame_medic

lbl4 = tk.Label(fr,text="【医療行為】",font=font2,bg=bg1,fg=fg2)

v3 = tk.IntVar()
v3.set(0)


rd5 = tk.Radiobutton(fr,text="無し",font=font2,bg=bg1,fg=fg2,value=1,variable=v3,command=lambda:[txt_clear(txt_medic_sonota),txt_disable(txt_medic_sonota),chk_off(boolvars=[boolvar1,boolvar2,boolvar46,boolvar3,boolvar4,boolvar5,boolvar6,boolvar7,boolvar8,boolvar59,boolvar60,boolvar61]),btn_disable(btns=[chk1,chk2,chk46,chk3,chk4,chk5,chk6,chk7,chk8,chk59,chk60,chk61]),error_clear(error_medic)])
rd6 = tk.Radiobutton(fr,text="有り",font=font2,bg=bg1,fg=fg2,value=2,variable=v3,command=lambda:[txt_normal(txt_medic_sonota),btn_normal(btns=[chk1,chk2,chk46,chk3,chk4,chk5,chk6,chk7,chk8,chk59,chk60,chk61]),error_clear(error_medic)])


boolvar1 = tk.BooleanVar()
boolvar2 = tk.BooleanVar()
boolvar46 = tk.BooleanVar()
boolvar3 = tk.BooleanVar()
boolvar4 = tk.BooleanVar()
boolvar5 = tk.BooleanVar()
boolvar6 = tk.BooleanVar()
boolvar7 = tk.BooleanVar()
boolvar8 = tk.BooleanVar()
boolvar59 = tk.BooleanVar()
boolvar60 = tk.BooleanVar()
boolvar61 = tk.BooleanVar()#★boolvar：ここが最終



chk1 = tk.Checkbutton(fr,text="CSCI",font=font2,bg=bg1,fg=fg2,variable=boolvar1)
chk2 = tk.Checkbutton(fr,text="点滴(末梢)",font=font2,bg=bg1,fg=fg2,variable=boolvar2)
chk46 = tk.Checkbutton(fr,text="点滴(CVポート)",font=font2,bg=bg1,fg=fg2,variable=boolvar46)
chk3 = tk.Checkbutton(fr,text="丸山ワクチン",font=font2,bg=bg1,fg=fg2,variable=boolvar3)
chk4 = tk.Checkbutton(fr,text="気管吸引",font=font2,bg=bg1,fg=fg2,variable=boolvar4)
chk5 = tk.Checkbutton(fr,text="吸入",font=font2,bg=bg1,fg=fg2,variable=boolvar5)
chk6 = tk.Checkbutton(fr,text="インスリン注射",font=font2,bg=bg1,fg=fg2,variable=boolvar6)
chk7 = tk.Checkbutton(fr,text="血糖測定",font=font2,bg=bg1,fg=fg2,variable=boolvar7)
chk8 = tk.Checkbutton(fr,text="創傷処置",font=font2,bg=bg1,fg=fg2,variable=boolvar8)
chk59 = tk.Checkbutton(fr,text="腹腔穿刺",font=font2,bg=bg1,fg=fg2,variable=boolvar59)
chk60 = tk.Checkbutton(fr,text="胸腔穿刺",font=font2,bg=bg1,fg=fg2,variable=boolvar60)
chk61 = tk.Checkbutton(fr,text="その他",font=font2,bg=bg1,fg=fg2,variable=boolvar61)#★チェックボタン：ここが最終

chk1["state"] = "disable"# 初期値をdisableに設定
chk2["state"] = "disable"
chk46["state"] = "disable"
chk3["state"] = "disable"
chk4["state"] = "disable"
chk5["state"] = "disable"
chk6["state"] = "disable"
chk7["state"] = "disable"
chk8["state"] = "disable"
chk47["state"] = "disable"
chk59["state"] = "disable"
chk60["state"] = "disable"
chk61["state"] = "disable"

txt_medic_sonota = tk.Entry(fr,width=30)
txt_medic_sonota["state"] = "disable"

error_medic = tk.Label(fr,text="",fg="red",bg=bg1)


# ADL
fr = frame_adl

# 平行移動
fr = frame_heikou


lbl5 = tk.Label(fr,text="【平行移動】",font=font2,bg=bg1,fg=fg2)

v4 = tk.IntVar()
v4.set(0)

rd7 = tk.Radiobutton(fr,text="自立",font=font2,bg=bg1,fg=fg2,value=1,variable=v4,command=lambda:[chk_off(boolvars=[boolvar9,boolvar10,boolvar11,boolvar12]),btn_disable(btns=[rd9,rd10,chk9,chk10,chk11,chk12]),v_btn_non(v5),error_clear(error_heikou)])
rd8 = tk.Radiobutton(fr,text="要介助",font=font2,bg=bg1,fg=fg2,value=2,variable=v4,command=lambda:[btn_normal(btns=[rd9,rd10,chk9,chk10,chk11,chk12]),error_clear(error_heikou)])

v5 = tk.IntVar()
v5.set(0)

rd9 = tk.Radiobutton(fr,text="介護力有り",font=font2,bg=bg1,fg=fg2,value=1,variable=v5,command=lambda:[error_clear(error_heikou)])
rd10 = tk.Radiobutton(fr,text="介護力なし",font=font2,bg=bg1,fg=fg2,value=2,variable=v5,command=lambda:[error_clear(error_heikou)])

rd9["state"] = "disable"# 初期値をdisableに設定
rd10["state"] = "disable"


boolvar9 = tk.BooleanVar()
boolvar10 = tk.BooleanVar()
boolvar11 = tk.BooleanVar()
boolvar12 = tk.BooleanVar()


chk9 = tk.Checkbutton(fr,text="杖歩行・伝い歩き",font=font2,bg=bg1,fg=fg2,variable=boolvar9)
chk10 = tk.Checkbutton(fr,text="歩行器",font=font2,bg=bg1,fg=fg2,variable=boolvar10)
chk11 = tk.Checkbutton(fr,text="車いす",font=font2,bg=bg1,fg=fg2,variable=boolvar11)
chk12 = tk.Checkbutton(fr,text="担送",font=font2,bg=bg1,fg=fg2,variable=boolvar12)

chk9["state"] = "disable"# 初期値をdisableに設定
chk10["state"] = "disable"
chk11["state"] = "disable"
chk12["state"] = "disable"

error_heikou = tk.Label(fr,text="",fg="red",bg=bg1)



# 階段昇降
fr = frame_kaidan

lbl6 = tk.Label(fr,text="【階段昇降】",font=font2,bg=bg1,fg=fg2)

v6 = tk.IntVar()
v6.set(0)

rd11 = tk.Radiobutton(fr,text="自立",font=font2,bg=bg1,fg=fg2,value=1,variable=v6,command=lambda:[chk_off(boolvars=[boolvar13,boolvar14]),btn_disable(btns=[rd13,rd14,chk13,chk14]),v_btn_non(v7),error_clear(error_kaidan)])
rd12 = tk.Radiobutton(fr,text="要介助",font=font2,bg=bg1,fg=fg2,value=2,variable=v6,command=lambda:[btn_normal(btns=[rd13,rd14,chk13,chk14]),error_clear(error_kaidan)])

v7 = tk.IntVar()
v7.set(0)

rd13 = tk.Radiobutton(fr,text="介護力有り",font=font2,bg=bg1,fg=fg2,value=1,variable=v7,command=lambda:[error_clear(error_kaidan)])
rd14 = tk.Radiobutton(fr,text="介護力なし",font=font2,bg=bg1,fg=fg2,value=2,variable=v7,command=lambda:[error_clear(error_kaidan)])

rd13["state"] = "disable"# 初期値をdisableに設定
rd14["state"] = "disable"




boolvar13 = tk.BooleanVar()
boolvar14 = tk.BooleanVar()


chk13 = tk.Checkbutton(fr,text="支え・手すり",font=font2,bg=bg1,fg=fg2,variable=boolvar13)
chk14 = tk.Checkbutton(fr,text="担送",font=font2,bg=bg1,fg=fg2,variable=boolvar14)


chk13["state"] = "disable"# 初期値をdisableに設定
chk14["state"] = "disable"

error_kaidan = tk.Label(fr,text="",fg="red",bg=bg1)


# 移乗
fr = frame_ijou

lbl7 = tk.Label(fr,text="【移乗】",font=font2,bg=bg1,fg=fg2)

v8 = tk.IntVar()
v8.set(0)

rd15 = tk.Radiobutton(fr,text="自立",font=font2,bg=bg1,fg=fg2,value=1,variable=v8,command=lambda:[chk_off(boolvars=[boolvar15,boolvar16]),btn_disable(btns=[rd17,rd18,chk15,chk16]),v_btn_non(v9),error_clear(error_ijou)])
rd16 = tk.Radiobutton(fr,text="要介助",font=font2,bg=bg1,fg=fg2,value=2,variable=v8,command=lambda:[btn_normal(btns=[rd17,rd18,chk15,chk16]),error_clear(error_ijou)])

v9 = tk.IntVar()
v9.set(0)

rd17 = tk.Radiobutton(fr,text="介護力有り",font=font2,bg=bg1,fg=fg2,value=1,variable=v9,command=lambda:[error_clear(error_ijou)])
rd18 = tk.Radiobutton(fr,text="介護力なし",font=font2,value=2,bg=bg1,fg=fg2,variable=v9,command=lambda:[error_clear(error_ijou)])

rd17["state"] = "disable"# 初期値をdisableに設定
rd18["state"] = "disable"


boolvar15 = tk.BooleanVar()
boolvar16 = tk.BooleanVar()


chk15 = tk.Checkbutton(fr,text="一部介助(見守り・軽介助)",font=font2,bg=bg1,fg=fg2,variable=boolvar15)
chk16 = tk.Checkbutton(fr,text="全介助",font=font2,bg=bg1,fg=fg2,variable=boolvar16)


chk15["state"] = "disable"# 初期値をdisableに設定
chk16["state"] = "disable"

error_ijou = tk.Label(fr,text="",fg="red",bg=bg1)


# 食事準備等
fr = frame_syokuji

lbl8 = tk.Label(fr,text="【食事準備等】",font=font2,bg=bg1,fg=fg2)

v10 = tk.IntVar()
v10.set(0)

rd19 = tk.Radiobutton(fr,text="自立",font=font2,bg=bg1,fg=fg2,value=1,variable=v10,command=lambda:[chk_off(boolvars=[boolvar17,boolvar18]),btn_disable(btns=[rd21,rd22,chk17,chk18]),v_btn_non(v11),error_clear(error_syokuji)])
rd20 = tk.Radiobutton(fr,text="要介助",font=font2,bg=bg1,fg=fg2,value=2,variable=v10,command=lambda:[btn_normal(btns=[rd21,rd22,chk17,chk18]),error_clear(error_syokuji)])
rd116 = tk.Radiobutton(fr,text="不要(経管栄養)",font=font2,bg=bg1,fg=fg2,value=3,variable=v10,command=lambda:[chk_off(boolvars=[boolvar17,boolvar18]),btn_disable(btns=[rd21,rd22,chk17,chk18]),v_btn_non(v11),error_clear(error_syokuji)])#★ラジオボタン：ここが最終
v11 = tk.IntVar()
v11.set(0)

rd21 = tk.Radiobutton(fr,text="介護力有り",font=font2,bg=bg1,fg=fg2,value=1,variable=v11,command=lambda:[error_clear(error_syokuji)])
rd22 = tk.Radiobutton(fr,text="介護力なし",font=font2,bg=bg1,fg=fg2,value=2,variable=v11,command=lambda:[error_clear(error_syokuji)])

rd21["state"] = "disable"# 初期値をdisableに設定
rd22["state"] = "disable"


boolvar17 = tk.BooleanVar()
boolvar18 = tk.BooleanVar()


chk17 = tk.Checkbutton(fr,text="材料調達",font=font2,bg=bg1,fg=fg2,variable=boolvar17)
chk18 = tk.Checkbutton(fr,text="調理・後片付け",font=font2,bg=bg1,fg=fg2,variable=boolvar18)


chk17["state"] = "disable"# 初期値をdisableに設定
chk18["state"] = "disable"

error_syokuji = tk.Label(fr,text="",fg="red",bg=bg1)


# 摂食
fr = frame_sessyoku

lbl9 = tk.Label(fr,text="【摂食】",font=font2,bg=bg1,fg=fg2)

v12 = tk.IntVar()
v12.set(0)

rd23 = tk.Radiobutton(fr,text="自立",font=font2,bg=bg1,fg=fg2,value=1,variable=v12,command=lambda:[chk_off(boolvars=[boolvar19,boolvar20,boolvar21]),btn_disable(btns=[rd25,rd26,chk19,chk20,chk21]),v_btn_non(v13),error_clear(error_sessyoku)])
rd24 = tk.Radiobutton(fr,text="要介助",font=font2,bg=bg1,fg=fg2,value=2,variable=v12,command=lambda:[btn_normal(btns=[rd25,rd26,chk19,chk20,chk21]),error_clear(error_sessyoku)])

v13 = tk.IntVar()
v13.set(0)

rd25 = tk.Radiobutton(fr,text="介護力有り",font=font2,bg=bg1,fg=fg2,value=1,variable=v13,command=lambda:[error_clear(error_sessyoku)])
rd26 = tk.Radiobutton(fr,text="介護力なし",font=font2,bg=bg1,fg=fg2,value=2,variable=v13,command=lambda:[error_clear(error_sessyoku)])

rd25["state"] = "disable"# 初期値をdisableに設定
rd26["state"] = "disable"


boolvar19 = tk.BooleanVar()
boolvar20 = tk.BooleanVar()
boolvar21 = tk.BooleanVar()


chk19 = tk.Checkbutton(fr,text="食事介助",font=font2,bg=bg1,fg=fg2,variable=boolvar19)
chk20 = tk.Checkbutton(fr,text="経管栄養(経鼻)",font=font2,bg=bg1,fg=fg2,variable=boolvar20)
chk21 = tk.Checkbutton(fr,text="経管栄養(胃瘻)",font=font2,bg=bg1,fg=fg2,variable=boolvar21)


chk19["state"] = "disable"# 初期値をdisableに設定
chk20["state"] = "disable"
chk21["state"] = "disable"

error_sessyoku = tk.Label(fr,text="",fg="red",bg=bg1)


# 排泄
fr = frame_haisetsu

lbl10 = tk.Label(fr,text="【排泄】",font=font2,bg=bg1,fg=fg2)

v14 = tk.IntVar()
v14.set(0)

rd27 = tk.Radiobutton(fr,text="自立",font=font2,bg=bg1,fg=fg2,value=1,variable=v14,command=lambda:[chk_off(boolvars=[boolvar22,boolvar23,boolvar24,boolvar25,boolvar26,boolvar27]),btn_disable(btns=[rd29,rd30,chk22,chk23,chk24,chk25,chk26,chk27]),v_btn_non(v15),error_clear(error_haisetsu)])
rd28 = tk.Radiobutton(fr,text="要介助",font=font2,bg=bg1,fg=fg2,value=2,variable=v14,command=lambda:[btn_normal(btns=[rd29,rd30,chk22,chk23,chk24,chk25,chk26,chk27]),error_clear(error_haisetsu)])

v15 = tk.IntVar()
v15.set(0)

rd29 = tk.Radiobutton(fr,text="介護力有り",font=font2,bg=bg1,fg=fg2,value=1,variable=v15,command=lambda:[error_clear(error_haisetsu)])
rd30 = tk.Radiobutton(fr,text="介護力なし",font=font2,bg=bg1,fg=fg2,value=2,variable=v15,command=lambda:[error_clear(error_haisetsu)])

rd29["state"] = "disable"# 初期値をdisableに設定
rd30["state"] = "disable"




boolvar22 = tk.BooleanVar()
boolvar23 = tk.BooleanVar()
boolvar24= tk.BooleanVar()
boolvar25 = tk.BooleanVar()
boolvar26 = tk.BooleanVar()
boolvar27= tk.BooleanVar()


chk22 = tk.Checkbutton(fr,text="ポータブルトイレ",font=font2,bg=bg1,fg=fg2,variable=boolvar22)
chk23 = tk.Checkbutton(fr,text="尿器",font=font2,bg=bg1,fg=fg2,variable=boolvar23)
chk24 = tk.Checkbutton(fr,text="オムツ",font=font2,bg=bg1,fg=fg2,variable=boolvar24)
chk25 = tk.Checkbutton(fr,text="膀胱留置カテーテル",font=font2,bg=bg1,fg=fg2,variable=boolvar25)
chk26 = tk.Checkbutton(fr,text="腎瘻",font=font2,bg=bg1,fg=fg2,variable=boolvar26)
chk27 = tk.Checkbutton(fr,text="ストマ",font=font2,bg=bg1,fg=fg2,variable=boolvar27)


chk22["state"] = "disable"# 初期値をdisableに設定
chk23["state"] = "disable"
chk24["state"] = "disable"
chk25["state"] = "disable"
chk26["state"] = "disable"
chk27["state"] = "disable"

error_haisetsu = tk.Label(fr,text="",fg="red",bg=bg1)

# 入浴
fr = frame_nyuyoku

lbl11 = tk.Label(fr,text="【入浴】",font=font2,bg=bg1,fg=fg2)

v16 = tk.IntVar()
v16.set(0)

rd31 = tk.Radiobutton(fr,text="自立",font=font2,bg=bg1,fg=fg2,value=1,variable=v16,command=lambda:[chk_off(boolvars=[boolvar28,boolvar29]),btn_disable(btns=[rd33,rd34,chk28,chk29]),v_btn_non(v17),error_clear(error_nyuyoku)])
rd32 = tk.Radiobutton(fr,text="要介助",font=font2,bg=bg1,fg=fg2,value=2,variable=v16,command=lambda:[btn_normal(btns=[rd33,rd34,chk28,chk29]),error_clear(error_nyuyoku)])

v17 = tk.IntVar()
v17.set(0)

rd33 = tk.Radiobutton(fr,text="介護力有り",font=font2,bg=bg1,fg=fg2,value=1,variable=v17,command=lambda:[error_clear(error_nyuyoku)])
rd34 = tk.Radiobutton(fr,text="介護力なし",font=font2,bg=bg1,fg=fg2,value=2,variable=v17,command=lambda:[error_clear(error_nyuyoku)])

rd33["state"] = "disable"# 初期値をdisableに設定
rd34["state"] = "disable"




boolvar28 = tk.BooleanVar()
boolvar29 = tk.BooleanVar()


chk28 = tk.Checkbutton(fr,text="一部介助(介助浴)",font=font2,bg=bg1,fg=fg2,variable=boolvar28)
chk29 = tk.Checkbutton(fr,text="全介助(リフト浴)",font=font2,bg=bg1,fg=fg2,variable=boolvar29)



chk28["state"] = "disable"# 初期値をdisableに設定
chk29["state"] = "disable"

error_nyuyoku = tk.Label(fr,text="",fg="red",bg=bg1)


# 口腔ケア
fr = frame_kouku

lbl12 = tk.Label(fr,text="【口腔ケア】",font=font2,bg=bg1,fg=fg2)

v18 = tk.IntVar()
v18.set(0)

rd35 = tk.Radiobutton(fr,text="自立",font=font2,bg=bg1,fg=fg2,value=1,variable=v18,command=lambda:[chk_off(boolvars=[boolvar30,boolvar31,boolvar32]),btn_disable(btns=[rd37,rd38,chk30,chk31,chk32]),v_btn_non(v19),error_clear(error_kouku)])
rd36 = tk.Radiobutton(fr,text="要介助",font=font2,bg=bg1,fg=fg2,value=2,variable=v18,command=lambda:[btn_normal(btns=[rd37,rd38,chk30,chk31,chk32]),error_clear(error_kouku)])

v19 = tk.IntVar()
v19.set(0)

rd37 = tk.Radiobutton(fr,text="介護力有り",font=font2,bg=bg1,fg=fg2,value=1,variable=v19,command=lambda:[error_clear(error_kouku)])
rd38 = tk.Radiobutton(fr,text="介護力なし",font=font2,bg=bg1,fg=fg2,value=2,variable=v19,command=lambda:[error_clear(error_kouku)])

rd37["state"] = "disable"# 初期値をdisableに設定
rd38["state"] = "disable"




boolvar30 = tk.BooleanVar()
boolvar31 = tk.BooleanVar()
boolvar32 = tk.BooleanVar()



chk30 = tk.Checkbutton(fr,text="セッティング",font=font2,bg=bg1,fg=fg2,variable=boolvar30)
chk31 = tk.Checkbutton(fr,text="歯磨き・うがい",font=font2,bg=bg1,fg=fg2,variable=boolvar31)
chk32 = tk.Checkbutton(fr,text="入れ歯",font=font2,bg=bg1,fg=fg2,variable=boolvar32)



chk30["state"] = "disable"# 初期値をdisableに設定
chk31["state"] = "disable"
chk32["state"] = "disable"

error_kouku = tk.Label(fr,text="",fg="red",bg=bg1)

# 更衣
fr = frame_koui

lbl13 = tk.Label(fr,text="【更衣】",font=font2,bg=bg1,fg=fg2)

v20 = tk.IntVar()
v20.set(0)

rd39 = tk.Radiobutton(fr,text="自立",font=font2,bg=bg1,fg=fg2,value=1,variable=v20,command=lambda:[chk_off(boolvars=[boolvar33,boolvar34]),btn_disable(btns=[rd41,rd42,chk33,chk34]),v_btn_non(v21),error_clear(error_koui)])
rd40 = tk.Radiobutton(fr,text="要介助",font=font2,bg=bg1,fg=fg2,value=2,variable=v20,command=lambda:[btn_normal(btns=[rd41,rd42,chk33,chk34]),error_clear(error_koui)])

v21 = tk.IntVar()
v21.set(0)

rd41 = tk.Radiobutton(fr,text="介護力有り",font=font2,bg=bg1,fg=fg2,value=1,variable=v21,command=lambda:[error_clear(error_koui)])
rd42 = tk.Radiobutton(fr,text="介護力なし",font=font2,bg=bg1,fg=fg2,value=2,variable=v21,command=lambda:[error_clear(error_koui)])

rd41["state"] = "disable"# 初期値をdisableに設定
rd42["state"] = "disable"


boolvar33 = tk.BooleanVar()
boolvar34 = tk.BooleanVar()


chk33 = tk.Checkbutton(fr,text="一部介助(袖・ボタンなど)",font=font2,bg=bg1,fg=fg2,variable=boolvar33)
chk34 = tk.Checkbutton(fr,text="全介助",font=font2,bg=bg1,fg=fg2,variable=boolvar34)


chk33["state"] = "disable"# 初期値をdisableに設定
chk34["state"] = "disable"

error_koui = tk.Label(fr,text="",fg="red",bg=bg1)

# 内服


fr = frame_naihuku

lbl14 = tk.Label(fr,text="【内服】",font=font2,bg=bg1,fg=fg2)

v22 = tk.IntVar()
v22.set(0)

rd43 = tk.Radiobutton(fr,text="自立",font=font2,bg=bg1,fg=fg2,value=1,variable=v22,command=lambda:[chk_off(boolvars=[boolvar35,boolvar45,boolvar36,boolvar37]),btn_disable(btns=[rd45,rd46,chk35,chk45,chk36,chk37]),v_btn_non(v23),error_clear(error_naihuku)])
rd44 = tk.Radiobutton(fr,text="要介助",font=font2,bg=bg1,fg=fg2,value=2,variable=v22,command=lambda:[btn_normal(btns=[rd45,rd46,chk35,chk45,chk36,chk37]),error_clear(error_naihuku)])

v23 = tk.IntVar()
v23.set(0)

rd45 = tk.Radiobutton(fr,text="介護力有り",font=font2,bg=bg1,fg=fg2,value=1,variable=v23,command=lambda:[error_clear(error_naihuku)])
rd46 = tk.Radiobutton(fr,text="介護力なし",font=font2,bg=bg1,fg=fg2,value=2,variable=v23,command=lambda:[error_clear(error_naihuku)])

rd45["state"] = "disable"# 初期値をdisableに設定
rd46["state"] = "disable"


boolvar35 = tk.BooleanVar()
boolvar45 = tk.BooleanVar()
boolvar36 = tk.BooleanVar()
boolvar37 = tk.BooleanVar()


chk35 = tk.Checkbutton(fr,text="確実与薬",font=font2,bg=bg1,fg=fg2,variable=boolvar35)
chk45 = tk.Checkbutton(fr,text="一回配薬",font=font2,bg=bg1,fg=fg2,variable=boolvar45)
chk36 = tk.Checkbutton(fr,text="簡易懸濁",font=font2,bg=bg1,fg=fg2,variable=boolvar36)
chk37 = tk.Checkbutton(fr,text="経管投与(経鼻・胃瘻)",font=font2,bg=bg1,fg=fg2,variable=boolvar37)


chk35["state"] = "disable"# 初期値をdisableに設定
chk45["state"] = "disable"
chk36["state"] = "disable"
chk37["state"] = "disable"

error_naihuku = tk.Label(fr,text="",fg="red",bg=bg1)


# 家屋環境

fr = frame_kankyo

lbl15 = tk.Label(fr,text="【段差(敷地全体)】",font=font2,bg=bg1,fg=fg2)
v24 = tk.IntVar()
v24.set(0)
rd47 = tk.Radiobutton(fr,text="無し",font=font2,bg=bg1,fg=fg2,value=1,variable=v24,command=lambda:[error_clear(error_dansa)])
rd48 = tk.Radiobutton(fr,text="有り",font=font2,bg=bg1,fg=fg2,value=2,variable=v24,command=lambda:[error_clear(error_dansa)])
rd111 = tk.Radiobutton(fr,text="不明",font=font2,bg=bg1,fg=fg2,value=3,variable=v24,command=lambda:[error_clear(error_dansa)])

error_dansa = tk.Label(fr,text="",fg="red",bg=bg1)


lbl16 = tk.Label(fr,text="【車いすが通れる幅(90cm)】",font=font2,bg=bg1,fg=fg2)
v25 = tk.IntVar()
v25.set(0)
rd49 = tk.Radiobutton(fr,text="無し",font=font2,bg=bg1,fg=fg2,value=1,variable=v25,command=lambda:[error_clear(error_kurumaisu)])
rd50 = tk.Radiobutton(fr,text="有り",font=font2,bg=bg1,fg=fg2,value=2,variable=v25,command=lambda:[error_clear(error_kurumaisu)])
rd112 = tk.Radiobutton(fr,text="不明",font=font2,bg=bg1,fg=fg2,value=3,variable=v25,command=lambda:[error_clear(error_dansa)])

error_kurumaisu = tk.Label(fr,text="",fg="red",bg=bg1)

lbl17 = tk.Label(fr,text="【生活環境】",font=font2,bg=bg1,fg=fg2)
v45 = tk.IntVar()
v45.set(0)
rd101 = tk.Radiobutton(fr,text="居室フロアで生活可",font=font2,bg=bg1,fg=fg2,value=1,variable=v45,command=lambda:[error_clear(error_seikatsu)])
rd102 = tk.Radiobutton(fr,text="他フロアへの移動を要する",font=font2,bg=bg1,fg=fg2,value=2,variable=v45,command=lambda:[error_clear(error_seikatsu)])

error_seikatsu = tk.Label(fr,text="",fg="red",bg=bg1)

# 書き直しのためコメントアウト
"""
# 医療用麻薬
fr = frame_mayaku

lbl17 = tk.Label(fr,text="【貼付剤】")
v26 = tk.IntVar()
v26.set(0)
rd51 = tk.Radiobutton(fr,text="無し",value=1,variable=v26)
rd52 = tk.Radiobutton(fr,text="有り",value=2,variable=v26)


lbl18 = tk.Label(fr,text="【定期内服】")
v27 = tk.IntVar()
v27.set(0)
rd53 = tk.Radiobutton(fr,text="無し",value=1,variable=v27)
rd54 = tk.Radiobutton(fr,text="有り",value=2,variable=v27)


lbl19 = tk.Label(fr,text="【レスキュー】")
v28 = tk.IntVar()
v28.set(0)
rd55 = tk.Radiobutton(fr,text="無し",value=1,variable=v28)
rd56 = tk.Radiobutton(fr,text="有り",value=2,variable=v28)
"""


# 追加
# ADL
# 体動

fr = frame_taidou

lbl20 = tk.Label(fr,text="【体動】",font=font2,bg=bg1,fg=fg2)

v29 = tk.IntVar()
v29.set(0)

rd57 = tk.Radiobutton(fr,text="自立",font=font2,bg=bg1,fg=fg2,value=1,variable=v29,command=lambda:[chk_off(boolvars=[boolvar38,boolvar39,boolvar40]),btn_disable(btns=[rd59,rd60,chk38,chk39,chk40]),v_btn_non(v30),error_clear(error_taidou)])
rd58 = tk.Radiobutton(fr,text="要介助",font=font2,bg=bg1,fg=fg2,value=2,variable=v29,command=lambda:[btn_normal(btns=[rd59,rd60,chk38,chk39,chk40]),error_clear(error_taidou)])

v30 = tk.IntVar()
v30.set(0)

rd59 = tk.Radiobutton(fr,text="介護力有り",font=font2,bg=bg1,fg=fg2,value=1,variable=v30,command=lambda:[error_clear(error_taidou)])
rd60 = tk.Radiobutton(fr,text="介護力なし",font=font2,bg=bg1,fg=fg2,value=2,variable=v30,command=lambda:[error_clear(error_taidou)])

rd59["state"] = "disable"# 初期値をdisableに設定
rd60["state"] = "disable"




boolvar38 = tk.BooleanVar()
boolvar39 = tk.BooleanVar()
boolvar40 = tk.BooleanVar()



chk38 = tk.Checkbutton(fr,text="起き上がり",font=font2,bg=bg1,fg=fg2,variable=boolvar38)
chk39 = tk.Checkbutton(fr,text="寝返り",font=font2,bg=bg1,fg=fg2,variable=boolvar39)
chk40 = tk.Checkbutton(fr,text="座位保持",font=font2,bg=bg1,fg=fg2,variable=boolvar40)



chk38["state"] = "disable"# 初期値をdisableに設定
chk39["state"] = "disable"
chk40["state"] = "disable"

error_taidou = tk.Label(fr,text="",fg="red",bg=bg1)


# 医療用麻薬
fr = frame_mayaku


lbl21 = tk.Label(fr,text="【医療用麻薬】",font=font2,bg=bg1,fg=fg2)

v31 = tk.IntVar()
v31.set(0)


rd61 = tk.Radiobutton(fr,text="無し",font=font2,bg=bg1,fg=fg2,value=1,variable=v31,
                      command=lambda:[chk_off(boolvars=[boolvar41,boolvar42,boolvar43,boolvar44]),
                                      btn_disable(btns=[chk41,chk42,chk43,chk44]),
                                      error_clear(error_mayaku)])
rd62 = tk.Radiobutton(fr,text="有り",font=font2,bg=bg1,fg=fg2,value=2,variable=v31,
                      command=lambda:[btn_normal(btns=[chk41,chk42,chk43,chk44]),
                                      error_clear(error_mayaku)])


boolvar41 = tk.BooleanVar()
boolvar42 = tk.BooleanVar()
boolvar43 = tk.BooleanVar()
boolvar44 = tk.BooleanVar()

chk41 = tk.Checkbutton(fr,text="CSCI",font=font2,bg=bg1,fg=fg2,variable=boolvar41)
chk42 = tk.Checkbutton(fr,text="貼付剤",font=font2,bg=bg1,fg=fg2,variable=boolvar42)
chk43 = tk.Checkbutton(fr,text="定期内服",font=font2,bg=bg1,fg=fg2,variable=boolvar43)
chk44 = tk.Checkbutton(fr,text="レスキュー",font=font2,bg=bg1,fg=fg2,variable=boolvar44)


chk41["state"] = "disable"# 初期値をdisableに設定
chk42["state"] = "disable"
chk43["state"] = "disable"
chk44["state"] = "disable"

error_mayaku = tk.Label(fr,text="",fg="red",bg=bg1)

# 退院手段
fr = frame_sonota
lbl_syudan = tk.Label(fr,text="【退院手段】",font=font2,bg=bg1,fg=fg2)

v49 = tk.IntVar()#★tk.IntVarここが最終
v49.set(0)

rd113 = tk.Radiobutton(fr,text="本人のみ",font=font2,bg=bg1,fg=fg2,value=1,variable=v49,command=lambda:[error_clear(error_syudan)])
rd114 = tk.Radiobutton(fr,text="家族送迎",font=font2,bg=bg1,fg=fg2,value=2,variable=v49,command=lambda:[error_clear(error_syudan)])
rd115 = tk.Radiobutton(fr,text="介護タクシー",font=font2,bg=bg1,fg=fg2,value=3,variable=v49,command=lambda:[error_clear(error_syudan)])

error_syudan = tk.Label(fr,text="",fg="red",bg=bg1)



# 作成ボタン
btn_sakusei = tk.Button(frame_none,text="作成",font=font2,bg=bg1,fg=fg2,command=taiinshien)

"""
# エラー表示ラベル
lbl_error1 = tk.Label(frame_o2,text="",fg="red")
lbl_error2 = tk.Label(frame_o2,text="",fg="red")
lbl_error3 = tk.Label(frame_medic,text="",fg="red")
lbl_error4 = tk.Label(frame_adl,text="",fg="red")
lbl_error_end = tk.Label(frame_none,text="",fg="red")
"""
lbl_end_comment = tk.Label(frame_none,text="",fg="red",bg=bg1)
#lbl_end_comment2 = tk.Label(frame_none,text="",fg="blue")



# ≪ウィジェット配置≫
# 情報入力
# 名前等
lbl_id.place(x=100,y=50)
txt_id.place(x=185,y=55)

lbl_name.place(x=350,y=50)
txt_name.place(x=435,y=55)

lbl_gender.place(x=100,y=100)
rd99.place(x=175,y=100)
rd100.place(x=225,y=100)

lbl_age.place(x=350,y=100)
txt_age.place(x=435,y=105)

lbl_disease.place(x=100,y=150)
txt_disease.place(x=185,y=155)

error_namae.place(x=700,y=50)

# 在宅医療等介入予定
place_medic_1(lbl_yotei,error_yotei,100,50,rds=[],chks=[])
place_medic(lbl_s_yotei,100,100,rds=[rd63,rd64,rd65],chks=[])
place_medic(lbl_n_yotei,100,250,rds=[rd103,rd104,rd105],chks=[])
place_medic(lbl_care_yotei,100,400,rds=[rd106,rd107,rd108],chks=[])


# 既存の在宅医療等
"""
lbl_c_mane = tk.Label(fr,text="◆ケアマネージャー")
v47 = tk.IntVar()
v48.set(0)
rd109 = tk.Radiobutton(fr,text="無し",value=1,variable=v47,command=lambda:[txt_clear(txt_c_mane),txt_clear(txt_c_tel),txt_disable(txt_c_mane),txt_disable(txt_c_tel),error_clear(error_zaitaku)])
rd110 = tk.Radiobutton(fr,text="有り",value=2,variable=v47,command=lambda:[txt_normal(txt_c_mane),txt_normal(txt_c_tel),error_clear(error_zaitaku)])
lbl_c_name = tk.Label(fr,text="名前")
lbl_c_tel = tk.Label(fr,text="連絡先")
txt_c_mane = tk.Entry(fr,width=20)
txt_c_tel = tk.Entry(fr,width=20)
txt_c_mane["state"] = "disable"
txt_c_tel["state"] = "disable"
# ★最終訂正箇所

"""
lbl_zaitaku.place(x=100,y=50)
error_zaitaku.place(x=300,y=50)
place_medic(lbl_shinryou,100,100,rds=[rd66,rd67],chks=[])
place_medic(lbl_kango,100,250,rds=[rd68,rd69],chks=[])
place_medic(lbl_care,100,400,rds=[rd70,rd71],chks=[])
place_medic(lbl_c_mane,100,550,rds=[rd109,rd110],chks=[])

lbl_d_office.place(x=365,y=150)
txt_shinryou.place(x=450,y=155)
lbl_n_office.place(x=365,y=300)
txt_kango.place(x=450,y=305)
lbl_c_office.place(x=365,y=450)
txt_care.place(x=450,y=455)
lbl_c_name.place(x=370,y=600)
txt_c_mane.place(x=420,y=605)
lbl_c_tel.place(x=565,y=600)
txt_c_tel.place(x=630,y=605)


# 保険・経済状況
lbl_m_hoken.place(x=100,y=50)
error_m_hoken.place(x=300,y=50)
place_medic(lbl_seikatsuhogo,100,100,rds=[rd95,rd96],chks=[])
place_medic(lbl_shinsyousya,100,250,rds=[rd97,rd98],chks=[])
rd72.place(x=100,y=350)
rd73.place(x=200,y=350)
rd74.place(x=300,y=350)
rd75.place(x=400,y=350)
rd76.place(x=500,y=350)
rd77.place(x=600,y=350)
rd78.place(x=700,y=350)

# 介護保険
place_medic_1(lbl_c_hoken,error_c_hoken,100,50,rds=[rd79,rd80,rd81],chks=[])
rd82.place(x=100,y=150)
rd83.place(x=200,y=150)
rd84.place(x=100,y=200)
rd85.place(x=200,y=200)
rd86.place(x=300,y=200)
rd87.place(x=400,y=200)
rd88.place(x=500,y=200)

# 同居家族
place_medic_1(lbl_fam,error_fam,100,50,rds=[rd89,rd90],chks=[chk47,chk48,chk49,chk50,chk51,chk52])
lbl_fam_sonota.place(x=390,y=200)
txt_fam_sonota.place(x=445,y=205)

# 主な介護者
place_medic_1(lbl_kaigo,error_kaigo,100,50,rds=[rd91,rd92],chks=[chk53,chk54,chk55,chk56,chk57,chk58])
lbl_kaigo_sonota.place(x=390,y=200)
txt_kaigo_sonota.place(x=445,y=205)

# 患者が一人で過ごす時間
place_medic(lbl_hitori,100,50,rds=[rd93,rd94],chks=[])
error_hitori.place(x=450,y=50)
# 在宅酸素療法
place_medic_1(lbl1,error_o2_1,100,50,rds=[rd1,rd2],chks=[])
place_medic_1(lbl2,error_o2_2,100,150,rds=[rd3,rd4],chks=[])

lbl3.place(x=100,y=250)
txt1.place(x=170,y=255)

# 医療行為
place_medic_1(lbl4,error_medic,a=100,b=50,rds=[rd5,rd6],chks=[chk1,chk2,chk46,chk3,chk4,chk5,chk6,chk7,chk8,chk59,chk60,chk61])
txt_medic_sonota.place(x=820,y=260)

# ADL
# 平行移動
place_adl_1(lbl5,error_heikou,100,50,rd1s=[rd7,rd8],rd2s=[rd9,rd10],chks=[chk9,chk10,chk11,chk12])
# 階段昇降
place_adl_1(lbl6,error_kaidan,100,50,rd1s=[rd11,rd12],rd2s=[rd13,rd14],chks=[chk13,chk14])
# 移乗
place_adl_1(lbl7,error_ijou,100,50,rd1s=[rd15,rd16],rd2s=[rd17,rd18],chks=[chk15,chk16])
# 食事準備等
place_adl_1(lbl8,error_syokuji,100,50,rd1s=[rd19,rd20,rd116],rd2s=[rd21,rd22],chks=[chk17,chk18])
# 摂食
place_adl_1(lbl9,error_sessyoku,100,50,rd1s=[rd23,rd24],rd2s=[rd25,rd26],chks=[chk19,chk20,chk21])
# 排泄
place_adl_1(lbl10,error_haisetsu,100,50,rd1s=[rd27,rd28],rd2s=[rd29,rd30],chks=[chk22,chk23,chk24,chk25,chk26,chk27])
# 入浴
place_adl_1(lbl11,error_nyuyoku,100,50,rd1s=[rd31,rd32],rd2s=[rd33,rd34],chks=[chk28,chk29])
# 口腔ケア
place_adl_1(lbl12,error_kouku,100,50,rd1s=[rd35,rd36],rd2s=[rd37,rd38],chks=[chk30,chk31,chk32])
# 更衣
place_adl_1(lbl13,error_koui,100,50,rd1s=[rd39,rd40],rd2s=[rd41,rd42],chks=[chk33,chk34])
# 内服
place_adl_1(lbl14,error_naihuku,100,50,rd1s=[rd43,rd44],rd2s=[rd45,rd46],chks=[chk35,chk45,chk36,chk37])
# 体動
place_adl_1(lbl20,error_taidou,100,50,rd1s=[rd57,rd58],rd2s=[rd59,rd60],chks=[chk38,chk39,chk40])

# 家屋環境
place_medic_1(lbl15,error_dansa,100,50,rds=[rd47,rd48,rd111],chks=[])
place_medic(lbl16,100,200,rds=[rd49,rd50,rd112],chks=[])
error_kurumaisu.place(x=400,y=200)

place_medic_1(lbl17,error_seikatsu,100,350,rds=[rd101,rd102],chks=[])

# 医療用麻薬
place_medic_1(lbl21,error_mayaku,100,50,rds=[rd61,rd62],chks=[chk41,chk42,chk43,chk44])

# 退院手段
place_medic_1(lbl_syudan,error_syudan,100,50,rds=[rd113,rd114,rd115],chks=[])



# 作成ボタン
btn_sakusei.place(x=50,y=50)

"""
# エラーラベル
lbl_error1.place(x=250,y=50)
lbl_error2.place(x=250,y=150)
lbl_error3.place(x=250,y=50)
lbl_error4.place(x=200,y=50)
lbl_error_end.place(x=150,y=50)
"""
lbl_end_comment.place(x=150,y=50)
#lbl_end_comment2.place(x=150,y=60)

root.mainloop()

    



